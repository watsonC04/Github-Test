
Lab 5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000148  00800100  000065f6  0000668a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000065f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035e  00800248  00800248  000067d2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000067d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006830  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003a8  00000000  00000000  00006870  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006c82  00000000  00000000  00006c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010a1  00000000  00000000  0000d89a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000046b4  00000000  00000000  0000e93b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001278  00000000  00000000  00012ff0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d10  00000000  00000000  00014268  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00008ebd  00000000  00000000  00014f78  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000338  00000000  00000000  0001de35  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cb 12 	jmp	0x2596	; 0x2596 <__ctors_end>
       4:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
       8:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
       c:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      10:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      14:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      18:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      1c:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      20:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      24:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      28:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      2c:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      30:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      34:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      38:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      3c:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      40:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      44:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      48:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      4c:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      50:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      54:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      58:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      5c:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      60:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      64:	0c 94 e8 12 	jmp	0x25d0	; 0x25d0 <__bad_interrupt>
      68:	f0 2c       	mov	r15, r0
      6a:	f7 2c       	mov	r15, r7
      6c:	64 2e       	mov	r6, r20
      6e:	6c 2d       	mov	r22, r12
      70:	64 2e       	mov	r6, r20
      72:	64 2e       	mov	r6, r20
      74:	64 2e       	mov	r6, r20
      76:	5b 2e       	mov	r5, r27
      78:	64 2e       	mov	r6, r20
      7a:	64 2e       	mov	r6, r20
      7c:	64 2e       	mov	r6, r20
      7e:	64 2e       	mov	r6, r20
      80:	64 2e       	mov	r6, r20
      82:	64 2e       	mov	r6, r20
      84:	64 2e       	mov	r6, r20
      86:	64 2e       	mov	r6, r20
      88:	64 2e       	mov	r6, r20
      8a:	64 2e       	mov	r6, r20
      8c:	64 2e       	mov	r6, r20
      8e:	64 2e       	mov	r6, r20
      90:	64 2e       	mov	r6, r20
      92:	64 2e       	mov	r6, r20
      94:	64 2e       	mov	r6, r20
      96:	64 2e       	mov	r6, r20
      98:	64 2e       	mov	r6, r20
      9a:	64 2e       	mov	r6, r20
      9c:	64 2e       	mov	r6, r20
      9e:	64 2e       	mov	r6, r20
      a0:	64 2e       	mov	r6, r20
      a2:	64 2e       	mov	r6, r20
      a4:	64 2e       	mov	r6, r20
      a6:	64 2e       	mov	r6, r20
      a8:	64 2e       	mov	r6, r20
      aa:	64 2e       	mov	r6, r20
      ac:	64 2e       	mov	r6, r20
      ae:	64 2e       	mov	r6, r20
      b0:	64 2e       	mov	r6, r20
      b2:	64 2e       	mov	r6, r20
      b4:	64 2e       	mov	r6, r20
      b6:	64 2e       	mov	r6, r20
      b8:	64 2e       	mov	r6, r20
      ba:	64 2e       	mov	r6, r20
      bc:	64 2e       	mov	r6, r20
      be:	64 2e       	mov	r6, r20
      c0:	64 2e       	mov	r6, r20
      c2:	64 2e       	mov	r6, r20
      c4:	64 2e       	mov	r6, r20
      c6:	64 2e       	mov	r6, r20
      c8:	64 2e       	mov	r6, r20
      ca:	64 2e       	mov	r6, r20
      cc:	00 2e       	mov	r0, r16
      ce:	06 2e       	mov	r0, r22
      d0:	18 2e       	mov	r1, r24
      d2:	2a 2e       	mov	r2, r26
      d4:	47 2e       	mov	r4, r23

000000d6 <__trampolines_end>:
      d6:	c8 2e       	mov	r12, r24
      d8:	00 2e       	mov	r0, r16
      da:	80 2e       	mov	r8, r16
      dc:	3d b1       	in	r19, 0x0d	; 13
      de:	c8 2e       	mov	r12, r24
      e0:	00 2e       	mov	r0, r16
      e2:	80 2e       	mov	r8, r16
      e4:	91 03       	fmuls	r17, r17
      e6:	80 2e       	mov	r8, r16
      e8:	bc b0       	in	r11, 0x0c	; 12
      ea:	80 2e       	mov	r8, r16
      ec:	a3 03       	fmuls	r18, r19
      ee:	c8 2e       	mov	r12, r24
      f0:	00 2e       	mov	r0, r16
      f2:	80 2e       	mov	r8, r16
      f4:	00 b0       	in	r0, 0x00	; 0
      f6:	50 30       	cpi	r21, 0x00	; 0
      f8:	21 2e       	mov	r2, r17
      fa:	59 f5       	brne	.+86     	; 0x152 <__trampolines_end+0x7c>
      fc:	10 30       	cpi	r17, 0x00	; 0
      fe:	21 2e       	mov	r2, r17
     100:	6a f5       	brpl	.+90     	; 0x15c <__trampolines_end+0x86>
     102:	80 2e       	mov	r8, r16
     104:	3b 03       	fmul	r19, r19
     106:	00 00       	nop
     108:	00 00       	nop
     10a:	08 19       	sub	r16, r8
     10c:	01 00       	.word	0x0001	; ????
     10e:	22 00       	.word	0x0022	; ????
     110:	75 00       	.word	0x0075	; ????
     112:	00 10       	cpse	r0, r0
     114:	00 10       	cpse	r0, r0
     116:	d1 00       	.word	0x00d1	; ????
     118:	b3 43       	sbci	r27, 0x33	; 51
     11a:	80 2e       	mov	r8, r16
     11c:	00 c1       	rjmp	.+512    	; 0x31e <__trampolines_end+0x248>
     11e:	80 2e       	mov	r8, r16
     120:	00 c1       	rjmp	.+512    	; 0x322 <__trampolines_end+0x24c>
     122:	80 2e       	mov	r8, r16
     124:	00 c1       	rjmp	.+512    	; 0x326 <__trampolines_end+0x250>
     126:	80 2e       	mov	r8, r16
     128:	00 c1       	rjmp	.+512    	; 0x32a <__trampolines_end+0x254>
     12a:	80 2e       	mov	r8, r16
     12c:	00 c1       	rjmp	.+512    	; 0x32e <__trampolines_end+0x258>
     12e:	80 2e       	mov	r8, r16
     130:	00 c1       	rjmp	.+512    	; 0x332 <__trampolines_end+0x25c>
     132:	80 2e       	mov	r8, r16
     134:	00 c1       	rjmp	.+512    	; 0x336 <__trampolines_end+0x260>
     136:	80 2e       	mov	r8, r16
     138:	00 c1       	rjmp	.+512    	; 0x33a <__trampolines_end+0x264>
     13a:	80 2e       	mov	r8, r16
     13c:	00 c1       	rjmp	.+512    	; 0x33e <__trampolines_end+0x268>
     13e:	80 2e       	mov	r8, r16
     140:	00 c1       	rjmp	.+512    	; 0x342 <__trampolines_end+0x26c>
     142:	80 2e       	mov	r8, r16
     144:	00 c1       	rjmp	.+512    	; 0x346 <__trampolines_end+0x270>
     146:	80 2e       	mov	r8, r16
     148:	00 c1       	rjmp	.+512    	; 0x34a <__trampolines_end+0x274>
     14a:	80 2e       	mov	r8, r16
     14c:	00 c1       	rjmp	.+512    	; 0x34e <__trampolines_end+0x278>
     14e:	80 2e       	mov	r8, r16
     150:	00 c1       	rjmp	.+512    	; 0x352 <__trampolines_end+0x27c>
     152:	80 2e       	mov	r8, r16
     154:	00 c1       	rjmp	.+512    	; 0x356 <__trampolines_end+0x280>
     156:	80 2e       	mov	r8, r16
     158:	00 c1       	rjmp	.+512    	; 0x35a <__trampolines_end+0x284>
     15a:	80 2e       	mov	r8, r16
     15c:	00 c1       	rjmp	.+512    	; 0x35e <__trampolines_end+0x288>
     15e:	80 2e       	mov	r8, r16
     160:	00 c1       	rjmp	.+512    	; 0x362 <__trampolines_end+0x28c>
     162:	80 2e       	mov	r8, r16
     164:	00 c1       	rjmp	.+512    	; 0x366 <__trampolines_end+0x290>
     166:	80 2e       	mov	r8, r16
     168:	00 c1       	rjmp	.+512    	; 0x36a <__trampolines_end+0x294>
     16a:	80 2e       	mov	r8, r16
     16c:	00 c1       	rjmp	.+512    	; 0x36e <__trampolines_end+0x298>
     16e:	80 2e       	mov	r8, r16
     170:	00 c1       	rjmp	.+512    	; 0x372 <__trampolines_end+0x29c>
     172:	80 2e       	mov	r8, r16
     174:	00 c1       	rjmp	.+512    	; 0x376 <__trampolines_end+0x2a0>
     176:	80 2e       	mov	r8, r16
     178:	00 c1       	rjmp	.+512    	; 0x37a <__trampolines_end+0x2a4>
     17a:	80 2e       	mov	r8, r16
     17c:	00 c1       	rjmp	.+512    	; 0x37e <__trampolines_end+0x2a8>
     17e:	80 2e       	mov	r8, r16
     180:	00 c1       	rjmp	.+512    	; 0x382 <__trampolines_end+0x2ac>
     182:	80 2e       	mov	r8, r16
     184:	00 c1       	rjmp	.+512    	; 0x386 <__trampolines_end+0x2b0>
     186:	80 2e       	mov	r8, r16
     188:	00 c1       	rjmp	.+512    	; 0x38a <__trampolines_end+0x2b4>
     18a:	80 2e       	mov	r8, r16
     18c:	00 c1       	rjmp	.+512    	; 0x38e <__trampolines_end+0x2b8>
     18e:	80 2e       	mov	r8, r16
     190:	00 c1       	rjmp	.+512    	; 0x392 <__trampolines_end+0x2bc>
     192:	80 2e       	mov	r8, r16
     194:	00 c1       	rjmp	.+512    	; 0x396 <__trampolines_end+0x2c0>
     196:	80 2e       	mov	r8, r16
     198:	00 c1       	rjmp	.+512    	; 0x39a <__trampolines_end+0x2c4>
     19a:	80 2e       	mov	r8, r16
     19c:	00 c1       	rjmp	.+512    	; 0x39e <__trampolines_end+0x2c8>
     19e:	80 2e       	mov	r8, r16
     1a0:	00 c1       	rjmp	.+512    	; 0x3a2 <__trampolines_end+0x2cc>
     1a2:	80 2e       	mov	r8, r16
     1a4:	00 c1       	rjmp	.+512    	; 0x3a6 <__trampolines_end+0x2d0>
     1a6:	80 2e       	mov	r8, r16
     1a8:	00 c1       	rjmp	.+512    	; 0x3aa <__trampolines_end+0x2d4>
     1aa:	80 2e       	mov	r8, r16
     1ac:	00 c1       	rjmp	.+512    	; 0x3ae <__trampolines_end+0x2d8>
     1ae:	80 2e       	mov	r8, r16
     1b0:	00 c1       	rjmp	.+512    	; 0x3b2 <__trampolines_end+0x2dc>
     1b2:	80 2e       	mov	r8, r16
     1b4:	00 c1       	rjmp	.+512    	; 0x3b6 <__trampolines_end+0x2e0>
     1b6:	80 2e       	mov	r8, r16
     1b8:	00 c1       	rjmp	.+512    	; 0x3ba <__trampolines_end+0x2e4>
     1ba:	80 2e       	mov	r8, r16
     1bc:	00 c1       	rjmp	.+512    	; 0x3be <__trampolines_end+0x2e8>
     1be:	80 2e       	mov	r8, r16
     1c0:	00 c1       	rjmp	.+512    	; 0x3c2 <__trampolines_end+0x2ec>
     1c2:	e0 5f       	subi	r30, 0xF0	; 240
     1c4:	00 00       	nop
     1c6:	00 00       	nop
     1c8:	01 00       	.word	0x0001	; ????
	...
     1d2:	00 00       	nop
     1d4:	92 00       	.word	0x0092	; ????
	...
     1e6:	08 19       	sub	r16, r8
     1e8:	00 00       	nop
     1ea:	88 00       	.word	0x0088	; ????
     1ec:	00 00       	nop
     1ee:	00 00       	nop
     1f0:	00 00       	nop
     1f2:	05 e0       	ldi	r16, 0x05	; 5
     1f4:	aa 38       	cpi	r26, 0x8A	; 138
     1f6:	05 e0       	ldi	r16, 0x05	; 5
     1f8:	90 30       	cpi	r25, 0x00	; 0
     1fa:	fa 00       	.word	0x00fa	; ????
     1fc:	96 00       	.word	0x0096	; ????
     1fe:	4b 09       	sbc	r20, r11
     200:	11 00       	.word	0x0011	; ????
     202:	11 00       	.word	0x0011	; ????
     204:	02 00       	.word	0x0002	; ????
     206:	2d 01       	movw	r4, r26
     208:	d4 7b       	andi	r29, 0xB4	; 180
     20a:	3b 01       	movw	r6, r22
     20c:	db 7a       	andi	r29, 0xAB	; 171
     20e:	04 00       	.word	0x0004	; ????
     210:	3f 7b       	andi	r19, 0xBF	; 191
     212:	cd 6c       	ori	r28, 0xCD	; 205
     214:	c3 04       	cpc	r12, r3
     216:	85 09       	sbc	r24, r5
     218:	c3 04       	cpc	r12, r3
     21a:	ec e6       	ldi	r30, 0x6C	; 108
     21c:	0c 46       	sbci	r16, 0x6C	; 108
     21e:	01 00       	.word	0x0001	; ????
     220:	27 00       	.word	0x0027	; ????
     222:	19 00       	.word	0x0019	; ????
     224:	96 00       	.word	0x0096	; ????
     226:	a0 00       	.word	0x00a0	; ????
     228:	01 00       	.word	0x0001	; ????
     22a:	0c 00       	.word	0x000c	; ????
     22c:	f0 3c       	cpi	r31, 0xC0	; 192
     22e:	00 01       	movw	r0, r0
     230:	01 00       	.word	0x0001	; ????
     232:	03 00       	.word	0x0003	; ????
     234:	01 00       	.word	0x0001	; ????
     236:	0e 00       	.word	0x000e	; ????
     238:	00 00       	nop
     23a:	32 00       	.word	0x0032	; ????
     23c:	05 00       	.word	0x0005	; ????
     23e:	ee 06       	cpc	r14, r30
     240:	04 00       	.word	0x0004	; ????
     242:	c8 00       	.word	0x00c8	; ????
     244:	00 00       	nop
     246:	04 00       	.word	0x0004	; ????
     248:	a8 05       	cpc	r26, r8
     24a:	ee 06       	cpc	r14, r30
     24c:	00 04       	cpc	r0, r0
     24e:	bc 02       	muls	r27, r28
     250:	b3 00       	.word	0x00b3	; ????
     252:	85 07       	cpc	r24, r21
	...
     268:	b4 00       	.word	0x00b4	; ????
     26a:	01 00       	.word	0x0001	; ????
     26c:	b9 00       	.word	0x00b9	; ????
     26e:	01 00       	.word	0x0001	; ????
     270:	98 00       	.word	0x0098	; ????
	...
     27a:	01 00       	.word	0x0001	; ????
     27c:	80 00       	.word	0x0080	; ????
     27e:	04 00       	.word	0x0004	; ????
	...
     2d0:	80 2e       	mov	r8, r16
     2d2:	00 c1       	rjmp	.+512    	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
     2d4:	fd 2d       	mov	r31, r13
     2d6:	de 00       	.word	0x00de	; ????
     2d8:	eb 00       	.word	0x00eb	; ????
     2da:	da 00       	.word	0x00da	; ????
     2dc:	00 0c       	add	r0, r0
     2de:	ff 0f       	add	r31, r31
     2e0:	00 04       	cpc	r0, r0
     2e2:	c0 00       	.word	0x00c0	; ????
     2e4:	5b f5       	brvc	.+86     	; 0x33c <__trampolines_end+0x266>
     2e6:	c9 01       	movw	r24, r18
     2e8:	1e f2       	brts	.-122    	; 0x270 <__trampolines_end+0x19a>
     2ea:	80 00       	.word	0x0080	; ????
     2ec:	3f ff       	.word	0xff3f	; ????
     2ee:	19 f4       	brne	.+6      	; 0x2f6 <__trampolines_end+0x220>
     2f0:	58 f5       	brcc	.+86     	; 0x348 <__trampolines_end+0x272>
     2f2:	66 f5       	brtc	.+88     	; 0x34c <__trampolines_end+0x276>
     2f4:	64 f5       	brge	.+88     	; 0x34e <__trampolines_end+0x278>
     2f6:	c0 f1       	brcs	.+112    	; 0x368 <__trampolines_end+0x292>
     2f8:	f0 00       	.word	0x00f0	; ????
     2fa:	e0 00       	.word	0x00e0	; ????
     2fc:	cd 01       	movw	r24, r26
     2fe:	d3 01       	movw	r26, r6
     300:	db 01       	movw	r26, r22
     302:	ff 7f       	andi	r31, 0xFF	; 255
     304:	ff 01       	movw	r30, r30
     306:	e4 00       	.word	0x00e4	; ????
     308:	74 f7       	brge	.-36     	; 0x2e6 <__trampolines_end+0x210>
     30a:	f3 00       	.word	0x00f3	; ????
     30c:	fa 00       	.word	0x00fa	; ????
     30e:	ff 3f       	cpi	r31, 0xFF	; 255
     310:	ca 03       	fmulsu	r20, r18
     312:	6c 38       	cpi	r22, 0x8C	; 140
     314:	56 fe       	sbrs	r5, 6
     316:	44 fd       	sbrc	r20, 4
     318:	bc 02       	muls	r27, r28
     31a:	f9 06       	cpc	r15, r25
     31c:	00 fc       	sbrc	r0, 0
     31e:	12 02       	muls	r17, r18
     320:	ae 01       	movw	r20, r28
     322:	58 fa       	.word	0xfa58	; ????
     324:	9a fd       	.word	0xfd9a	; ????
     326:	77 05       	cpc	r23, r7
     328:	bb 02       	muls	r27, r27
     32a:	96 01       	movw	r18, r12
     32c:	95 01       	movw	r18, r10
     32e:	7f 01       	movw	r14, r30
     330:	82 01       	movw	r16, r4
     332:	89 01       	movw	r16, r18
     334:	87 01       	movw	r16, r14
     336:	88 01       	movw	r16, r16
     338:	8a 01       	movw	r16, r20
     33a:	8c 01       	movw	r16, r24
     33c:	8f 01       	movw	r16, r30
     33e:	8d 01       	movw	r16, r26
     340:	92 01       	movw	r18, r4
     342:	91 01       	movw	r18, r2
     344:	dd 00       	.word	0x00dd	; ????
     346:	9f 01       	movw	r18, r30
     348:	7e 01       	movw	r14, r28
     34a:	db 00       	.word	0x00db	; ????
     34c:	b6 01       	movw	r22, r12
     34e:	70 69       	ori	r23, 0x90	; 144
     350:	26 d3       	rcall	.+1612   	; 0x99e <__stack+0x9f>
     352:	9c 07       	cpc	r25, r28
     354:	1f 05       	cpc	r17, r15
     356:	9d 00       	.word	0x009d	; ????
     358:	00 08       	sbc	r0, r0
     35a:	bc 05       	cpc	r27, r12
     35c:	37 fa       	bst	r3, 7
     35e:	a2 01       	movw	r20, r4
     360:	aa 01       	movw	r20, r20
     362:	a1 01       	movw	r20, r2
     364:	a8 01       	movw	r20, r16
     366:	a0 01       	movw	r20, r0
     368:	a8 05       	cpc	r26, r8
     36a:	b4 01       	movw	r22, r8
     36c:	b4 01       	movw	r22, r8
     36e:	ce 00       	.word	0x00ce	; ????
     370:	d0 00       	.word	0x00d0	; ????
     372:	fc 00       	.word	0x00fc	; ????
     374:	c5 01       	movw	r24, r10
     376:	ff fb       	.word	0xfbff	; ????
     378:	b1 00       	.word	0x00b1	; ????
     37a:	00 38       	cpi	r16, 0x80	; 128
     37c:	00 30       	cpi	r16, 0x00	; 0
     37e:	fd f5       	brhc	.+126    	; 0x3fe <__trampolines_end+0x328>
     380:	fc f5       	brge	.+126    	; 0x400 <__EEPROM_REGION_LENGTH__>
     382:	cd 01       	movw	r24, r26
     384:	a0 00       	.word	0x00a0	; ????
     386:	5f ff       	.word	0xff5f	; ????
     388:	00 40       	sbci	r16, 0x00	; 0
     38a:	ff 00       	.word	0x00ff	; ????
     38c:	00 80       	ld	r0, Z
     38e:	6d 0f       	add	r22, r29
     390:	eb 00       	.word	0x00eb	; ????
     392:	7f ff       	.word	0xff7f	; ????
     394:	c2 f5       	brpl	.+112    	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     396:	68 f7       	brcc	.-38     	; 0x372 <__trampolines_end+0x29c>
     398:	b3 f1       	brvs	.+108    	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     39a:	67 0f       	add	r22, r23
     39c:	5b 0f       	add	r21, r27
     39e:	61 0f       	add	r22, r17
     3a0:	80 0f       	add	r24, r16
     3a2:	58 f7       	brcc	.-42     	; 0x37a <__trampolines_end+0x2a4>
     3a4:	5b f7       	brvc	.-42     	; 0x37c <__trampolines_end+0x2a6>
     3a6:	83 0f       	add	r24, r19
     3a8:	86 00       	.word	0x0086	; ????
     3aa:	72 0f       	add	r23, r18
     3ac:	85 0f       	add	r24, r21
     3ae:	c6 f1       	brts	.+112    	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     3b0:	7f 0f       	add	r23, r31
     3b2:	6c f7       	brge	.-38     	; 0x38e <__trampolines_end+0x2b8>
     3b4:	00 e0       	ldi	r16, 0x00	; 0
     3b6:	00 ff       	sbrs	r16, 0
     3b8:	d1 f5       	brne	.+116    	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     3ba:	87 0f       	add	r24, r23
     3bc:	8a 0f       	add	r24, r26
     3be:	ff 03       	fmulsu	r23, r23
     3c0:	f0 3f       	cpi	r31, 0xF0	; 240
     3c2:	8b 00       	.word	0x008b	; ????
     3c4:	8e 00       	.word	0x008e	; ????
     3c6:	90 00       	.word	0x0090	; ????
     3c8:	b9 00       	.word	0x00b9	; ????
     3ca:	2d f5       	brhc	.+74     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     3cc:	ca f5       	brpl	.+114    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     3ce:	cb 01       	movw	r24, r22
     3d0:	20 f2       	brcs	.-120    	; 0x35a <__trampolines_end+0x284>
	...
     4ae:	30 50       	subi	r19, 0x00	; 0
     4b0:	98 2e       	mov	r9, r24
     4b2:	d7 0e       	add	r13, r23
     4b4:	50 32       	cpi	r21, 0x20	; 32
     4b6:	98 2e       	mov	r9, r24
     4b8:	fa 03       	fmulsu	r23, r18
     4ba:	00 30       	cpi	r16, 0x00	; 0
     4bc:	f0 7f       	andi	r31, 0xF0	; 240
     4be:	00 2e       	mov	r0, r16
     4c0:	00 2e       	mov	r0, r16
     4c2:	d0 2e       	mov	r13, r16
     4c4:	00 2e       	mov	r0, r16
     4c6:	01 80       	ldd	r0, Z+1	; 0x01
     4c8:	08 a2       	std	Y+32, r0	; 0x20
     4ca:	fb 2f       	mov	r31, r27
     4cc:	98 2e       	mov	r9, r24
     4ce:	ba 03       	fmulsu	r19, r18
     4d0:	21 2e       	mov	r2, r17
     4d2:	19 00       	.word	0x0019	; ????
     4d4:	01 2e       	mov	r0, r17
     4d6:	ee 00       	.word	0x00ee	; ????
     4d8:	00 b2       	in	r0, 0x10	; 16
     4da:	07 2f       	mov	r16, r23
     4dc:	01 2e       	mov	r0, r17
     4de:	19 00       	.word	0x0019	; ????
     4e0:	00 b2       	in	r0, 0x10	; 16
     4e2:	03 2f       	mov	r16, r19
     4e4:	01 50       	subi	r16, 0x01	; 1
     4e6:	03 52       	subi	r16, 0x23	; 35
     4e8:	98 2e       	mov	r9, r24
     4ea:	07 cc       	rjmp	.-2034   	; 0xfffffcfa <__eeprom_end+0xff7efcfa>
     4ec:	01 2e       	mov	r0, r17
     4ee:	dd 00       	.word	0x00dd	; ????
     4f0:	00 b2       	in	r0, 0x10	; 16
     4f2:	27 2f       	mov	r18, r23
     4f4:	05 2e       	mov	r0, r21
     4f6:	8a 00       	.word	0x008a	; ????
     4f8:	05 52       	subi	r16, 0x25	; 37
     4fa:	98 2e       	mov	r9, r24
     4fc:	c7 c1       	rjmp	.+910    	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
     4fe:	03 2e       	mov	r0, r19
     500:	e9 00       	.word	0x00e9	; ????
     502:	40 b2       	in	r4, 0x10	; 16
     504:	f0 7f       	andi	r31, 0xF0	; 240
     506:	08 2f       	mov	r16, r24
     508:	01 2e       	mov	r0, r17
     50a:	19 00       	.word	0x0019	; ????
     50c:	00 b2       	in	r0, 0x10	; 16
     50e:	04 2f       	mov	r16, r20
     510:	00 30       	cpi	r16, 0x00	; 0
     512:	21 2e       	mov	r2, r17
     514:	e9 00       	.word	0x00e9	; ????
     516:	98 2e       	mov	r9, r24
     518:	b4 b1       	in	r27, 0x04	; 4
     51a:	01 2e       	mov	r0, r17
     51c:	18 00       	.word	0x0018	; ????
     51e:	00 b2       	in	r0, 0x10	; 16
     520:	10 2f       	mov	r17, r16
     522:	05 50       	subi	r16, 0x05	; 5
     524:	98 2e       	mov	r9, r24
     526:	4d c3       	rjmp	.+1690   	; 0xbc2 <__stack+0x2c3>
     528:	05 50       	subi	r16, 0x05	; 5
     52a:	98 2e       	mov	r9, r24
     52c:	5a c7       	rjmp	.+3764   	; 0x13e2 <__stack+0xae3>
     52e:	98 2e       	mov	r9, r24
     530:	f9 b4       	in	r15, 0x29	; 41
     532:	98 2e       	mov	r9, r24
     534:	54 b2       	in	r5, 0x14	; 20
     536:	98 2e       	mov	r9, r24
     538:	67 b6       	in	r6, 0x37	; 55
     53a:	98 2e       	mov	r9, r24
     53c:	17 b2       	in	r1, 0x17	; 23
     53e:	10 30       	cpi	r17, 0x00	; 0
     540:	21 2e       	mov	r2, r17
     542:	77 00       	.word	0x0077	; ????
     544:	01 2e       	mov	r0, r17
     546:	ef 00       	.word	0x00ef	; ????
     548:	00 b2       	in	r0, 0x10	; 16
     54a:	04 2f       	mov	r16, r20
     54c:	98 2e       	mov	r9, r24
     54e:	7a b7       	in	r23, 0x3a	; 58
     550:	00 30       	cpi	r16, 0x00	; 0
     552:	21 2e       	mov	r2, r17
     554:	ef 00       	.word	0x00ef	; ????
     556:	01 2e       	mov	r0, r17
     558:	d4 00       	.word	0x00d4	; ????
     55a:	04 ae       	std	Z+60, r0	; 0x3c
     55c:	0b 2f       	mov	r16, r27
     55e:	01 2e       	mov	r0, r17
     560:	dd 00       	.word	0x00dd	; ????
     562:	00 b2       	in	r0, 0x10	; 16
     564:	07 2f       	mov	r16, r23
     566:	05 52       	subi	r16, 0x25	; 37
     568:	98 2e       	mov	r9, r24
     56a:	8e 0e       	add	r8, r30
     56c:	00 b2       	in	r0, 0x10	; 16
     56e:	02 2f       	mov	r16, r18
     570:	10 30       	cpi	r17, 0x00	; 0
     572:	21 2e       	mov	r2, r17
     574:	7d 00       	.word	0x007d	; ????
     576:	01 2e       	mov	r0, r17
     578:	7d 00       	.word	0x007d	; ????
     57a:	00 90 90 2e 	lds	r0, 0x2E90	; 0x802e90 <__bss_end+0x28ea>
     57e:	f1 02       	muls	r31, r17
     580:	01 2e       	mov	r0, r17
     582:	d7 00       	.word	0x00d7	; ????
     584:	00 b2       	in	r0, 0x10	; 16
     586:	04 2f       	mov	r16, r20
     588:	98 2e       	mov	r9, r24
     58a:	2f 0e       	add	r2, r31
     58c:	00 30       	cpi	r16, 0x00	; 0
     58e:	21 2e       	mov	r2, r17
     590:	7b 00       	.word	0x007b	; ????
     592:	01 2e       	mov	r0, r17
     594:	7b 00       	.word	0x007b	; ????
     596:	00 b2       	in	r0, 0x10	; 16
     598:	12 2f       	mov	r17, r18
     59a:	01 2e       	mov	r0, r17
     59c:	d4 00       	.word	0x00d4	; ????
     59e:	00 90 02 2f 	lds	r0, 0x2F02	; 0x802f02 <__bss_end+0x295c>
     5a2:	98 2e       	mov	r9, r24
     5a4:	1f 0e       	add	r1, r31
     5a6:	09 2d       	mov	r16, r9
     5a8:	98 2e       	mov	r9, r24
     5aa:	81 0d       	add	r24, r1
     5ac:	01 2e       	mov	r0, r17
     5ae:	d4 00       	.word	0x00d4	; ????
     5b0:	04 90       	lpm	r0, Z
     5b2:	02 2f       	mov	r16, r18
     5b4:	50 32       	cpi	r21, 0x20	; 32
     5b6:	98 2e       	mov	r9, r24
     5b8:	fa 03       	fmulsu	r23, r18
     5ba:	00 30       	cpi	r16, 0x00	; 0
     5bc:	21 2e       	mov	r2, r17
     5be:	7b 00       	.word	0x007b	; ????
     5c0:	01 2e       	mov	r0, r17
     5c2:	7c 00       	.word	0x007c	; ????
     5c4:	00 b2       	in	r0, 0x10	; 16
     5c6:	90 2e       	mov	r9, r16
     5c8:	09 03       	fmul	r16, r17
     5ca:	01 2e       	mov	r0, r17
     5cc:	7c 00       	.word	0x007c	; ????
     5ce:	01 31       	cpi	r16, 0x11	; 17
     5d0:	01 08       	sbc	r0, r1
     5d2:	00 b2       	in	r0, 0x10	; 16
     5d4:	04 2f       	mov	r16, r20
     5d6:	98 2e       	mov	r9, r24
     5d8:	47 cb       	rjmp	.-2418   	; 0xfffffc68 <__eeprom_end+0xff7efc68>
     5da:	10 30       	cpi	r17, 0x00	; 0
     5dc:	21 2e       	mov	r2, r17
     5de:	77 00       	.word	0x0077	; ????
     5e0:	81 30       	cpi	r24, 0x01	; 1
     5e2:	01 2e       	mov	r0, r17
     5e4:	7c 00       	.word	0x007c	; ????
     5e6:	01 08       	sbc	r0, r1
     5e8:	00 b2       	in	r0, 0x10	; 16
     5ea:	61 2f       	mov	r22, r17
     5ec:	03 2e       	mov	r0, r19
     5ee:	89 00       	.word	0x0089	; ????
     5f0:	01 2e       	mov	r0, r17
     5f2:	d4 00       	.word	0x00d4	; ????
     5f4:	98 bc       	out	0x28, r9	; 40
     5f6:	98 b8       	out	0x08, r9	; 8
     5f8:	05 b2       	in	r0, 0x15	; 21
     5fa:	0f 58       	subi	r16, 0x8F	; 143
     5fc:	23 2f       	mov	r18, r19
     5fe:	07 90       	elpm	r0, Z+
     600:	09 54       	subi	r16, 0x49	; 73
     602:	00 30       	cpi	r16, 0x00	; 0
     604:	37 2f       	mov	r19, r23
     606:	15 41       	sbci	r17, 0x15	; 21
     608:	04 41       	sbci	r16, 0x14	; 20
     60a:	dc be       	out	0x3c, r13	; 60
     60c:	44 be       	out	0x34, r4	; 52
     60e:	dc ba       	out	0x1c, r13	; 28
     610:	2c 01       	movw	r4, r24
     612:	61 00       	.word	0x0061	; ????
     614:	0f 56       	subi	r16, 0x6F	; 111
     616:	4a 0f       	add	r20, r26
     618:	0c 2f       	mov	r16, r28
     61a:	d1 42       	sbci	r29, 0x21	; 33
     61c:	94 b8       	out	0x04, r9	; 4
     61e:	c1 42       	sbci	r28, 0x21	; 33
     620:	11 30       	cpi	r17, 0x01	; 1
     622:	05 2e       	mov	r0, r21
     624:	6a f7       	brpl	.-38     	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
     626:	2c bd       	out	0x2c, r18	; 44
     628:	2f b9       	out	0x0f, r18	; 15
     62a:	80 b2       	in	r8, 0x10	; 16
     62c:	08 22       	and	r0, r24
     62e:	98 2e       	mov	r9, r24
     630:	c3 b7       	in	r28, 0x33	; 51
     632:	21 2d       	mov	r18, r1
     634:	61 30       	cpi	r22, 0x01	; 1
     636:	23 2e       	mov	r2, r19
     638:	d4 00       	.word	0x00d4	; ????
     63a:	98 2e       	mov	r9, r24
     63c:	c3 b7       	in	r28, 0x33	; 51
     63e:	00 30       	cpi	r16, 0x00	; 0
     640:	21 2e       	mov	r2, r17
     642:	5a f5       	brpl	.+86     	; 0x69a <__EEPROM_REGION_LENGTH__+0x29a>
     644:	18 2d       	mov	r17, r8
     646:	e1 7f       	andi	r30, 0xF1	; 241
     648:	50 30       	cpi	r21, 0x00	; 0
     64a:	98 2e       	mov	r9, r24
     64c:	fa 03       	fmulsu	r23, r18
     64e:	0f 52       	subi	r16, 0x2F	; 47
     650:	07 50       	subi	r16, 0x07	; 7
     652:	50 42       	sbci	r21, 0x20	; 32
     654:	70 30       	cpi	r23, 0x00	; 0
     656:	0d 54       	subi	r16, 0x4D	; 77
     658:	42 42       	sbci	r20, 0x22	; 34
     65a:	7e 82       	std	Y+6, r7	; 0x06
     65c:	e2 6f       	ori	r30, 0xF2	; 242
     65e:	80 b2       	in	r8, 0x10	; 16
     660:	42 42       	sbci	r20, 0x22	; 34
     662:	05 2f       	mov	r16, r21
     664:	21 2e       	mov	r2, r17
     666:	d4 00       	.word	0x00d4	; ????
     668:	10 30       	cpi	r17, 0x00	; 0
     66a:	98 2e       	mov	r9, r24
     66c:	c3 b7       	in	r28, 0x33	; 51
     66e:	03 2d       	mov	r16, r3
     670:	60 30       	cpi	r22, 0x00	; 0
     672:	21 2e       	mov	r2, r17
     674:	d4 00       	.word	0x00d4	; ????
     676:	01 2e       	mov	r0, r17
     678:	d4 00       	.word	0x00d4	; ????
     67a:	06 90       	elpm	r0, Z
     67c:	18 2f       	mov	r17, r24
     67e:	01 2e       	mov	r0, r17
     680:	76 00       	.word	0x0076	; ????
     682:	0b 54       	subi	r16, 0x4B	; 75
     684:	07 52       	subi	r16, 0x27	; 39
     686:	e0 7f       	andi	r30, 0xF0	; 240
     688:	98 2e       	mov	r9, r24
     68a:	7a c1       	rjmp	.+756    	; 0x980 <__stack+0x81>
     68c:	e1 6f       	ori	r30, 0xF1	; 241
     68e:	08 1a       	sub	r0, r24
     690:	40 30       	cpi	r20, 0x00	; 0
     692:	08 2f       	mov	r16, r24
     694:	21 2e       	mov	r2, r17
     696:	d4 00       	.word	0x00d4	; ????
     698:	20 30       	cpi	r18, 0x00	; 0
     69a:	98 2e       	mov	r9, r24
     69c:	af b7       	in	r26, 0x3f	; 63
     69e:	50 32       	cpi	r21, 0x20	; 32
     6a0:	98 2e       	mov	r9, r24
     6a2:	fa 03       	fmulsu	r23, r18
     6a4:	05 2d       	mov	r16, r5
     6a6:	98 2e       	mov	r9, r24
     6a8:	38 0e       	add	r3, r24
     6aa:	00 30       	cpi	r16, 0x00	; 0
     6ac:	21 2e       	mov	r2, r17
     6ae:	d4 00       	.word	0x00d4	; ????
     6b0:	00 30       	cpi	r16, 0x00	; 0
     6b2:	21 2e       	mov	r2, r17
     6b4:	7c 00       	.word	0x007c	; ????
     6b6:	18 2d       	mov	r17, r8
     6b8:	01 2e       	mov	r0, r17
     6ba:	d4 00       	.word	0x00d4	; ????
     6bc:	03 aa       	std	Z+51, r0	; 0x33
     6be:	01 2f       	mov	r16, r17
     6c0:	98 2e       	mov	r9, r24
     6c2:	45 0e       	add	r4, r21
     6c4:	01 2e       	mov	r0, r17
     6c6:	d4 00       	.word	0x00d4	; ????
     6c8:	3f 80       	ldd	r3, Y+7	; 0x07
     6ca:	03 a2       	std	Z+35, r0	; 0x23
     6cc:	01 2f       	mov	r16, r17
     6ce:	00 2e       	mov	r0, r16
     6d0:	02 2d       	mov	r16, r2
     6d2:	98 2e       	mov	r9, r24
     6d4:	5b 0e       	add	r5, r27
     6d6:	30 30       	cpi	r19, 0x00	; 0
     6d8:	98 2e       	mov	r9, r24
     6da:	ce b7       	in	r28, 0x3e	; 62
     6dc:	00 30       	cpi	r16, 0x00	; 0
     6de:	21 2e       	mov	r2, r17
     6e0:	7d 00       	.word	0x007d	; ????
     6e2:	50 32       	cpi	r21, 0x20	; 32
     6e4:	98 2e       	mov	r9, r24
     6e6:	fa 03       	fmulsu	r23, r18
     6e8:	01 2e       	mov	r0, r17
     6ea:	77 00       	.word	0x0077	; ????
     6ec:	00 b2       	in	r0, 0x10	; 16
     6ee:	24 2f       	mov	r18, r20
     6f0:	98 2e       	mov	r9, r24
     6f2:	f5 cb       	rjmp	.-2070   	; 0xfffffede <__eeprom_end+0xff7efede>
     6f4:	03 2e       	mov	r0, r19
     6f6:	d5 00       	.word	0x00d5	; ????
     6f8:	11 54       	subi	r17, 0x41	; 65
     6fa:	01 0a       	sbc	r0, r17
     6fc:	bc 84       	ldd	r11, Y+12	; 0x0c
     6fe:	83 86       	std	Z+11, r8	; 0x0b
     700:	21 2e       	mov	r2, r17
     702:	c9 01       	movw	r24, r18
     704:	e0 40       	sbci	r30, 0x00	; 0
     706:	13 52       	subi	r17, 0x23	; 35
     708:	c4 40       	sbci	r28, 0x04	; 4
     70a:	82 40       	sbci	r24, 0x02	; 2
     70c:	a8 b9       	out	0x08, r26	; 8
     70e:	52 42       	sbci	r21, 0x22	; 34
     710:	43 be       	out	0x33, r4	; 51
     712:	53 42       	sbci	r21, 0x23	; 35
     714:	04 0a       	sbc	r0, r20
     716:	50 42       	sbci	r21, 0x20	; 32
     718:	e1 7f       	andi	r30, 0xF1	; 241
     71a:	f0 31       	cpi	r31, 0x10	; 16
     71c:	41 40       	sbci	r20, 0x01	; 1
     71e:	f2 6f       	ori	r31, 0xF2	; 242
     720:	25 bd       	out	0x25, r18	; 37
     722:	08 08       	sbc	r0, r8
     724:	02 0a       	sbc	r0, r18
     726:	d0 7f       	andi	r29, 0xF0	; 240
     728:	98 2e       	mov	r9, r24
     72a:	a8 cf       	rjmp	.-176    	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
     72c:	06 bc       	out	0x26, r0	; 38
     72e:	d1 6f       	ori	r29, 0xF1	; 241
     730:	e2 6f       	ori	r30, 0xF2	; 242
     732:	08 0a       	sbc	r0, r24
     734:	80 42       	sbci	r24, 0x20	; 32
     736:	98 2e       	mov	r9, r24
     738:	58 b7       	in	r21, 0x38	; 56
     73a:	00 30       	cpi	r16, 0x00	; 0
     73c:	21 2e       	mov	r2, r17
     73e:	ee 00       	.word	0x00ee	; ????
     740:	21 2e       	mov	r2, r17
     742:	77 00       	.word	0x0077	; ????
     744:	21 2e       	mov	r2, r17
     746:	dd 00       	.word	0x00dd	; ????
     748:	80 2e       	mov	r8, r16
     74a:	f4 01       	movw	r30, r8
     74c:	1a 24       	eor	r1, r10
     74e:	22 00       	.word	0x0022	; ????
     750:	80 2e       	mov	r8, r16
     752:	ec 01       	movw	r28, r24
     754:	10 50       	subi	r17, 0x00	; 0
     756:	fb 7f       	andi	r31, 0xFB	; 251
     758:	98 2e       	mov	r9, r24
     75a:	f3 03       	fmuls	r23, r19
     75c:	57 50       	subi	r21, 0x07	; 7
     75e:	fb 6f       	ori	r31, 0xFB	; 251
     760:	01 30       	cpi	r16, 0x01	; 1
     762:	71 54       	subi	r23, 0x41	; 65
     764:	11 42       	sbci	r17, 0x21	; 33
     766:	42 0e       	add	r4, r18
     768:	fc 2f       	mov	r31, r28
     76a:	c0 2e       	mov	r12, r16
     76c:	01 42       	sbci	r16, 0x21	; 33
     76e:	f0 5f       	subi	r31, 0xF0	; 240
     770:	80 2e       	mov	r8, r16
     772:	00 c1       	rjmp	.+512    	; 0x974 <__stack+0x75>
     774:	fd 2d       	mov	r31, r13
     776:	01 00       	.word	0x0001	; ????
	...
     780:	00 00       	nop
     782:	9a 01       	movw	r18, r20
     784:	34 03       	mulsu	r19, r20
	...
     7f6:	00 00       	nop
     7f8:	20 50       	subi	r18, 0x00	; 0
     7fa:	e7 7f       	andi	r30, 0xF7	; 247
     7fc:	f6 7f       	andi	r31, 0xF6	; 246
     7fe:	06 32       	cpi	r16, 0x26	; 38
     800:	0f 2e       	mov	r0, r31
     802:	61 f5       	brne	.+88     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     804:	fe 09       	sbc	r31, r14
     806:	c0 b3       	in	r28, 0x10	; 16
     808:	04 2f       	mov	r16, r20
     80a:	17 30       	cpi	r17, 0x07	; 7
     80c:	2f 2e       	mov	r2, r31
     80e:	ef 00       	.word	0x00ef	; ????
     810:	2d 2e       	mov	r2, r29
     812:	61 f5       	brne	.+88     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
     814:	f6 6f       	ori	r31, 0xF6	; 246
     816:	e7 6f       	ori	r30, 0xF7	; 247
     818:	e0 5f       	subi	r30, 0xF0	; 240
     81a:	c8 2e       	mov	r12, r24
     81c:	20 50       	subi	r18, 0x00	; 0
     81e:	e7 7f       	andi	r30, 0xF7	; 247
     820:	f6 7f       	andi	r31, 0xF6	; 246
     822:	46 30       	cpi	r20, 0x06	; 6
     824:	0f 2e       	mov	r0, r31
     826:	a4 f1       	brlt	.+104    	; 0x890 <__DATA_REGION_LENGTH__+0x90>
     828:	be 09       	sbc	r27, r14
     82a:	80 b3       	in	r24, 0x10	; 16
     82c:	06 2f       	mov	r16, r22
     82e:	0d 2e       	mov	r0, r29
     830:	d4 00       	.word	0x00d4	; ????
     832:	84 af       	std	Z+60, r24	; 0x3c
     834:	02 2f       	mov	r16, r18
     836:	16 30       	cpi	r17, 0x06	; 6
     838:	2d 2e       	mov	r2, r29
     83a:	7b 00       	.word	0x007b	; ????
     83c:	86 30       	cpi	r24, 0x06	; 6
     83e:	2d 2e       	mov	r2, r29
     840:	60 f5       	brcc	.+88     	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
     842:	f6 6f       	ori	r31, 0xF6	; 246
     844:	e7 6f       	ori	r30, 0xF7	; 247
     846:	e0 5f       	subi	r30, 0xF0	; 240
     848:	c8 2e       	mov	r12, r24
     84a:	01 2e       	mov	r0, r17
     84c:	77 f7       	brid	.-36     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     84e:	09 bc       	out	0x29, r0	; 41
     850:	0f b8       	out	0x0f, r0	; 15
     852:	00 b2       	in	r0, 0x10	; 16
     854:	10 50       	subi	r17, 0x00	; 0
     856:	fb 7f       	andi	r31, 0xFB	; 251
     858:	10 30       	cpi	r17, 0x00	; 0
     85a:	0b 2f       	mov	r16, r27
     85c:	03 2e       	mov	r0, r19
     85e:	8a 00       	.word	0x008a	; ????
     860:	96 bc       	out	0x26, r9	; 38
     862:	9f b8       	out	0x0f, r9	; 15
     864:	40 b2       	in	r4, 0x10	; 16
     866:	05 2f       	mov	r16, r21
     868:	03 2e       	mov	r0, r19
     86a:	68 f7       	brcc	.-38     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
     86c:	9e bc       	out	0x2e, r9	; 46
     86e:	9f b8       	out	0x0f, r9	; 15
     870:	40 b2       	in	r4, 0x10	; 16
     872:	07 2f       	mov	r16, r23
     874:	03 2e       	mov	r0, r19
     876:	7e 00       	.word	0x007e	; ????
     878:	41 90       	ld	r4, Z+
     87a:	01 2f       	mov	r16, r17
     87c:	98 2e       	mov	r9, r24
     87e:	dc 03       	fmulsu	r21, r20
     880:	03 2c       	mov	r0, r3
     882:	00 30       	cpi	r16, 0x00	; 0
     884:	21 2e       	mov	r2, r17
     886:	7e 00       	.word	0x007e	; ????
     888:	fb 6f       	ori	r31, 0xFB	; 251
     88a:	f0 5f       	subi	r31, 0xF0	; 240
     88c:	b8 2e       	mov	r11, r24
     88e:	20 50       	subi	r18, 0x00	; 0
     890:	e0 7f       	andi	r30, 0xF0	; 240
     892:	fb 7f       	andi	r31, 0xFB	; 251
     894:	00 2e       	mov	r0, r16
     896:	27 50       	subi	r18, 0x07	; 7
     898:	98 2e       	mov	r9, r24
     89a:	3b c8       	rjmp	.-3978   	; 0xfffff912 <__eeprom_end+0xff7ef912>
     89c:	29 50       	subi	r18, 0x09	; 9
     89e:	98 2e       	mov	r9, r24
     8a0:	a7 c8       	rjmp	.-3762   	; 0xfffff9f0 <__eeprom_end+0xff7ef9f0>
     8a2:	01 50       	subi	r16, 0x01	; 1
     8a4:	98 2e       	mov	r9, r24
     8a6:	55 cc       	rjmp	.-1878   	; 0x152 <__trampolines_end+0x7c>
     8a8:	e1 6f       	ori	r30, 0xF1	; 241
     8aa:	2b 50       	subi	r18, 0x0B	; 11
     8ac:	98 2e       	mov	r9, r24
     8ae:	e0 c9       	rjmp	.-3136   	; 0xfffffc70 <__eeprom_end+0xff7efc70>
     8b0:	fb 6f       	ori	r31, 0xFB	; 251
     8b2:	00 30       	cpi	r16, 0x00	; 0
     8b4:	e0 5f       	subi	r30, 0xF0	; 240
     8b6:	21 2e       	mov	r2, r17
     8b8:	7e 00       	.word	0x007e	; ????
     8ba:	b8 2e       	mov	r11, r24
     8bc:	73 50       	subi	r23, 0x03	; 3
     8be:	01 30       	cpi	r16, 0x01	; 1
     8c0:	57 54       	subi	r21, 0x47	; 71
     8c2:	11 42       	sbci	r17, 0x21	; 33
     8c4:	42 0e       	add	r4, r18
     8c6:	fc 2f       	mov	r31, r28
     8c8:	b8 2e       	mov	r11, r24
     8ca:	21 2e       	mov	r2, r17
     8cc:	59 f5       	brne	.+86     	; 0x924 <__stack+0x25>
     8ce:	10 30       	cpi	r17, 0x00	; 0
     8d0:	c0 2e       	mov	r12, r16
     8d2:	21 2e       	mov	r2, r17
     8d4:	4a f1       	brmi	.+82     	; 0x928 <__stack+0x29>
     8d6:	90 50       	subi	r25, 0x00	; 0
     8d8:	f7 7f       	andi	r31, 0xF7	; 247
     8da:	e6 7f       	andi	r30, 0xF6	; 246
     8dc:	d5 7f       	andi	r29, 0xF5	; 245
     8de:	c4 7f       	andi	r28, 0xF4	; 244
     8e0:	b3 7f       	andi	r27, 0xF3	; 243
     8e2:	a1 7f       	andi	r26, 0xF1	; 241
     8e4:	90 7f       	andi	r25, 0xF0	; 240
     8e6:	82 7f       	andi	r24, 0xF2	; 242
     8e8:	7b 7f       	andi	r23, 0xFB	; 251
     8ea:	98 2e       	mov	r9, r24
     8ec:	35 b7       	in	r19, 0x35	; 53
     8ee:	00 b2       	in	r0, 0x10	; 16
     8f0:	90 2e       	mov	r9, r16
     8f2:	97 b0       	in	r9, 0x07	; 7
     8f4:	03 2e       	mov	r0, r19
     8f6:	8f 00       	.word	0x008f	; ????
     8f8:	07 2e       	mov	r0, r23
     8fa:	91 00       	.word	0x0091	; ????
     8fc:	05 2e       	mov	r0, r21
     8fe:	b1 00       	.word	0x00b1	; ????
     900:	3f ba       	out	0x1f, r3	; 31
     902:	9f b8       	out	0x0f, r9	; 15
     904:	01 2e       	mov	r0, r17
     906:	b1 00       	.word	0x00b1	; ????
     908:	a3 bd       	out	0x23, r26	; 35
     90a:	4c 0a       	sbc	r4, r28
     90c:	05 2e       	mov	r0, r21
     90e:	b1 00       	.word	0x00b1	; ????
     910:	04 be       	out	0x34, r0	; 52
     912:	bf b9       	out	0x0f, r27	; 15
     914:	cb 0a       	sbc	r12, r27
     916:	4f ba       	out	0x1f, r4	; 31
     918:	22 bd       	out	0x22, r18	; 34
     91a:	01 2e       	mov	r0, r17
     91c:	b3 00       	.word	0x00b3	; ????
     91e:	dc 0a       	sbc	r13, r28
     920:	2f b9       	out	0x0f, r18	; 15
     922:	03 2e       	mov	r0, r19
     924:	b8 00       	.word	0x00b8	; ????
     926:	0a be       	out	0x3a, r0	; 58
     928:	9a 0a       	sbc	r9, r26
     92a:	cf b9       	out	0x0f, r28	; 15
     92c:	9b bc       	out	0x2b, r9	; 43
     92e:	01 2e       	mov	r0, r17
     930:	97 00       	.word	0x0097	; ????
     932:	9f b8       	out	0x0f, r9	; 15
     934:	93 0a       	sbc	r9, r19
     936:	0f bc       	out	0x2f, r0	; 47
     938:	91 0a       	sbc	r9, r17
     93a:	0f b8       	out	0x0f, r0	; 15
     93c:	90 0a       	sbc	r9, r16
     93e:	25 2e       	mov	r2, r21
     940:	18 00       	.word	0x0018	; ????
     942:	05 2e       	mov	r0, r21
     944:	c1 f5       	brne	.+112    	; 0x9b6 <__stack+0xb7>
     946:	2e bd       	out	0x2e, r18	; 46
     948:	2e b9       	out	0x0e, r18	; 14
     94a:	01 2e       	mov	r0, r17
     94c:	19 00       	.word	0x0019	; ????
     94e:	31 30       	cpi	r19, 0x01	; 1
     950:	8a 04       	cpc	r8, r10
     952:	00 90 07 2f 	lds	r0, 0x2F07	; 0x802f07 <__bss_end+0x2961>
     956:	01 2e       	mov	r0, r17
     958:	d4 00       	.word	0x00d4	; ????
     95a:	04 a2       	std	Z+36, r0	; 0x24
     95c:	03 2f       	mov	r16, r19
     95e:	01 2e       	mov	r0, r17
     960:	18 00       	.word	0x0018	; ????
     962:	00 b2       	in	r0, 0x10	; 16
     964:	0c 2f       	mov	r16, r28
     966:	19 50       	subi	r17, 0x09	; 9
     968:	05 52       	subi	r16, 0x25	; 37
     96a:	98 2e       	mov	r9, r24
     96c:	4d b7       	in	r20, 0x3d	; 61
     96e:	05 2e       	mov	r0, r21
     970:	78 00       	.word	0x0078	; ????
     972:	80 90 10 30 	lds	r8, 0x3010	; 0x803010 <__bss_end+0x2a6a>
     976:	01 2f       	mov	r16, r17
     978:	21 2e       	mov	r2, r17
     97a:	78 00       	.word	0x0078	; ????
     97c:	25 2e       	mov	r2, r21
     97e:	dd 00       	.word	0x00dd	; ????
     980:	98 2e       	mov	r9, r24
     982:	3e b7       	in	r19, 0x3e	; 62
     984:	00 b2       	in	r0, 0x10	; 16
     986:	02 30       	cpi	r16, 0x02	; 2
     988:	01 30       	cpi	r16, 0x01	; 1
     98a:	04 2f       	mov	r16, r20
     98c:	01 2e       	mov	r0, r17
     98e:	19 00       	.word	0x0019	; ????
     990:	00 b2       	in	r0, 0x10	; 16
     992:	00 2f       	mov	r16, r16
     994:	21 30       	cpi	r18, 0x01	; 1
     996:	01 2e       	mov	r0, r17
     998:	ea 00       	.word	0x00ea	; ????
     99a:	08 1a       	sub	r0, r24
     99c:	0e 2f       	mov	r16, r30
     99e:	23 2e       	mov	r2, r19
     9a0:	ea 00       	.word	0x00ea	; ????
     9a2:	33 30       	cpi	r19, 0x03	; 3
     9a4:	1b 50       	subi	r17, 0x0B	; 11
     9a6:	0b 09       	sbc	r16, r11
     9a8:	01 40       	sbci	r16, 0x01	; 1
     9aa:	17 56       	subi	r17, 0x67	; 103
     9ac:	46 be       	out	0x36, r4	; 54
     9ae:	4b 08       	sbc	r4, r11
     9b0:	4c 0a       	sbc	r4, r28
     9b2:	01 42       	sbci	r16, 0x21	; 33
     9b4:	0a 80       	ldd	r0, Y+2	; 0x02
     9b6:	15 52       	subi	r17, 0x25	; 37
     9b8:	01 42       	sbci	r16, 0x21	; 33
     9ba:	00 2e       	mov	r0, r16
     9bc:	01 2e       	mov	r0, r17
     9be:	18 00       	.word	0x0018	; ????
     9c0:	00 b2       	in	r0, 0x10	; 16
     9c2:	1f 2f       	mov	r17, r31
     9c4:	03 2e       	mov	r0, r19
     9c6:	c0 f5       	brcc	.+112    	; 0xa38 <__stack+0x139>
     9c8:	f0 30       	cpi	r31, 0x00	; 0
     9ca:	48 08       	sbc	r4, r8
     9cc:	47 aa       	std	Z+55, r4	; 0x37
     9ce:	74 30       	cpi	r23, 0x04	; 4
     9d0:	07 2e       	mov	r0, r23
     9d2:	7a 00       	.word	0x007a	; ????
     9d4:	61 22       	and	r6, r17
     9d6:	4b 1a       	sub	r4, r27
     9d8:	05 2f       	mov	r16, r21
     9da:	07 2e       	mov	r0, r23
     9dc:	66 f5       	brtc	.+88     	; 0xa36 <__stack+0x137>
     9de:	bf bd       	out	0x2f, r27	; 47
     9e0:	bf b9       	out	0x0f, r27	; 15
     9e2:	c0 90 0b 2f 	lds	r12, 0x2F0B	; 0x802f0b <__bss_end+0x2965>
     9e6:	1d 56       	subi	r17, 0x6D	; 109
     9e8:	2b 30       	cpi	r18, 0x0B	; 11
     9ea:	d2 42       	sbci	r29, 0x22	; 34
     9ec:	db 42       	sbci	r29, 0x2B	; 43
     9ee:	01 04       	cpc	r0, r1
     9f0:	c2 42       	sbci	r28, 0x22	; 34
     9f2:	04 bd       	out	0x24, r16	; 36
     9f4:	fe 80       	ldd	r15, Y+6	; 0x06
     9f6:	81 84       	ldd	r8, Z+9	; 0x09
     9f8:	23 2e       	mov	r2, r19
     9fa:	7a 00       	.word	0x007a	; ????
     9fc:	02 42       	sbci	r16, 0x22	; 34
     9fe:	02 32       	cpi	r16, 0x22	; 34
     a00:	25 2e       	mov	r2, r21
     a02:	62 f5       	brpl	.+88     	; 0xa5c <__stack+0x15d>
     a04:	05 2e       	mov	r0, r21
     a06:	d6 00       	.word	0x00d6	; ????
     a08:	81 84       	ldd	r8, Z+9	; 0x09
     a0a:	25 2e       	mov	r2, r21
     a0c:	d6 00       	.word	0x00d6	; ????
     a0e:	02 31       	cpi	r16, 0x12	; 18
     a10:	25 2e       	mov	r2, r21
     a12:	60 f5       	brcc	.+88     	; 0xa6c <__stack+0x16d>
     a14:	05 2e       	mov	r0, r21
     a16:	8a 00       	.word	0x008a	; ????
     a18:	0b 50       	subi	r16, 0x0B	; 11
     a1a:	90 08       	sbc	r9, r0
     a1c:	80 b2       	in	r8, 0x10	; 16
     a1e:	0b 2f       	mov	r16, r27
     a20:	05 2e       	mov	r0, r21
     a22:	ca f5       	brpl	.+114    	; 0xa96 <__stack+0x197>
     a24:	f0 3e       	cpi	r31, 0xE0	; 224
     a26:	90 08       	sbc	r9, r0
     a28:	25 2e       	mov	r2, r21
     a2a:	ca f5       	brpl	.+114    	; 0xa9e <__stack+0x19f>
     a2c:	05 2e       	mov	r0, r21
     a2e:	59 f5       	brne	.+86     	; 0xa86 <__stack+0x187>
     a30:	e0 3f       	cpi	r30, 0xF0	; 240
     a32:	90 08       	sbc	r9, r0
     a34:	25 2e       	mov	r2, r21
     a36:	59 f5       	brne	.+86     	; 0xa8e <__stack+0x18f>
     a38:	90 6f       	ori	r25, 0xF0	; 240
     a3a:	a1 6f       	ori	r26, 0xF1	; 241
     a3c:	b3 6f       	ori	r27, 0xF3	; 243
     a3e:	c4 6f       	ori	r28, 0xF4	; 244
     a40:	d5 6f       	ori	r29, 0xF5	; 245
     a42:	e6 6f       	ori	r30, 0xF6	; 246
     a44:	f7 6f       	ori	r31, 0xF7	; 247
     a46:	7b 6f       	ori	r23, 0xFB	; 251
     a48:	82 6f       	ori	r24, 0xF2	; 242
     a4a:	70 5f       	subi	r23, 0xF0	; 240
     a4c:	c8 2e       	mov	r12, r24
     a4e:	c0 50       	subi	r28, 0x00	; 0
     a50:	90 7f       	andi	r25, 0xF0	; 240
     a52:	e5 7f       	andi	r30, 0xF5	; 245
     a54:	d4 7f       	andi	r29, 0xF4	; 244
     a56:	c3 7f       	andi	r28, 0xF3	; 243
     a58:	b1 7f       	andi	r27, 0xF1	; 241
     a5a:	a2 7f       	andi	r26, 0xF2	; 242
     a5c:	87 7f       	andi	r24, 0xF7	; 247
     a5e:	f6 7f       	andi	r31, 0xF6	; 246
     a60:	7b 7f       	andi	r23, 0xFB	; 251
     a62:	00 2e       	mov	r0, r16
     a64:	01 2e       	mov	r0, r17
     a66:	60 f5       	brcc	.+88     	; 0xac0 <__stack+0x1c1>
     a68:	60 7f       	andi	r22, 0xF0	; 240
     a6a:	98 2e       	mov	r9, r24
     a6c:	35 b7       	in	r19, 0x35	; 53
     a6e:	02 30       	cpi	r16, 0x02	; 2
     a70:	63 6f       	ori	r22, 0xF3	; 243
     a72:	15 52       	subi	r17, 0x25	; 37
     a74:	50 7f       	andi	r21, 0xF0	; 240
     a76:	62 7f       	andi	r22, 0xF2	; 242
     a78:	5a 2c       	mov	r5, r10
     a7a:	02 32       	cpi	r16, 0x22	; 34
     a7c:	1a 09       	sbc	r17, r10
     a7e:	00 b3       	in	r16, 0x10	; 16
     a80:	14 2f       	mov	r17, r20
     a82:	00 b2       	in	r0, 0x10	; 16
     a84:	03 2f       	mov	r16, r19
     a86:	09 2e       	mov	r0, r25
     a88:	18 00       	.word	0x0018	; ????
     a8a:	00 91 0c 2f 	lds	r16, 0x2F0C	; 0x802f0c <__bss_end+0x2966>
     a8e:	43 7f       	andi	r20, 0xF3	; 243
     a90:	98 2e       	mov	r9, r24
     a92:	97 b7       	in	r25, 0x37	; 55
     a94:	1f 50       	subi	r17, 0x0F	; 15
     a96:	02 8a       	std	Z+18, r0	; 0x12
     a98:	02 32       	cpi	r16, 0x22	; 34
     a9a:	04 30       	cpi	r16, 0x04	; 4
     a9c:	25 2e       	mov	r2, r21
     a9e:	64 f5       	brge	.+88     	; 0xaf8 <__stack+0x1f9>
     aa0:	15 52       	subi	r17, 0x25	; 37
     aa2:	50 6f       	ori	r21, 0xF0	; 240
     aa4:	43 6f       	ori	r20, 0xF3	; 243
     aa6:	44 43       	sbci	r20, 0x34	; 52
     aa8:	25 2e       	mov	r2, r21
     aaa:	60 f5       	brcc	.+88     	; 0xb04 <__stack+0x205>
     aac:	d9 08       	sbc	r13, r9
     aae:	c0 b2       	in	r12, 0x10	; 16
     ab0:	36 2f       	mov	r19, r22
     ab2:	98 2e       	mov	r9, r24
     ab4:	3e b7       	in	r19, 0x3e	; 62
     ab6:	00 b2       	in	r0, 0x10	; 16
     ab8:	06 2f       	mov	r16, r22
     aba:	01 2e       	mov	r0, r17
     abc:	19 00       	.word	0x0019	; ????
     abe:	00 b2       	in	r0, 0x10	; 16
     ac0:	02 2f       	mov	r16, r18
     ac2:	50 6f       	ori	r21, 0xF0	; 240
     ac4:	00 90 0a 2f 	lds	r0, 0x2F0A	; 0x802f0a <__bss_end+0x2964>
     ac8:	01 2e       	mov	r0, r17
     aca:	79 00       	.word	0x0079	; ????
     acc:	00 90 19 2f 	lds	r0, 0x2F19	; 0x802f19 <__bss_end+0x2973>
     ad0:	10 30       	cpi	r17, 0x00	; 0
     ad2:	21 2e       	mov	r2, r17
     ad4:	79 00       	.word	0x0079	; ????
     ad6:	00 30       	cpi	r16, 0x00	; 0
     ad8:	98 2e       	mov	r9, r24
     ada:	dc 03       	fmulsu	r21, r20
     adc:	13 2d       	mov	r17, r3
     ade:	01 2e       	mov	r0, r17
     ae0:	c3 f5       	brvc	.+112    	; 0xb52 <__stack+0x253>
     ae2:	0c bc       	out	0x2c, r0	; 44
     ae4:	0f b8       	out	0x0f, r0	; 15
     ae6:	12 30       	cpi	r17, 0x02	; 2
     ae8:	10 04       	cpc	r1, r0
     aea:	03 b0       	in	r0, 0x03	; 3
     aec:	26 25       	eor	r18, r6
     aee:	21 50       	subi	r18, 0x01	; 1
     af0:	03 52       	subi	r16, 0x23	; 35
     af2:	98 2e       	mov	r9, r24
     af4:	4d b7       	in	r20, 0x3d	; 61
     af6:	10 30       	cpi	r17, 0x00	; 0
     af8:	21 2e       	mov	r2, r17
     afa:	ee 00       	.word	0x00ee	; ????
     afc:	02 30       	cpi	r16, 0x02	; 2
     afe:	60 7f       	andi	r22, 0xF0	; 240
     b00:	25 2e       	mov	r2, r21
     b02:	79 00       	.word	0x0079	; ????
     b04:	60 6f       	ori	r22, 0xF0	; 240
     b06:	00 90 05 2f 	lds	r0, 0x2F05	; 0x802f05 <__bss_end+0x295f>
     b0a:	00 30       	cpi	r16, 0x00	; 0
     b0c:	21 2e       	mov	r2, r17
     b0e:	ea 00       	.word	0x00ea	; ????
     b10:	15 50       	subi	r17, 0x05	; 5
     b12:	21 2e       	mov	r2, r17
     b14:	64 f5       	brge	.+88     	; 0xb6e <__stack+0x26f>
     b16:	15 52       	subi	r17, 0x25	; 37
     b18:	23 2e       	mov	r2, r19
     b1a:	60 f5       	brcc	.+88     	; 0xb74 <__stack+0x275>
     b1c:	02 32       	cpi	r16, 0x22	; 34
     b1e:	50 6f       	ori	r21, 0xF0	; 240
     b20:	00 90 02 2f 	lds	r0, 0x2F02	; 0x802f02 <__bss_end+0x295c>
     b24:	03 30       	cpi	r16, 0x03	; 3
     b26:	27 2e       	mov	r2, r23
     b28:	78 00       	.word	0x0078	; ????
     b2a:	07 2e       	mov	r0, r23
     b2c:	60 f5       	brcc	.+88     	; 0xb86 <__stack+0x287>
     b2e:	1a 09       	sbc	r17, r10
     b30:	00 91 a3 2f 	lds	r16, 0x2FA3	; 0x802fa3 <__bss_end+0x29fd>
     b34:	19 09       	sbc	r17, r9
     b36:	00 91 a0 2f 	lds	r16, 0x2FA0	; 0x802fa0 <__bss_end+0x29fa>
     b3a:	90 6f       	ori	r25, 0xF0	; 240
     b3c:	a2 6f       	ori	r26, 0xF2	; 242
     b3e:	b1 6f       	ori	r27, 0xF1	; 241
     b40:	c3 6f       	ori	r28, 0xF3	; 243
     b42:	d4 6f       	ori	r29, 0xF4	; 244
     b44:	e5 6f       	ori	r30, 0xF5	; 245
     b46:	7b 6f       	ori	r23, 0xFB	; 251
     b48:	f6 6f       	ori	r31, 0xF6	; 246
     b4a:	87 6f       	ori	r24, 0xF7	; 247
     b4c:	40 5f       	subi	r20, 0xF0	; 240
     b4e:	c8 2e       	mov	r12, r24
     b50:	c0 50       	subi	r28, 0x00	; 0
     b52:	e7 7f       	andi	r30, 0xF7	; 247
     b54:	f6 7f       	andi	r31, 0xF6	; 246
     b56:	26 30       	cpi	r18, 0x06	; 6
     b58:	0f 2e       	mov	r0, r31
     b5a:	61 f5       	brne	.+88     	; 0xbb4 <__stack+0x2b5>
     b5c:	2f 2e       	mov	r2, r31
     b5e:	7c 00       	.word	0x007c	; ????
     b60:	0f 2e       	mov	r0, r31
     b62:	7c 00       	.word	0x007c	; ????
     b64:	be 09       	sbc	r27, r14
     b66:	a2 7f       	andi	r26, 0xF2	; 242
     b68:	80 7f       	andi	r24, 0xF0	; 240
     b6a:	80 b3       	in	r24, 0x10	; 16
     b6c:	d5 7f       	andi	r29, 0xF5	; 245
     b6e:	c4 7f       	andi	r28, 0xF4	; 244
     b70:	b3 7f       	andi	r27, 0xF3	; 243
     b72:	91 7f       	andi	r25, 0xF1	; 241
     b74:	7b 7f       	andi	r23, 0xFB	; 251
     b76:	0b 2f       	mov	r16, r27
     b78:	23 50       	subi	r18, 0x03	; 3
     b7a:	1a 25       	eor	r17, r10
     b7c:	12 40       	sbci	r17, 0x02	; 2
     b7e:	42 7f       	andi	r20, 0xF2	; 242
     b80:	74 82       	std	Z+4, r7	; 0x04
     b82:	12 40       	sbci	r17, 0x02	; 2
     b84:	52 7f       	andi	r21, 0xF2	; 242
     b86:	00 2e       	mov	r0, r16
     b88:	00 40       	sbci	r16, 0x00	; 0
     b8a:	60 7f       	andi	r22, 0xF0	; 240
     b8c:	98 2e       	mov	r9, r24
     b8e:	6a d6       	rcall	.+3284   	; 0x1864 <__stack+0xf65>
     b90:	81 30       	cpi	r24, 0x01	; 1
     b92:	01 2e       	mov	r0, r17
     b94:	7c 00       	.word	0x007c	; ????
     b96:	01 08       	sbc	r0, r1
     b98:	00 b2       	in	r0, 0x10	; 16
     b9a:	42 2f       	mov	r20, r18
     b9c:	03 2e       	mov	r0, r19
     b9e:	89 00       	.word	0x0089	; ????
     ba0:	01 2e       	mov	r0, r17
     ba2:	89 00       	.word	0x0089	; ????
     ba4:	97 bc       	out	0x27, r9	; 39
     ba6:	06 bc       	out	0x26, r0	; 38
     ba8:	9f b8       	out	0x0f, r9	; 15
     baa:	0f b8       	out	0x0f, r0	; 15
     bac:	00 90 23 2e 	lds	r0, 0x2E23	; 0x802e23 <__bss_end+0x287d>
     bb0:	d8 00       	.word	0x00d8	; ????
     bb2:	10 30       	cpi	r17, 0x00	; 0
     bb4:	01 30       	cpi	r16, 0x01	; 1
     bb6:	2a 2f       	mov	r18, r26
     bb8:	03 2e       	mov	r0, r19
     bba:	d4 00       	.word	0x00d4	; ????
     bbc:	44 b2       	in	r4, 0x14	; 20
     bbe:	05 2f       	mov	r16, r21
     bc0:	47 b2       	in	r4, 0x17	; 23
     bc2:	00 30       	cpi	r16, 0x00	; 0
     bc4:	2d 2f       	mov	r18, r29
     bc6:	21 2e       	mov	r2, r17
     bc8:	7c 00       	.word	0x007c	; ????
     bca:	2b 2d       	mov	r18, r11
     bcc:	03 2e       	mov	r0, r19
     bce:	fd f5       	brhc	.+126    	; 0xc4e <__stack+0x34f>
     bd0:	9e bc       	out	0x2e, r9	; 46
     bd2:	9f b8       	out	0x0f, r9	; 15
     bd4:	40 90 14 2f 	lds	r4, 0x2F14	; 0x802f14 <__bss_end+0x296e>
     bd8:	03 2e       	mov	r0, r19
     bda:	fc f5       	brge	.+126    	; 0xc5a <__stack+0x35b>
     bdc:	99 bc       	out	0x29, r9	; 41
     bde:	9f b8       	out	0x0f, r9	; 15
     be0:	40 90 0e 2f 	lds	r4, 0x2F0E	; 0x802f0e <__bss_end+0x2968>
     be4:	03 2e       	mov	r0, r19
     be6:	49 f1       	breq	.+82     	; 0xc3a <__stack+0x33b>
     be8:	25 54       	subi	r18, 0x45	; 69
     bea:	4a 08       	sbc	r4, r10
     bec:	40 90 08 2f 	lds	r4, 0x2F08	; 0x802f08 <__bss_end+0x2962>
     bf0:	98 2e       	mov	r9, r24
     bf2:	35 b7       	in	r19, 0x35	; 53
     bf4:	00 b2       	in	r0, 0x10	; 16
     bf6:	10 30       	cpi	r17, 0x00	; 0
     bf8:	03 2f       	mov	r16, r19
     bfa:	50 30       	cpi	r21, 0x00	; 0
     bfc:	21 2e       	mov	r2, r17
     bfe:	d4 00       	.word	0x00d4	; ????
     c00:	10 2d       	mov	r17, r0
     c02:	98 2e       	mov	r9, r24
     c04:	af b7       	in	r26, 0x3f	; 63
     c06:	00 30       	cpi	r16, 0x00	; 0
     c08:	21 2e       	mov	r2, r17
     c0a:	7c 00       	.word	0x007c	; ????
     c0c:	0a 2d       	mov	r16, r10
     c0e:	05 2e       	mov	r0, r21
     c10:	69 f7       	brne	.-38     	; 0xbec <__stack+0x2ed>
     c12:	2d bd       	out	0x2d, r18	; 45
     c14:	2f b9       	out	0x0f, r18	; 15
     c16:	80 b2       	in	r8, 0x10	; 16
     c18:	01 2f       	mov	r16, r17
     c1a:	21 2e       	mov	r2, r17
     c1c:	7d 00       	.word	0x007d	; ????
     c1e:	23 2e       	mov	r2, r19
     c20:	7c 00       	.word	0x007c	; ????
     c22:	e0 31       	cpi	r30, 0x10	; 16
     c24:	21 2e       	mov	r2, r17
     c26:	61 f5       	brne	.+88     	; 0xc80 <__stack+0x381>
     c28:	f6 6f       	ori	r31, 0xF6	; 246
     c2a:	e7 6f       	ori	r30, 0xF7	; 247
     c2c:	80 6f       	ori	r24, 0xF0	; 240
     c2e:	a2 6f       	ori	r26, 0xF2	; 242
     c30:	b3 6f       	ori	r27, 0xF3	; 243
     c32:	c4 6f       	ori	r28, 0xF4	; 244
     c34:	d5 6f       	ori	r29, 0xF5	; 245
     c36:	7b 6f       	ori	r23, 0xFB	; 251
     c38:	91 6f       	ori	r25, 0xF1	; 241
     c3a:	40 5f       	subi	r20, 0xF0	; 240
     c3c:	c8 2e       	mov	r12, r24
     c3e:	60 51       	subi	r22, 0x10	; 16
     c40:	0a 25       	eor	r16, r10
     c42:	36 88       	ldd	r3, Z+22	; 0x16
     c44:	f4 7f       	andi	r31, 0xF4	; 244
     c46:	eb 7f       	andi	r30, 0xFB	; 251
     c48:	00 32       	cpi	r16, 0x20	; 32
     c4a:	31 52       	subi	r19, 0x21	; 33
     c4c:	32 30       	cpi	r19, 0x02	; 2
     c4e:	13 30       	cpi	r17, 0x03	; 3
     c50:	98 2e       	mov	r9, r24
     c52:	15 cb       	rjmp	.-2518   	; 0x27e <__trampolines_end+0x1a8>
     c54:	0a 25       	eor	r16, r10
     c56:	33 84       	ldd	r3, Z+11	; 0x0b
     c58:	d2 7f       	andi	r29, 0xF2	; 242
     c5a:	43 30       	cpi	r20, 0x03	; 3
     c5c:	05 50       	subi	r16, 0x05	; 5
     c5e:	2d 52       	subi	r18, 0x2D	; 45
     c60:	98 2e       	mov	r9, r24
     c62:	95 c1       	rjmp	.+810    	; 0xf8e <__stack+0x68f>
     c64:	d2 6f       	ori	r29, 0xF2	; 242
     c66:	27 52       	subi	r18, 0x27	; 39
     c68:	98 2e       	mov	r9, r24
     c6a:	d7 c7       	rjmp	.+4014   	; 0x1c1a <__stack+0x131b>
     c6c:	2a 25       	eor	r18, r10
     c6e:	b0 86       	std	Z+8, r11	; 0x08
     c70:	c0 7f       	andi	r28, 0xF0	; 240
     c72:	d3 7f       	andi	r29, 0xF3	; 243
     c74:	af 84       	ldd	r10, Y+15	; 0x0f
     c76:	29 50       	subi	r18, 0x09	; 9
     c78:	f1 6f       	ori	r31, 0xF1	; 241
     c7a:	98 2e       	mov	r9, r24
     c7c:	4d c8       	rjmp	.-3942   	; 0xfffffd18 <__eeprom_end+0xff7efd18>
     c7e:	2a 25       	eor	r18, r10
     c80:	ae 8a       	std	Y+22, r10	; 0x16
     c82:	aa 88       	ldd	r10, Y+18	; 0x12
     c84:	f2 6e       	ori	r31, 0xE2	; 226
     c86:	2b 50       	subi	r18, 0x0B	; 11
     c88:	c1 6f       	ori	r28, 0xF1	; 241
     c8a:	d3 6f       	ori	r29, 0xF3	; 243
     c8c:	f4 7f       	andi	r31, 0xF4	; 244
     c8e:	98 2e       	mov	r9, r24
     c90:	b6 c8       	rjmp	.-3732   	; 0xfffffdfe <__eeprom_end+0xff7efdfe>
     c92:	e0 6e       	ori	r30, 0xE0	; 224
     c94:	00 b2       	in	r0, 0x10	; 16
     c96:	32 2f       	mov	r19, r18
     c98:	33 54       	subi	r19, 0x43	; 67
     c9a:	83 86       	std	Z+11, r8	; 0x0b
     c9c:	f1 6f       	ori	r31, 0xF1	; 241
     c9e:	c3 7f       	andi	r28, 0xF3	; 243
     ca0:	04 30       	cpi	r16, 0x04	; 4
     ca2:	30 30       	cpi	r19, 0x00	; 0
     ca4:	f4 7f       	andi	r31, 0xF4	; 244
     ca6:	d0 7f       	andi	r29, 0xF0	; 240
     ca8:	b2 7f       	andi	r27, 0xF2	; 242
     caa:	e3 30       	cpi	r30, 0x03	; 3
     cac:	c5 6f       	ori	r28, 0xF5	; 245
     cae:	56 40       	sbci	r21, 0x06	; 6
     cb0:	45 41       	sbci	r20, 0x15	; 21
     cb2:	28 08       	sbc	r2, r8
     cb4:	03 14       	cp	r0, r3
     cb6:	0e b4       	in	r0, 0x2e	; 46
     cb8:	08 bc       	out	0x28, r0	; 40
     cba:	82 40       	sbci	r24, 0x02	; 2
     cbc:	10 0a       	sbc	r1, r16
     cbe:	2f 54       	subi	r18, 0x4F	; 79
     cc0:	26 05       	cpc	r18, r6
     cc2:	91 7f       	andi	r25, 0xF1	; 241
     cc4:	44 28       	or	r4, r4
     cc6:	a3 7f       	andi	r26, 0xF3	; 243
     cc8:	98 2e       	mov	r9, r24
     cca:	d9 c0       	rjmp	.+434    	; 0xe7e <__stack+0x57f>
     ccc:	08 b9       	out	0x08, r16	; 8
     cce:	33 30       	cpi	r19, 0x03	; 3
     cd0:	53 09       	sbc	r21, r3
     cd2:	c1 6f       	ori	r28, 0xF1	; 241
     cd4:	d3 6f       	ori	r29, 0xF3	; 243
     cd6:	f4 6f       	ori	r31, 0xF4	; 244
     cd8:	83 17       	cp	r24, r19
     cda:	47 40       	sbci	r20, 0x07	; 7
     cdc:	6c 15       	cp	r22, r12
     cde:	b2 6f       	ori	r27, 0xF2	; 242
     ce0:	be 09       	sbc	r27, r14
     ce2:	75 0b       	sbc	r23, r21
     ce4:	90 42       	sbci	r25, 0x20	; 32
     ce6:	45 42       	sbci	r20, 0x25	; 37
     ce8:	51 0e       	add	r5, r17
     cea:	32 bc       	out	0x22, r3	; 34
     cec:	02 89       	ldd	r16, Z+18	; 0x12
     cee:	a1 6f       	ori	r26, 0xF1	; 241
     cf0:	7e 86       	std	Y+14, r7	; 0x0e
     cf2:	f4 7f       	andi	r31, 0xF4	; 244
     cf4:	d0 7f       	andi	r29, 0xF0	; 240
     cf6:	b2 7f       	andi	r27, 0xF2	; 242
     cf8:	04 30       	cpi	r16, 0x04	; 4
     cfa:	91 6f       	ori	r25, 0xF1	; 241
     cfc:	d6 2f       	mov	r29, r22
     cfe:	eb 6f       	ori	r30, 0xFB	; 251
     d00:	a0 5e       	subi	r26, 0xE0	; 224
     d02:	b8 2e       	mov	r11, r24
     d04:	03 2e       	mov	r0, r19
     d06:	97 00       	.word	0x0097	; ????
     d08:	1b bc       	out	0x2b, r1	; 43
     d0a:	60 50       	subi	r22, 0x00	; 0
     d0c:	9f bc       	out	0x2f, r9	; 47
     d0e:	0c b8       	out	0x0c, r0	; 12
     d10:	f0 7f       	andi	r31, 0xF0	; 240
     d12:	40 b2       	in	r4, 0x10	; 16
     d14:	eb 7f       	andi	r30, 0xFB	; 251
     d16:	2b 2f       	mov	r18, r27
     d18:	03 2e       	mov	r0, r19
     d1a:	7f 00       	.word	0x007f	; ????
     d1c:	41 40       	sbci	r20, 0x01	; 1
     d1e:	01 2e       	mov	r0, r17
     d20:	c8 00       	.word	0x00c8	; ????
     d22:	01 1a       	sub	r0, r17
     d24:	11 2f       	mov	r17, r17
     d26:	37 58       	subi	r19, 0x87	; 135
     d28:	23 2e       	mov	r2, r19
     d2a:	c8 00       	.word	0x00c8	; ????
     d2c:	10 41       	sbci	r17, 0x10	; 16
     d2e:	a0 7f       	andi	r26, 0xF0	; 240
     d30:	38 81       	ld	r19, Y
     d32:	01 41       	sbci	r16, 0x11	; 17
     d34:	d0 7f       	andi	r29, 0xF0	; 240
     d36:	b1 7f       	andi	r27, 0xF1	; 241
     d38:	98 2e       	mov	r9, r24
     d3a:	64 cf       	rjmp	.-312    	; 0xc04 <__stack+0x305>
     d3c:	d0 6f       	ori	r29, 0xF0	; 240
     d3e:	07 80       	ldd	r0, Z+7	; 0x07
     d40:	a1 6f       	ori	r26, 0xF1	; 241
     d42:	11 42       	sbci	r17, 0x21	; 33
     d44:	00 2e       	mov	r0, r16
     d46:	b1 6f       	ori	r27, 0xF1	; 241
     d48:	01 42       	sbci	r16, 0x21	; 33
     d4a:	11 30       	cpi	r17, 0x01	; 1
     d4c:	01 2e       	mov	r0, r17
     d4e:	fc 00       	.word	0x00fc	; ????
     d50:	00 a8       	ldd	r0, Z+48	; 0x30
     d52:	03 30       	cpi	r16, 0x03	; 3
     d54:	cb 22       	and	r12, r27
     d56:	4a 25       	eor	r20, r10
     d58:	01 2e       	mov	r0, r17
     d5a:	7f 00       	.word	0x007f	; ????
     d5c:	3c 89       	ldd	r19, Y+20	; 0x14
     d5e:	35 52       	subi	r19, 0x25	; 37
     d60:	05 54       	subi	r16, 0x45	; 69
     d62:	98 2e       	mov	r9, r24
     d64:	c4 ce       	rjmp	.-632    	; 0xaee <__stack+0x1ef>
     d66:	c1 6f       	ori	r28, 0xF1	; 241
     d68:	f0 6f       	ori	r31, 0xF0	; 240
     d6a:	98 2e       	mov	r9, r24
     d6c:	95 cf       	rjmp	.-214    	; 0xc98 <__stack+0x399>
     d6e:	04 2d       	mov	r16, r4
     d70:	01 30       	cpi	r16, 0x01	; 1
     d72:	f0 6f       	ori	r31, 0xF0	; 240
     d74:	98 2e       	mov	r9, r24
     d76:	95 cf       	rjmp	.-214    	; 0xca2 <__stack+0x3a3>
     d78:	eb 6f       	ori	r30, 0xFB	; 251
     d7a:	a0 5f       	subi	r26, 0xF0	; 240
     d7c:	b8 2e       	mov	r11, r24
     d7e:	03 2e       	mov	r0, r19
     d80:	b3 00       	.word	0x00b3	; ????
     d82:	02 32       	cpi	r16, 0x22	; 34
     d84:	f0 30       	cpi	r31, 0x00	; 0
     d86:	03 31       	cpi	r16, 0x13	; 19
     d88:	30 50       	subi	r19, 0x00	; 0
     d8a:	8a 08       	sbc	r8, r10
     d8c:	08 08       	sbc	r0, r8
     d8e:	cb 08       	sbc	r12, r11
     d90:	e0 7f       	andi	r30, 0xF0	; 240
     d92:	80 b2       	in	r8, 0x10	; 16
     d94:	f3 7f       	andi	r31, 0xF3	; 243
     d96:	db 7f       	andi	r29, 0xFB	; 251
     d98:	25 2f       	mov	r18, r21
     d9a:	03 2e       	mov	r0, r19
     d9c:	ca 00       	.word	0x00ca	; ????
     d9e:	41 90       	ld	r4, Z+
     da0:	04 2f       	mov	r16, r20
     da2:	01 30       	cpi	r16, 0x01	; 1
     da4:	23 2e       	mov	r2, r19
     da6:	ca 00       	.word	0x00ca	; ????
     da8:	98 2e       	mov	r9, r24
     daa:	3f 03       	fmul	r19, r23
     dac:	c0 b2       	in	r12, 0x10	; 16
     dae:	05 2f       	mov	r16, r21
     db0:	03 2e       	mov	r0, r19
     db2:	da 00       	.word	0x00da	; ????
     db4:	00 30       	cpi	r16, 0x00	; 0
     db6:	41 04       	cpc	r4, r1
     db8:	23 2e       	mov	r2, r19
     dba:	da 00       	.word	0x00da	; ????
     dbc:	98 2e       	mov	r9, r24
     dbe:	92 b2       	in	r9, 0x12	; 18
     dc0:	10 25       	eor	r17, r0
     dc2:	f0 6f       	ori	r31, 0xF0	; 240
     dc4:	00 b2       	in	r0, 0x10	; 16
     dc6:	05 2f       	mov	r16, r21
     dc8:	01 2e       	mov	r0, r17
     dca:	da 00       	.word	0x00da	; ????
     dcc:	02 30       	cpi	r16, 0x02	; 2
     dce:	10 04       	cpc	r1, r0
     dd0:	21 2e       	mov	r2, r17
     dd2:	da 00       	.word	0x00da	; ????
     dd4:	40 b2       	in	r4, 0x10	; 16
     dd6:	01 2f       	mov	r16, r17
     dd8:	23 2e       	mov	r2, r19
     dda:	c8 01       	movw	r24, r16
     ddc:	db 6f       	ori	r29, 0xFB	; 251
     dde:	e0 6f       	ori	r30, 0xF0	; 240
     de0:	d0 5f       	subi	r29, 0xF0	; 240
     de2:	80 2e       	mov	r8, r16
     de4:	95 cf       	rjmp	.-214    	; 0xd10 <__stack+0x411>
     de6:	01 30       	cpi	r16, 0x01	; 1
     de8:	e0 6f       	ori	r30, 0xF0	; 240
     dea:	98 2e       	mov	r9, r24
     dec:	95 cf       	rjmp	.-214    	; 0xd18 <__stack+0x419>
     dee:	11 30       	cpi	r17, 0x01	; 1
     df0:	23 2e       	mov	r2, r19
     df2:	ca 00       	.word	0x00ca	; ????
     df4:	db 6f       	ori	r29, 0xFB	; 251
     df6:	d0 5f       	subi	r29, 0xF0	; 240
     df8:	b8 2e       	mov	r11, r24
     dfa:	d0 50       	subi	r29, 0x00	; 0
     dfc:	0a 25       	eor	r16, r10
     dfe:	33 84       	ldd	r3, Z+11	; 0x0b
     e00:	55 50       	subi	r21, 0x05	; 5
     e02:	d2 7f       	andi	r29, 0xF2	; 242
     e04:	e2 7f       	andi	r30, 0xF2	; 242
     e06:	03 8c       	ldd	r0, Z+27	; 0x1b
     e08:	c0 7f       	andi	r28, 0xF0	; 240
     e0a:	bb 7f       	andi	r27, 0xFB	; 251
     e0c:	00 30       	cpi	r16, 0x00	; 0
     e0e:	05 5a       	subi	r16, 0xA5	; 165
     e10:	39 54       	subi	r19, 0x49	; 73
     e12:	51 41       	sbci	r21, 0x11	; 17
     e14:	a5 7f       	andi	r26, 0xF5	; 245
     e16:	96 7f       	andi	r25, 0xF6	; 246
     e18:	80 7f       	andi	r24, 0xF0	; 240
     e1a:	98 2e       	mov	r9, r24
     e1c:	d9 c0       	rjmp	.+434    	; 0xfd0 <__stack+0x6d1>
     e1e:	05 30       	cpi	r16, 0x05	; 5
     e20:	f5 7f       	andi	r31, 0xF5	; 245
     e22:	20 25       	eor	r18, r0
     e24:	91 6f       	ori	r25, 0xF1	; 241
     e26:	3b 58       	subi	r19, 0x8B	; 139
     e28:	3d 5c       	subi	r19, 0xCD	; 205
     e2a:	3b 56       	subi	r19, 0x6B	; 107
     e2c:	98 2e       	mov	r9, r24
     e2e:	67 cc       	rjmp	.-1842   	; 0x6fe <__EEPROM_REGION_LENGTH__+0x2fe>
     e30:	c1 6f       	ori	r28, 0xF1	; 241
     e32:	d5 6f       	ori	r29, 0xF5	; 245
     e34:	52 40       	sbci	r21, 0x02	; 2
     e36:	50 43       	sbci	r21, 0x30	; 48
     e38:	c1 7f       	andi	r28, 0xF1	; 241
     e3a:	d5 7f       	andi	r29, 0xF5	; 245
     e3c:	10 25       	eor	r17, r0
     e3e:	98 2e       	mov	r9, r24
     e40:	fe c9       	rjmp	.-3076   	; 0x23e <__trampolines_end+0x168>
     e42:	10 25       	eor	r17, r0
     e44:	98 2e       	mov	r9, r24
     e46:	74 c0       	rjmp	.+232    	; 0xf30 <__stack+0x631>
     e48:	86 6f       	ori	r24, 0xF6	; 246
     e4a:	30 28       	or	r3, r0
     e4c:	92 6f       	ori	r25, 0xF2	; 242
     e4e:	82 8c       	ldd	r8, Z+26	; 0x1a
     e50:	a5 6f       	ori	r26, 0xF5	; 245
     e52:	6f 52       	subi	r22, 0x2F	; 47
     e54:	69 0e       	add	r6, r25
     e56:	39 54       	subi	r19, 0x49	; 73
     e58:	db 2f       	mov	r29, r27
     e5a:	19 a0       	ldd	r1, Y+33	; 0x21
     e5c:	15 30       	cpi	r17, 0x05	; 5
     e5e:	03 2f       	mov	r16, r19
     e60:	00 30       	cpi	r16, 0x00	; 0
     e62:	21 2e       	mov	r2, r17
     e64:	81 01       	movw	r16, r2
     e66:	0a 2d       	mov	r16, r10
     e68:	01 2e       	mov	r0, r17
     e6a:	81 01       	movw	r16, r2
     e6c:	05 28       	or	r0, r5
     e6e:	42 36       	cpi	r20, 0x62	; 98
     e70:	21 2e       	mov	r2, r17
     e72:	81 01       	movw	r16, r2
     e74:	02 0e       	add	r0, r18
     e76:	01 2f       	mov	r16, r17
     e78:	98 2e       	mov	r9, r24
     e7a:	f3 03       	fmuls	r23, r19
     e7c:	57 50       	subi	r21, 0x07	; 7
     e7e:	12 30       	cpi	r17, 0x02	; 2
     e80:	01 40       	sbci	r16, 0x01	; 1
     e82:	98 2e       	mov	r9, r24
     e84:	fe c9       	rjmp	.-3076   	; 0x282 <__trampolines_end+0x1ac>
     e86:	51 6f       	ori	r21, 0xF1	; 241
     e88:	0b 5c       	subi	r16, 0xCB	; 203
     e8a:	8e 0e       	add	r8, r30
     e8c:	3b 6f       	ori	r19, 0xFB	; 251
     e8e:	57 58       	subi	r21, 0x87	; 135
     e90:	02 30       	cpi	r16, 0x02	; 2
     e92:	21 2e       	mov	r2, r17
     e94:	95 01       	movw	r18, r10
     e96:	45 6f       	ori	r20, 0xF5	; 245
     e98:	2a 8d       	ldd	r18, Y+26	; 0x1a
     e9a:	d2 7f       	andi	r29, 0xF2	; 242
     e9c:	cb 7f       	andi	r28, 0xFB	; 251
     e9e:	13 2f       	mov	r17, r19
     ea0:	02 30       	cpi	r16, 0x02	; 2
     ea2:	3f 50       	subi	r19, 0x0F	; 15
     ea4:	d2 7f       	andi	r29, 0xF2	; 242
     ea6:	a8 0e       	add	r10, r24
     ea8:	0e 2f       	mov	r16, r30
     eaa:	c0 6f       	ori	r28, 0xF0	; 240
     eac:	53 54       	subi	r21, 0x43	; 67
     eae:	02 00       	.word	0x0002	; ????
     eb0:	51 54       	subi	r21, 0x41	; 65
     eb2:	42 0e       	add	r4, r18
     eb4:	10 30       	cpi	r17, 0x00	; 0
     eb6:	59 52       	subi	r21, 0x29	; 41
     eb8:	02 30       	cpi	r16, 0x02	; 2
     eba:	01 2f       	mov	r16, r17
     ebc:	00 2e       	mov	r0, r16
     ebe:	03 2d       	mov	r16, r3
     ec0:	50 42       	sbci	r21, 0x20	; 32
     ec2:	42 42       	sbci	r20, 0x22	; 34
     ec4:	12 30       	cpi	r17, 0x02	; 2
     ec6:	d2 7f       	andi	r29, 0xF2	; 242
     ec8:	80 b2       	in	r8, 0x10	; 16
     eca:	03 2f       	mov	r16, r19
     ecc:	00 30       	cpi	r16, 0x00	; 0
     ece:	21 2e       	mov	r2, r17
     ed0:	80 01       	movw	r16, r0
     ed2:	12 2d       	mov	r17, r2
     ed4:	01 2e       	mov	r0, r17
     ed6:	c9 00       	.word	0x00c9	; ????
     ed8:	02 80       	ldd	r0, Z+2	; 0x02
     eda:	05 2e       	mov	r0, r21
     edc:	80 01       	movw	r16, r0
     ede:	11 30       	cpi	r17, 0x01	; 1
     ee0:	91 28       	or	r9, r1
     ee2:	00 40       	sbci	r16, 0x00	; 0
     ee4:	25 2e       	mov	r2, r21
     ee6:	80 01       	movw	r16, r0
     ee8:	10 0e       	add	r1, r16
     eea:	05 2f       	mov	r16, r21
     eec:	01 2e       	mov	r0, r17
     eee:	7f 01       	movw	r14, r30
     ef0:	01 90       	ld	r0, Z+
     ef2:	01 2f       	mov	r16, r17
     ef4:	98 2e       	mov	r9, r24
     ef6:	f3 03       	fmuls	r23, r19
     ef8:	00 2e       	mov	r0, r16
     efa:	a0 41       	sbci	r26, 0x10	; 16
     efc:	01 90       	ld	r0, Z+
     efe:	a6 7f       	andi	r26, 0xF6	; 246
     f00:	90 2e       	mov	r9, r16
     f02:	e3 b4       	in	r14, 0x23	; 35
     f04:	01 2e       	mov	r0, r17
     f06:	95 01       	movw	r18, r10
     f08:	00 a8       	ldd	r0, Z+48	; 0x30
     f0a:	90 2e       	mov	r9, r16
     f0c:	e3 b4       	in	r14, 0x23	; 35
     f0e:	5b 54       	subi	r21, 0x4B	; 75
     f10:	95 80       	ldd	r9, Z+5	; 0x05
     f12:	82 40       	sbci	r24, 0x02	; 2
     f14:	80 b2       	in	r8, 0x10	; 16
     f16:	02 40       	sbci	r16, 0x02	; 2
     f18:	2d 8c       	ldd	r2, Y+29	; 0x1d
     f1a:	3f 52       	subi	r19, 0x2F	; 47
     f1c:	96 7f       	andi	r25, 0xF6	; 246
     f1e:	90 2e       	mov	r9, r16
     f20:	c2 b3       	in	r28, 0x12	; 18
     f22:	29 0e       	add	r2, r25
     f24:	76 2f       	mov	r23, r22
     f26:	01 2e       	mov	r0, r17
     f28:	c9 00       	.word	0x00c9	; ????
     f2a:	00 40       	sbci	r16, 0x00	; 0
     f2c:	81 28       	or	r8, r1
     f2e:	45 52       	subi	r20, 0x25	; 37
     f30:	b3 30       	cpi	r27, 0x03	; 3
     f32:	98 2e       	mov	r9, r24
     f34:	0f ca       	rjmp	.-3042   	; 0x354 <__trampolines_end+0x27e>
     f36:	5d 54       	subi	r21, 0x4D	; 77
     f38:	80 7f       	andi	r24, 0xF0	; 240
     f3a:	00 2e       	mov	r0, r16
     f3c:	a1 40       	sbci	r26, 0x01	; 1
     f3e:	72 7f       	andi	r23, 0xF2	; 242
     f40:	82 80       	ldd	r8, Z+2	; 0x02
     f42:	82 40       	sbci	r24, 0x02	; 2
     f44:	60 7f       	andi	r22, 0xF0	; 240
     f46:	98 2e       	mov	r9, r24
     f48:	fe c9       	rjmp	.-3076   	; 0x346 <__trampolines_end+0x270>
     f4a:	10 25       	eor	r17, r0
     f4c:	98 2e       	mov	r9, r24
     f4e:	74 c0       	rjmp	.+232    	; 0x1038 <__stack+0x739>
     f50:	62 6f       	ori	r22, 0xF2	; 242
     f52:	05 30       	cpi	r16, 0x05	; 5
     f54:	87 40       	sbci	r24, 0x07	; 7
     f56:	c0 91 04 30 	lds	r28, 0x3004	; 0x803004 <__bss_end+0x2a5e>
     f5a:	05 2f       	mov	r16, r21
     f5c:	05 2e       	mov	r0, r21
     f5e:	83 01       	movw	r16, r6
     f60:	80 b2       	in	r8, 0x10	; 16
     f62:	14 30       	cpi	r17, 0x04	; 4
     f64:	00 2f       	mov	r16, r16
     f66:	04 30       	cpi	r16, 0x04	; 4
     f68:	05 2e       	mov	r0, r21
     f6a:	c9 00       	.word	0x00c9	; ????
     f6c:	73 6f       	ori	r23, 0xF3	; 243
     f6e:	81 40       	sbci	r24, 0x01	; 1
     f70:	e2 40       	sbci	r30, 0x02	; 2
     f72:	69 04       	cpc	r6, r9
     f74:	11 0f       	add	r17, r17
     f76:	e1 40       	sbci	r30, 0x01	; 1
     f78:	16 30       	cpi	r17, 0x06	; 6
     f7a:	fe 29       	or	r31, r14
     f7c:	cb 40       	sbci	r28, 0x0B	; 11
     f7e:	02 2f       	mov	r16, r18
     f80:	83 6f       	ori	r24, 0xF3	; 243
     f82:	83 0f       	add	r24, r19
     f84:	22 2f       	mov	r18, r18
     f86:	47 56       	subi	r20, 0x67	; 103
     f88:	13 0f       	add	r17, r19
     f8a:	12 30       	cpi	r17, 0x02	; 2
     f8c:	77 2f       	mov	r23, r23
     f8e:	49 54       	subi	r20, 0x49	; 73
     f90:	42 0e       	add	r4, r18
     f92:	12 30       	cpi	r17, 0x02	; 2
     f94:	73 2f       	mov	r23, r19
     f96:	00 91 0a 2f 	lds	r16, 0x2F0A	; 0x802f0a <__bss_end+0x2964>
     f9a:	01 2e       	mov	r0, r17
     f9c:	8b 01       	movw	r16, r22
     f9e:	19 a8       	ldd	r1, Y+49	; 0x31
     fa0:	02 30       	cpi	r16, 0x02	; 2
     fa2:	6c 2f       	mov	r22, r28
     fa4:	63 50       	subi	r22, 0x03	; 3
     fa6:	00 2e       	mov	r0, r16
     fa8:	17 42       	sbci	r17, 0x27	; 39
     faa:	05 42       	sbci	r16, 0x25	; 37
     fac:	68 2c       	mov	r6, r8
     fae:	12 30       	cpi	r17, 0x02	; 2
     fb0:	0b 25       	eor	r16, r11
     fb2:	08 0f       	add	r16, r24
     fb4:	50 30       	cpi	r21, 0x00	; 0
     fb6:	02 2f       	mov	r16, r18
     fb8:	21 2e       	mov	r2, r17
     fba:	83 01       	movw	r16, r6
     fbc:	03 2d       	mov	r16, r3
     fbe:	40 30       	cpi	r20, 0x00	; 0
     fc0:	21 2e       	mov	r2, r17
     fc2:	83 01       	movw	r16, r6
     fc4:	2b 2e       	mov	r2, r27
     fc6:	85 01       	movw	r16, r10
     fc8:	5a 2c       	mov	r5, r10
     fca:	12 30       	cpi	r17, 0x02	; 2
     fcc:	00 91 2b 25 	lds	r16, 0x252B	; 0x80252b <__bss_end+0x1f85>
     fd0:	04 2f       	mov	r16, r20
     fd2:	63 50       	subi	r22, 0x03	; 3
     fd4:	02 30       	cpi	r16, 0x02	; 2
     fd6:	17 42       	sbci	r17, 0x27	; 39
     fd8:	17 2c       	mov	r1, r7
     fda:	02 42       	sbci	r16, 0x22	; 34
     fdc:	98 2e       	mov	r9, r24
     fde:	fe c9       	rjmp	.-3076   	; 0x3dc <__trampolines_end+0x306>
     fe0:	10 25       	eor	r17, r0
     fe2:	98 2e       	mov	r9, r24
     fe4:	74 c0       	rjmp	.+232    	; 0x10ce <__stack+0x7cf>
     fe6:	05 2e       	mov	r0, r21
     fe8:	c9 00       	.word	0x00c9	; ????
     fea:	81 84       	ldd	r8, Z+9	; 0x09
     fec:	5b 30       	cpi	r21, 0x0B	; 11
     fee:	82 40       	sbci	r24, 0x02	; 2
     ff0:	37 2e       	mov	r3, r23
     ff2:	83 01       	movw	r16, r6
     ff4:	02 0e       	add	r0, r18
     ff6:	07 2f       	mov	r16, r23
     ff8:	5f 52       	subi	r21, 0x2F	; 47
     ffa:	40 30       	cpi	r20, 0x00	; 0
     ffc:	62 40       	sbci	r22, 0x02	; 2
     ffe:	41 40       	sbci	r20, 0x01	; 1
    1000:	91 0e       	add	r9, r17
    1002:	01 2f       	mov	r16, r17
    1004:	21 2e       	mov	r2, r17
    1006:	83 01       	movw	r16, r6
    1008:	05 30       	cpi	r16, 0x05	; 5
    100a:	2b 2e       	mov	r2, r27
    100c:	85 01       	movw	r16, r10
    100e:	12 30       	cpi	r17, 0x02	; 2
    1010:	36 2c       	mov	r3, r6
    1012:	16 30       	cpi	r17, 0x06	; 6
    1014:	15 25       	eor	r17, r5
    1016:	81 7f       	andi	r24, 0xF1	; 241
    1018:	98 2e       	mov	r9, r24
    101a:	fe c9       	rjmp	.-3076   	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
    101c:	10 25       	eor	r17, r0
    101e:	98 2e       	mov	r9, r24
    1020:	74 c0       	rjmp	.+232    	; 0x110a <__stack+0x80b>
    1022:	19 a2       	std	Y+33, r1	; 0x21
    1024:	16 30       	cpi	r17, 0x06	; 6
    1026:	15 2f       	mov	r17, r21
    1028:	05 2e       	mov	r0, r21
    102a:	97 01       	movw	r18, r14
    102c:	80 6f       	ori	r24, 0xF0	; 240
    102e:	82 0e       	add	r8, r18
    1030:	05 2f       	mov	r16, r21
    1032:	01 2e       	mov	r0, r17
    1034:	86 01       	movw	r16, r12
    1036:	06 28       	or	r0, r6
    1038:	21 2e       	mov	r2, r17
    103a:	86 01       	movw	r16, r12
    103c:	0b 2d       	mov	r16, r11
    103e:	03 2e       	mov	r0, r19
    1040:	87 01       	movw	r16, r14
    1042:	5f 54       	subi	r21, 0x4F	; 79
    1044:	4e 28       	or	r4, r14
    1046:	91 42       	sbci	r25, 0x21	; 33
    1048:	00 2e       	mov	r0, r16
    104a:	82 40       	sbci	r24, 0x02	; 2
    104c:	90 0e       	add	r9, r16
    104e:	01 2f       	mov	r16, r17
    1050:	21 2e       	mov	r2, r17
    1052:	88 01       	movw	r16, r16
    1054:	02 30       	cpi	r16, 0x02	; 2
    1056:	13 2c       	mov	r1, r3
    1058:	05 30       	cpi	r16, 0x05	; 5
    105a:	c0 6f       	ori	r28, 0xF0	; 240
    105c:	08 1c       	adc	r0, r8
    105e:	a8 0f       	add	r26, r24
    1060:	16 30       	cpi	r17, 0x06	; 6
    1062:	05 30       	cpi	r16, 0x05	; 5
    1064:	5b 50       	subi	r21, 0x0B	; 11
    1066:	09 2f       	mov	r16, r25
    1068:	02 80       	ldd	r0, Z+2	; 0x02
    106a:	2d 2e       	mov	r2, r29
    106c:	82 01       	movw	r16, r4
    106e:	05 42       	sbci	r16, 0x25	; 37
    1070:	05 80       	ldd	r0, Z+5	; 0x05
    1072:	00 2e       	mov	r0, r16
    1074:	02 42       	sbci	r16, 0x22	; 34
    1076:	3e 80       	ldd	r3, Y+6	; 0x06
    1078:	00 2e       	mov	r0, r16
    107a:	06 42       	sbci	r16, 0x26	; 38
    107c:	02 30       	cpi	r16, 0x02	; 2
    107e:	90 6f       	ori	r25, 0xF0	; 240
    1080:	3e 88       	ldd	r3, Y+22	; 0x16
    1082:	01 40       	sbci	r16, 0x01	; 1
    1084:	04 41       	sbci	r16, 0x14	; 20
    1086:	4c 28       	or	r4, r12
    1088:	01 42       	sbci	r16, 0x21	; 33
    108a:	07 80       	ldd	r0, Z+7	; 0x07
    108c:	10 25       	eor	r17, r0
    108e:	24 40       	sbci	r18, 0x04	; 4
    1090:	00 40       	sbci	r16, 0x00	; 0
    1092:	00 a8       	ldd	r0, Z+48	; 0x30
    1094:	f5 22       	and	r15, r21
    1096:	23 29       	or	r18, r3
    1098:	44 42       	sbci	r20, 0x24	; 36
    109a:	7a 82       	std	Y+2, r7	; 0x02
    109c:	7e 88       	ldd	r7, Y+22	; 0x16
    109e:	43 40       	sbci	r20, 0x03	; 3
    10a0:	04 41       	sbci	r16, 0x14	; 20
    10a2:	00 ab       	std	Z+48, r16	; 0x30
    10a4:	f5 23       	and	r31, r21
    10a6:	df 28       	or	r13, r15
    10a8:	43 42       	sbci	r20, 0x23	; 35
    10aa:	d9 a0       	ldd	r13, Y+33	; 0x21
    10ac:	14 2f       	mov	r17, r20
    10ae:	00 90 02 2f 	lds	r0, 0x2F02	; 0x802f02 <__bss_end+0x295c>
    10b2:	d2 6f       	ori	r29, 0xF2	; 242
    10b4:	81 b2       	in	r8, 0x11	; 17
    10b6:	05 2f       	mov	r16, r21
    10b8:	63 54       	subi	r22, 0x43	; 67
    10ba:	06 28       	or	r0, r6
    10bc:	90 42       	sbci	r25, 0x20	; 32
    10be:	85 42       	sbci	r24, 0x25	; 37
    10c0:	09 2c       	mov	r0, r9
    10c2:	02 30       	cpi	r16, 0x02	; 2
    10c4:	5b 50       	subi	r21, 0x0B	; 11
    10c6:	03 80       	ldd	r0, Z+3	; 0x03
    10c8:	29 2e       	mov	r2, r25
    10ca:	7e 01       	movw	r14, r28
    10cc:	2b 2e       	mov	r2, r27
    10ce:	82 01       	movw	r16, r4
    10d0:	05 42       	sbci	r16, 0x25	; 37
    10d2:	12 30       	cpi	r17, 0x02	; 2
    10d4:	2b 2e       	mov	r2, r27
    10d6:	83 01       	movw	r16, r6
    10d8:	45 82       	std	Z+5, r4	; 0x05
    10da:	00 2e       	mov	r0, r16
    10dc:	40 40       	sbci	r20, 0x00	; 0
    10de:	7a 82       	std	Y+2, r7	; 0x02
    10e0:	02 a0       	ldd	r0, Z+34	; 0x22
    10e2:	08 2f       	mov	r16, r24
    10e4:	63 50       	subi	r22, 0x03	; 3
    10e6:	3b 30       	cpi	r19, 0x0B	; 11
    10e8:	15 42       	sbci	r17, 0x25	; 37
    10ea:	05 42       	sbci	r16, 0x25	; 37
    10ec:	37 80       	ldd	r3, Z+7	; 0x07
    10ee:	37 2e       	mov	r3, r23
    10f0:	7e 01       	movw	r14, r28
    10f2:	05 42       	sbci	r16, 0x25	; 37
    10f4:	12 30       	cpi	r17, 0x02	; 2
    10f6:	01 2e       	mov	r0, r17
    10f8:	c9 00       	.word	0x00c9	; ????
    10fa:	02 8c       	ldd	r0, Z+26	; 0x1a
    10fc:	40 40       	sbci	r20, 0x00	; 0
    10fe:	84 41       	sbci	r24, 0x14	; 20
    1100:	7a 8c       	ldd	r7, Y+26	; 0x1a
    1102:	04 0f       	add	r16, r20
    1104:	03 2f       	mov	r16, r19
    1106:	01 2e       	mov	r0, r17
    1108:	8b 01       	movw	r16, r22
    110a:	19 a4       	ldd	r1, Y+41	; 0x29
    110c:	04 2f       	mov	r16, r20
    110e:	2b 2e       	mov	r2, r27
    1110:	82 01       	movw	r16, r4
    1112:	98 2e       	mov	r9, r24
    1114:	f3 03       	fmuls	r23, r19
    1116:	12 30       	cpi	r17, 0x02	; 2
    1118:	81 90       	ld	r8, Z+
    111a:	61 52       	subi	r22, 0x21	; 33
    111c:	08 2f       	mov	r16, r24
    111e:	65 42       	sbci	r22, 0x25	; 37
    1120:	65 42       	sbci	r22, 0x25	; 37
    1122:	43 80       	ldd	r4, Z+3	; 0x03
    1124:	39 84       	ldd	r3, Y+9	; 0x09
    1126:	82 88       	ldd	r8, Z+18	; 0x12
    1128:	05 42       	sbci	r16, 0x25	; 37
    112a:	45 42       	sbci	r20, 0x25	; 37
    112c:	85 42       	sbci	r24, 0x25	; 37
    112e:	05 43       	sbci	r16, 0x35	; 53
    1130:	00 2e       	mov	r0, r16
    1132:	80 41       	sbci	r24, 0x10	; 16
    1134:	00 90 90 2e 	lds	r0, 0x2E90	; 0x802e90 <__bss_end+0x28ea>
    1138:	e1 b4       	in	r14, 0x21	; 33
    113a:	65 54       	subi	r22, 0x45	; 69
    113c:	c1 6f       	ori	r28, 0xF1	; 241
    113e:	80 40       	sbci	r24, 0x00	; 0
    1140:	00 b2       	in	r0, 0x10	; 16
    1142:	43 58       	subi	r20, 0x83	; 131
    1144:	69 50       	subi	r22, 0x09	; 9
    1146:	44 2f       	mov	r20, r20
    1148:	55 5c       	subi	r21, 0xC5	; 197
    114a:	b7 87       	std	Z+15, r27	; 0x0f
    114c:	8c 0f       	add	r24, r28
    114e:	0d 2e       	mov	r0, r29
    1150:	96 01       	movw	r18, r12
    1152:	c4 40       	sbci	r28, 0x04	; 4
    1154:	36 2f       	mov	r19, r22
    1156:	41 56       	subi	r20, 0x61	; 97
    1158:	8b 0e       	add	r8, r27
    115a:	2a 2f       	mov	r18, r26
    115c:	0b 52       	subi	r16, 0x2B	; 43
    115e:	a1 0e       	add	r10, r17
    1160:	0a 2f       	mov	r16, r26
    1162:	05 2e       	mov	r0, r21
    1164:	8f 01       	movw	r16, r30
    1166:	14 25       	eor	r17, r4
    1168:	98 2e       	mov	r9, r24
    116a:	fe c9       	rjmp	.-3076   	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
    116c:	4b 54       	subi	r20, 0x4B	; 75
    116e:	02 0f       	add	r16, r18
    1170:	69 50       	subi	r22, 0x09	; 9
    1172:	05 30       	cpi	r16, 0x05	; 5
    1174:	65 54       	subi	r22, 0x45	; 69
    1176:	15 2f       	mov	r17, r21
    1178:	03 2e       	mov	r0, r19
    117a:	8e 01       	movw	r16, r28
    117c:	4d 5c       	subi	r20, 0xCD	; 205
    117e:	8e 0f       	add	r24, r30
    1180:	3a 2f       	mov	r19, r26
    1182:	05 2e       	mov	r0, r21
    1184:	8f 01       	movw	r16, r30
    1186:	98 2e       	mov	r9, r24
    1188:	fe c9       	rjmp	.-3076   	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
    118a:	4f 54       	subi	r20, 0x4F	; 79
    118c:	82 0f       	add	r24, r18
    118e:	05 30       	cpi	r16, 0x05	; 5
    1190:	69 50       	subi	r22, 0x09	; 9
    1192:	65 54       	subi	r22, 0x45	; 69
    1194:	30 2f       	mov	r19, r16
    1196:	6d 52       	subi	r22, 0x2D	; 45
    1198:	15 30       	cpi	r17, 0x05	; 5
    119a:	42 8c       	ldd	r4, Z+26	; 0x1a
    119c:	45 42       	sbci	r20, 0x25	; 37
    119e:	04 30       	cpi	r16, 0x04	; 4
    11a0:	2b 2c       	mov	r2, r11
    11a2:	84 43       	sbci	r24, 0x34	; 52
    11a4:	6b 52       	subi	r22, 0x2B	; 43
    11a6:	42 8c       	ldd	r4, Z+26	; 0x1a
    11a8:	00 2e       	mov	r0, r16
    11aa:	85 43       	sbci	r24, 0x35	; 53
    11ac:	15 30       	cpi	r17, 0x05	; 5
    11ae:	24 2c       	mov	r2, r4
    11b0:	45 42       	sbci	r20, 0x25	; 37
    11b2:	8e 0f       	add	r24, r30
    11b4:	20 2f       	mov	r18, r16
    11b6:	0d 2e       	mov	r0, r29
    11b8:	8e 01       	movw	r16, r28
    11ba:	b1 0e       	add	r11, r17
    11bc:	1c 2f       	mov	r17, r28
    11be:	23 2e       	mov	r2, r19
    11c0:	8e 01       	movw	r16, r28
    11c2:	1a 2d       	mov	r17, r10
    11c4:	0e 0e       	add	r0, r30
    11c6:	17 2f       	mov	r17, r23
    11c8:	a1 0f       	add	r26, r17
    11ca:	15 2f       	mov	r17, r21
    11cc:	23 2e       	mov	r2, r19
    11ce:	8d 01       	movw	r16, r26
    11d0:	13 2d       	mov	r17, r3
    11d2:	98 2e       	mov	r9, r24
    11d4:	74 c0       	rjmp	.+232    	; 0x12be <__stack+0x9bf>
    11d6:	43 54       	subi	r20, 0x43	; 67
    11d8:	c2 0e       	add	r12, r18
    11da:	0a 2f       	mov	r16, r26
    11dc:	65 50       	subi	r22, 0x05	; 5
    11de:	04 80       	ldd	r0, Z+4	; 0x04
    11e0:	0b 30       	cpi	r16, 0x0B	; 11
    11e2:	06 82       	std	Z+6, r0	; 0x06
    11e4:	0b 42       	sbci	r16, 0x2B	; 43
    11e6:	79 80       	ldd	r7, Y+1	; 0x01
    11e8:	41 40       	sbci	r20, 0x01	; 1
    11ea:	12 30       	cpi	r17, 0x02	; 2
    11ec:	25 2e       	mov	r2, r21
    11ee:	8c 01       	movw	r16, r24
    11f0:	01 42       	sbci	r16, 0x21	; 33
    11f2:	05 30       	cpi	r16, 0x05	; 5
    11f4:	69 50       	subi	r22, 0x09	; 9
    11f6:	65 54       	subi	r22, 0x45	; 69
    11f8:	84 82       	std	Z+4, r8	; 0x04
    11fa:	43 84       	ldd	r4, Z+11	; 0x0b
    11fc:	be 8c       	ldd	r11, Y+30	; 0x1e
    11fe:	84 40       	sbci	r24, 0x04	; 4
    1200:	86 41       	sbci	r24, 0x16	; 22
    1202:	26 29       	or	r18, r6
    1204:	94 42       	sbci	r25, 0x24	; 36
    1206:	be 8e       	std	Y+30, r11	; 0x1e
    1208:	d5 7f       	andi	r29, 0xF5	; 245
    120a:	19 a1       	ldd	r17, Y+33	; 0x21
    120c:	43 40       	sbci	r20, 0x03	; 3
    120e:	0b 2e       	mov	r0, r27
    1210:	8c 01       	movw	r16, r24
    1212:	84 40       	sbci	r24, 0x04	; 4
    1214:	c7 41       	sbci	r28, 0x17	; 23
    1216:	5d 29       	or	r21, r13
    1218:	27 29       	or	r18, r7
    121a:	45 42       	sbci	r20, 0x25	; 37
    121c:	84 42       	sbci	r24, 0x24	; 36
    121e:	c2 7f       	andi	r28, 0xF2	; 242
    1220:	01 2f       	mov	r16, r17
    1222:	c0 b3       	in	r28, 0x10	; 16
    1224:	1d 2f       	mov	r17, r29
    1226:	05 2e       	mov	r0, r21
    1228:	94 01       	movw	r18, r8
    122a:	99 a0       	ldd	r9, Y+33	; 0x21
    122c:	01 2f       	mov	r16, r17
    122e:	80 b3       	in	r24, 0x10	; 16
    1230:	13 2f       	mov	r17, r19
    1232:	80 b3       	in	r24, 0x10	; 16
    1234:	18 2f       	mov	r17, r24
    1236:	c0 b3       	in	r28, 0x10	; 16
    1238:	16 2f       	mov	r17, r22
    123a:	12 40       	sbci	r17, 0x02	; 2
    123c:	01 40       	sbci	r16, 0x01	; 1
    123e:	92 7f       	andi	r25, 0xF2	; 242
    1240:	98 2e       	mov	r9, r24
    1242:	74 c0       	rjmp	.+232    	; 0x132c <__stack+0xa2d>
    1244:	92 6f       	ori	r25, 0xF2	; 242
    1246:	10 0f       	add	r17, r16
    1248:	20 30       	cpi	r18, 0x00	; 0
    124a:	03 2f       	mov	r16, r19
    124c:	10 30       	cpi	r17, 0x00	; 0
    124e:	21 2e       	mov	r2, r17
    1250:	7e 01       	movw	r14, r28
    1252:	0a 2d       	mov	r16, r10
    1254:	21 2e       	mov	r2, r17
    1256:	7e 01       	movw	r14, r28
    1258:	07 2d       	mov	r16, r7
    125a:	20 30       	cpi	r18, 0x00	; 0
    125c:	21 2e       	mov	r2, r17
    125e:	7e 01       	movw	r14, r28
    1260:	03 2d       	mov	r16, r3
    1262:	10 30       	cpi	r17, 0x00	; 0
    1264:	21 2e       	mov	r2, r17
    1266:	7e 01       	movw	r14, r28
    1268:	c2 6f       	ori	r28, 0xF2	; 242
    126a:	01 2e       	mov	r0, r17
    126c:	c9 00       	.word	0x00c9	; ????
    126e:	bc 84       	ldd	r11, Y+12	; 0x0c
    1270:	02 80       	ldd	r0, Z+2	; 0x02
    1272:	82 40       	sbci	r24, 0x02	; 2
    1274:	00 40       	sbci	r16, 0x00	; 0
    1276:	90 0e       	add	r9, r16
    1278:	d5 6f       	ori	r29, 0xF5	; 245
    127a:	02 2f       	mov	r16, r18
    127c:	15 30       	cpi	r17, 0x05	; 5
    127e:	98 2e       	mov	r9, r24
    1280:	f3 03       	fmuls	r23, r19
    1282:	41 91       	ld	r20, Z+
    1284:	05 30       	cpi	r16, 0x05	; 5
    1286:	07 2f       	mov	r16, r23
    1288:	67 50       	subi	r22, 0x07	; 7
    128a:	3d 80       	ldd	r3, Y+5	; 0x05
    128c:	2b 2e       	mov	r2, r27
    128e:	8f 01       	movw	r16, r30
    1290:	05 42       	sbci	r16, 0x25	; 37
    1292:	04 80       	ldd	r0, Z+4	; 0x04
    1294:	00 2e       	mov	r0, r16
    1296:	05 42       	sbci	r16, 0x25	; 37
    1298:	02 2c       	mov	r0, r2
    129a:	00 30       	cpi	r16, 0x00	; 0
    129c:	00 30       	cpi	r16, 0x00	; 0
    129e:	a2 6f       	ori	r26, 0xF2	; 242
    12a0:	98 8a       	std	Y+16, r9	; 0x10
    12a2:	86 40       	sbci	r24, 0x06	; 6
    12a4:	80 a7       	std	Z+40, r24	; 0x28
    12a6:	05 2f       	mov	r16, r21
    12a8:	98 2e       	mov	r9, r24
    12aa:	f3 03       	fmuls	r23, r19
    12ac:	c0 30       	cpi	r28, 0x00	; 0
    12ae:	21 2e       	mov	r2, r17
    12b0:	95 01       	movw	r18, r10
    12b2:	06 25       	eor	r16, r6
    12b4:	1a 25       	eor	r17, r10
    12b6:	e2 6f       	ori	r30, 0xF2	; 242
    12b8:	76 82       	std	Z+6, r7	; 0x06
    12ba:	96 40       	sbci	r25, 0x06	; 6
    12bc:	56 43       	sbci	r21, 0x36	; 54
    12be:	51 0e       	add	r5, r17
    12c0:	fb 2f       	mov	r31, r27
    12c2:	bb 6f       	ori	r27, 0xFB	; 251
    12c4:	30 5f       	subi	r19, 0xF0	; 240
    12c6:	b8 2e       	mov	r11, r24
    12c8:	01 2e       	mov	r0, r17
    12ca:	b8 00       	.word	0x00b8	; ????
    12cc:	01 31       	cpi	r16, 0x11	; 17
    12ce:	41 08       	sbc	r4, r1
    12d0:	40 b2       	in	r4, 0x10	; 16
    12d2:	20 50       	subi	r18, 0x00	; 0
    12d4:	f2 30       	cpi	r31, 0x02	; 2
    12d6:	02 08       	sbc	r0, r2
    12d8:	fb 7f       	andi	r31, 0xFB	; 251
    12da:	01 30       	cpi	r16, 0x01	; 1
    12dc:	10 2f       	mov	r17, r16
    12de:	05 2e       	mov	r0, r21
    12e0:	cc 00       	.word	0x00cc	; ????
    12e2:	81 90       	ld	r8, Z+
    12e4:	e0 7f       	andi	r30, 0xF0	; 240
    12e6:	03 2f       	mov	r16, r19
    12e8:	23 2e       	mov	r2, r19
    12ea:	cc 00       	.word	0x00cc	; ????
    12ec:	98 2e       	mov	r9, r24
    12ee:	55 b6       	in	r5, 0x35	; 53
    12f0:	98 2e       	mov	r9, r24
    12f2:	1d b5       	in	r17, 0x2d	; 45
    12f4:	10 25       	eor	r17, r0
    12f6:	fb 6f       	ori	r31, 0xFB	; 251
    12f8:	e0 6f       	ori	r30, 0xF0	; 240
    12fa:	e0 5f       	subi	r30, 0xF0	; 240
    12fc:	80 2e       	mov	r8, r16
    12fe:	95 cf       	rjmp	.-214    	; 0x122a <__stack+0x92b>
    1300:	98 2e       	mov	r9, r24
    1302:	95 cf       	rjmp	.-214    	; 0x122e <__stack+0x92f>
    1304:	10 30       	cpi	r17, 0x00	; 0
    1306:	21 2e       	mov	r2, r17
    1308:	cc 00       	.word	0x00cc	; ????
    130a:	fb 6f       	ori	r31, 0xFB	; 251
    130c:	e0 5f       	subi	r30, 0xF0	; 240
    130e:	b8 2e       	mov	r11, r24
    1310:	00 51       	subi	r16, 0x10	; 16
    1312:	05 58       	subi	r16, 0x85	; 133
    1314:	eb 7f       	andi	r30, 0xFB	; 251
    1316:	2a 25       	eor	r18, r10
    1318:	89 52       	subi	r24, 0x29	; 41
    131a:	6f 5a       	subi	r22, 0xAF	; 175
    131c:	89 50       	subi	r24, 0x09	; 9
    131e:	13 41       	sbci	r17, 0x13	; 19
    1320:	06 40       	sbci	r16, 0x06	; 6
    1322:	b3 01       	movw	r22, r6
    1324:	16 42       	sbci	r17, 0x26	; 38
    1326:	cb 16       	cp	r12, r27
    1328:	06 40       	sbci	r16, 0x06	; 6
    132a:	f3 02       	muls	r31, r19
    132c:	13 42       	sbci	r17, 0x23	; 35
    132e:	65 0e       	add	r6, r21
    1330:	f5 2f       	mov	r31, r21
    1332:	05 40       	sbci	r16, 0x05	; 5
    1334:	14 30       	cpi	r17, 0x04	; 4
    1336:	2c 29       	or	r18, r12
    1338:	04 42       	sbci	r16, 0x24	; 36
    133a:	08 a1       	ldd	r16, Y+32	; 0x20
    133c:	00 30       	cpi	r16, 0x00	; 0
    133e:	90 2e       	mov	r9, r16
    1340:	52 b6       	in	r5, 0x32	; 50
    1342:	b3 88       	ldd	r11, Z+19	; 0x13
    1344:	b0 8a       	std	Z+16, r11	; 0x10
    1346:	b6 84       	ldd	r11, Z+14	; 0x0e
    1348:	a4 7f       	andi	r26, 0xF4	; 244
    134a:	c4 7f       	andi	r28, 0xF4	; 244
    134c:	b5 7f       	andi	r27, 0xF5	; 245
    134e:	d5 7f       	andi	r29, 0xF5	; 245
    1350:	92 7f       	andi	r25, 0xF2	; 242
    1352:	73 30       	cpi	r23, 0x03	; 3
    1354:	04 30       	cpi	r16, 0x04	; 4
    1356:	55 40       	sbci	r21, 0x05	; 5
    1358:	42 40       	sbci	r20, 0x02	; 2
    135a:	8a 17       	cp	r24, r26
    135c:	f3 08       	sbc	r15, r3
    135e:	6b 01       	movw	r12, r22
    1360:	90 02       	muls	r25, r16
    1362:	53 b8       	out	0x03, r5	; 3
    1364:	4b 82       	std	Y+3, r4	; 0x03
    1366:	ad be       	out	0x3d, r10	; 61
    1368:	71 7f       	andi	r23, 0xF1	; 241
    136a:	45 0a       	sbc	r4, r21
    136c:	09 54       	subi	r16, 0x49	; 73
    136e:	84 7f       	andi	r24, 0xF4	; 244
    1370:	98 2e       	mov	r9, r24
    1372:	d9 c0       	rjmp	.+434    	; 0x1526 <__stack+0xc27>
    1374:	a3 6f       	ori	r26, 0xF3	; 243
    1376:	7b 54       	subi	r23, 0x4B	; 75
    1378:	d0 42       	sbci	r29, 0x20	; 32
    137a:	a3 7f       	andi	r26, 0xF3	; 243
    137c:	f2 7f       	andi	r31, 0xF2	; 242
    137e:	60 7f       	andi	r22, 0xF0	; 240
    1380:	20 25       	eor	r18, r0
    1382:	71 6f       	ori	r23, 0xF1	; 241
    1384:	75 5a       	subi	r23, 0xA5	; 165
    1386:	77 58       	subi	r23, 0x87	; 135
    1388:	79 5c       	subi	r23, 0xC9	; 201
    138a:	75 56       	subi	r23, 0x65	; 101
    138c:	98 2e       	mov	r9, r24
    138e:	67 cc       	rjmp	.-1842   	; 0xc5e <__stack+0x35f>
    1390:	b1 6f       	ori	r27, 0xF1	; 241
    1392:	62 6f       	ori	r22, 0xF2	; 242
    1394:	50 42       	sbci	r21, 0x20	; 32
    1396:	b1 7f       	andi	r27, 0xF1	; 241
    1398:	b3 30       	cpi	r27, 0x03	; 3
    139a:	10 25       	eor	r17, r0
    139c:	98 2e       	mov	r9, r24
    139e:	0f ca       	rjmp	.-3042   	; 0x7be <__EEPROM_REGION_LENGTH__+0x3be>
    13a0:	84 6f       	ori	r24, 0xF4	; 244
    13a2:	20 29       	or	r18, r0
    13a4:	71 6f       	ori	r23, 0xF1	; 241
    13a6:	92 6f       	ori	r25, 0xF2	; 242
    13a8:	a5 6f       	ori	r26, 0xF5	; 245
    13aa:	76 82       	std	Z+6, r7	; 0x06
    13ac:	6a 0e       	add	r6, r26
    13ae:	73 30       	cpi	r23, 0x03	; 3
    13b0:	00 30       	cpi	r16, 0x00	; 0
    13b2:	d0 2f       	mov	r29, r16
    13b4:	d2 6f       	ori	r29, 0xF2	; 242
    13b6:	d1 7f       	andi	r29, 0xF1	; 241
    13b8:	b4 7f       	andi	r27, 0xF4	; 244
    13ba:	98 2e       	mov	r9, r24
    13bc:	2b b7       	in	r18, 0x3b	; 59
    13be:	15 bd       	out	0x25, r17	; 37
    13c0:	0b b8       	out	0x0b, r0	; 11
    13c2:	02 0a       	sbc	r0, r18
    13c4:	c2 6f       	ori	r28, 0xF2	; 242
    13c6:	c0 7f       	andi	r28, 0xF0	; 240
    13c8:	98 2e       	mov	r9, r24
    13ca:	2b b7       	in	r18, 0x3b	; 59
    13cc:	15 bd       	out	0x25, r17	; 37
    13ce:	0b b8       	out	0x0b, r0	; 11
    13d0:	42 0a       	sbc	r4, r18
    13d2:	c0 6f       	ori	r28, 0xF0	; 240
    13d4:	08 17       	cp	r16, r24
    13d6:	41 18       	sub	r4, r1
    13d8:	89 16       	cp	r8, r25
    13da:	e1 18       	sub	r14, r1
    13dc:	d0 18       	sub	r13, r0
    13de:	a1 7f       	andi	r26, 0xF1	; 241
    13e0:	27 25       	eor	r18, r7
    13e2:	16 25       	eor	r17, r6
    13e4:	98 2e       	mov	r9, r24
    13e6:	79 c0       	rjmp	.+242    	; 0x14da <__stack+0xbdb>
    13e8:	8b 54       	subi	r24, 0x4B	; 75
    13ea:	90 7f       	andi	r25, 0xF0	; 240
    13ec:	b3 30       	cpi	r27, 0x03	; 3
    13ee:	82 40       	sbci	r24, 0x02	; 2
    13f0:	80 90 0d 2f 	lds	r8, 0x2F0D	; 0x802f0d <__bss_end+0x2967>
    13f4:	7d 52       	subi	r23, 0x2D	; 45
    13f6:	92 6f       	ori	r25, 0xF2	; 242
    13f8:	98 2e       	mov	r9, r24
    13fa:	0f ca       	rjmp	.-3042   	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
    13fc:	b2 6f       	ori	r27, 0xF2	; 242
    13fe:	90 0e       	add	r9, r16
    1400:	06 2f       	mov	r16, r22
    1402:	8b 50       	subi	r24, 0x0B	; 11
    1404:	14 30       	cpi	r17, 0x04	; 4
    1406:	42 6f       	ori	r20, 0xF2	; 242
    1408:	51 6f       	ori	r21, 0xF1	; 241
    140a:	14 42       	sbci	r17, 0x24	; 36
    140c:	12 42       	sbci	r17, 0x22	; 34
    140e:	01 42       	sbci	r16, 0x21	; 33
    1410:	00 2e       	mov	r0, r16
    1412:	31 6f       	ori	r19, 0xF1	; 241
    1414:	98 2e       	mov	r9, r24
    1416:	74 c0       	rjmp	.+232    	; 0x1500 <__stack+0xc01>
    1418:	41 6f       	ori	r20, 0xF1	; 241
    141a:	80 7f       	andi	r24, 0xF0	; 240
    141c:	98 2e       	mov	r9, r24
    141e:	74 c0       	rjmp	.+232    	; 0x1508 <__stack+0xc09>
    1420:	82 6f       	ori	r24, 0xF2	; 242
    1422:	10 04       	cpc	r1, r0
    1424:	43 52       	subi	r20, 0x23	; 35
    1426:	01 0f       	add	r16, r17
    1428:	05 2e       	mov	r0, r21
    142a:	cb 00       	.word	0x00cb	; ????
    142c:	00 30       	cpi	r16, 0x00	; 0
    142e:	04 30       	cpi	r16, 0x04	; 4
    1430:	21 2f       	mov	r18, r17
    1432:	51 6f       	ori	r21, 0xF1	; 241
    1434:	43 58       	subi	r20, 0x83	; 131
    1436:	8c 0e       	add	r8, r28
    1438:	04 30       	cpi	r16, 0x04	; 4
    143a:	1c 2f       	mov	r17, r28
    143c:	85 88       	ldd	r8, Z+21	; 0x15
    143e:	41 6f       	ori	r20, 0xF1	; 241
    1440:	04 41       	sbci	r16, 0x14	; 20
    1442:	8c 0f       	add	r24, r28
    1444:	04 30       	cpi	r16, 0x04	; 4
    1446:	16 2f       	mov	r17, r22
    1448:	84 88       	ldd	r8, Z+20	; 0x14
    144a:	00 2e       	mov	r0, r16
    144c:	04 41       	sbci	r16, 0x14	; 20
    144e:	04 05       	cpc	r16, r4
    1450:	8c 0e       	add	r8, r28
    1452:	04 30       	cpi	r16, 0x04	; 4
    1454:	0f 2f       	mov	r16, r31
    1456:	82 88       	ldd	r8, Z+18	; 0x12
    1458:	31 6f       	ori	r19, 0xF1	; 241
    145a:	04 41       	sbci	r16, 0x14	; 20
    145c:	04 05       	cpc	r16, r4
    145e:	8c 0e       	add	r8, r28
    1460:	04 30       	cpi	r16, 0x04	; 4
    1462:	08 2f       	mov	r16, r24
    1464:	83 88       	ldd	r8, Z+19	; 0x13
    1466:	00 2e       	mov	r0, r16
    1468:	04 41       	sbci	r16, 0x14	; 20
    146a:	8c 0f       	add	r24, r28
    146c:	04 30       	cpi	r16, 0x04	; 4
    146e:	02 2f       	mov	r16, r18
    1470:	21 2e       	mov	r2, r17
    1472:	ad 01       	movw	r20, r26
    1474:	14 30       	cpi	r17, 0x04	; 4
    1476:	00 91 14 2f 	lds	r16, 0x2F14	; 0x802f14 <__bss_end+0x296e>
    147a:	03 2e       	mov	r0, r19
    147c:	a1 01       	movw	r20, r2
    147e:	41 90       	ld	r4, Z+
    1480:	0e 2f       	mov	r16, r30
    1482:	03 2e       	mov	r0, r19
    1484:	ad 01       	movw	r20, r26
    1486:	14 30       	cpi	r17, 0x04	; 4
    1488:	4c 28       	or	r4, r12
    148a:	23 2e       	mov	r2, r19
    148c:	ad 01       	movw	r20, r26
    148e:	46 a0       	ldd	r4, Z+38	; 0x26
    1490:	06 2f       	mov	r16, r22
    1492:	81 84       	ldd	r8, Z+9	; 0x09
    1494:	8d 52       	subi	r24, 0x2D	; 45
    1496:	48 82       	st	Y, r4
    1498:	82 40       	sbci	r24, 0x02	; 2
    149a:	21 2e       	mov	r2, r17
    149c:	a1 01       	movw	r20, r2
    149e:	42 42       	sbci	r20, 0x22	; 34
    14a0:	5c 2c       	mov	r5, r12
    14a2:	02 30       	cpi	r16, 0x02	; 2
    14a4:	05 2e       	mov	r0, r21
    14a6:	aa 01       	movw	r20, r20
    14a8:	80 b2       	in	r8, 0x10	; 16
    14aa:	02 30       	cpi	r16, 0x02	; 2
    14ac:	55 2f       	mov	r21, r21
    14ae:	03 2e       	mov	r0, r19
    14b0:	a9 01       	movw	r20, r18
    14b2:	92 6f       	ori	r25, 0xF2	; 242
    14b4:	b3 30       	cpi	r27, 0x03	; 3
    14b6:	98 2e       	mov	r9, r24
    14b8:	0f ca       	rjmp	.-3042   	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
    14ba:	b2 6f       	ori	r27, 0xF2	; 242
    14bc:	90 0f       	add	r25, r16
    14be:	00 30       	cpi	r16, 0x00	; 0
    14c0:	02 30       	cpi	r16, 0x02	; 2
    14c2:	4a 2f       	mov	r20, r26
    14c4:	a2 6f       	ori	r26, 0xF2	; 242
    14c6:	87 52       	subi	r24, 0x27	; 39
    14c8:	91 00       	.word	0x0091	; ????
    14ca:	85 52       	subi	r24, 0x25	; 37
    14cc:	51 0e       	add	r5, r17
    14ce:	02 2f       	mov	r16, r18
    14d0:	00 2e       	mov	r0, r16
    14d2:	43 2c       	mov	r4, r3
    14d4:	02 30       	cpi	r16, 0x02	; 2
    14d6:	c2 6f       	ori	r28, 0xF2	; 242
    14d8:	7f 52       	subi	r23, 0x2F	; 47
    14da:	91 0e       	add	r9, r17
    14dc:	02 30       	cpi	r16, 0x02	; 2
    14de:	3c 2f       	mov	r19, r28
    14e0:	51 6f       	ori	r21, 0xF1	; 241
    14e2:	81 54       	subi	r24, 0x41	; 65
    14e4:	98 2e       	mov	r9, r24
    14e6:	fe c9       	rjmp	.-3076   	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
    14e8:	10 25       	eor	r17, r0
    14ea:	b3 30       	cpi	r27, 0x03	; 3
    14ec:	21 25       	eor	r18, r1
    14ee:	98 2e       	mov	r9, r24
    14f0:	0f ca       	rjmp	.-3042   	; 0x910 <__stack+0x11>
    14f2:	32 6f       	ori	r19, 0xF2	; 242
    14f4:	c0 7f       	andi	r28, 0xF0	; 240
    14f6:	b3 30       	cpi	r27, 0x03	; 3
    14f8:	12 25       	eor	r17, r2
    14fa:	98 2e       	mov	r9, r24
    14fc:	0f ca       	rjmp	.-3042   	; 0x91c <__stack+0x1d>
    14fe:	42 6f       	ori	r20, 0xF2	; 242
    1500:	b0 7f       	andi	r27, 0xF0	; 240
    1502:	b3 30       	cpi	r27, 0x03	; 3
    1504:	12 25       	eor	r17, r2
    1506:	98 2e       	mov	r9, r24
    1508:	0f ca       	rjmp	.-3042   	; 0x928 <__stack+0x29>
    150a:	b2 6f       	ori	r27, 0xF2	; 242
    150c:	90 28       	or	r9, r0
    150e:	83 52       	subi	r24, 0x23	; 35
    1510:	98 2e       	mov	r9, r24
    1512:	fe c9       	rjmp	.-3076   	; 0x910 <__stack+0x11>
    1514:	c2 6f       	ori	r28, 0xF2	; 242
    1516:	90 0f       	add	r25, r16
    1518:	00 30       	cpi	r16, 0x00	; 0
    151a:	02 30       	cpi	r16, 0x02	; 2
    151c:	1d 2f       	mov	r17, r29
    151e:	05 2e       	mov	r0, r21
    1520:	a1 01       	movw	r20, r2
    1522:	80 b2       	in	r8, 0x10	; 16
    1524:	12 30       	cpi	r17, 0x02	; 2
    1526:	0f 2f       	mov	r16, r31
    1528:	42 6f       	ori	r20, 0xF2	; 242
    152a:	03 2e       	mov	r0, r19
    152c:	ab 01       	movw	r20, r22
    152e:	91 0e       	add	r9, r17
    1530:	02 30       	cpi	r16, 0x02	; 2
    1532:	12 2f       	mov	r17, r18
    1534:	52 6f       	ori	r21, 0xF2	; 242
    1536:	03 2e       	mov	r0, r19
    1538:	ac 01       	movw	r20, r24
    153a:	91 0f       	add	r25, r17
    153c:	02 30       	cpi	r16, 0x02	; 2
    153e:	0c 2f       	mov	r16, r28
    1540:	21 2e       	mov	r2, r17
    1542:	aa 01       	movw	r20, r20
    1544:	0a 2c       	mov	r0, r10
    1546:	12 30       	cpi	r17, 0x02	; 2
    1548:	03 2e       	mov	r0, r19
    154a:	cb 00       	.word	0x00cb	; ????
    154c:	8d 58       	subi	r24, 0x8D	; 141
    154e:	08 89       	ldd	r16, Y+16	; 0x10
    1550:	41 40       	sbci	r20, 0x01	; 1
    1552:	11 43       	sbci	r17, 0x31	; 49
    1554:	00 43       	sbci	r16, 0x30	; 48
    1556:	25 2e       	mov	r2, r21
    1558:	a1 01       	movw	r20, r2
    155a:	d4 6f       	ori	r29, 0xF4	; 244
    155c:	8f 52       	subi	r24, 0x2F	; 47
    155e:	00 43       	sbci	r16, 0x30	; 48
    1560:	3a 89       	ldd	r19, Y+18	; 0x12
    1562:	00 2e       	mov	r0, r16
    1564:	10 43       	sbci	r17, 0x30	; 48
    1566:	10 43       	sbci	r17, 0x30	; 48
    1568:	61 0e       	add	r6, r17
    156a:	fb 2f       	mov	r31, r27
    156c:	03 2e       	mov	r0, r19
    156e:	a0 01       	movw	r20, r0
    1570:	11 1a       	sub	r1, r17
    1572:	02 2f       	mov	r16, r18
    1574:	02 25       	eor	r16, r2
    1576:	21 2e       	mov	r2, r17
    1578:	a0 01       	movw	r20, r0
    157a:	eb 6f       	ori	r30, 0xFB	; 251
    157c:	00 5f       	subi	r16, 0xF0	; 240
    157e:	b8 2e       	mov	r11, r24
    1580:	91 52       	subi	r25, 0x21	; 33
    1582:	10 30       	cpi	r17, 0x00	; 0
    1584:	02 30       	cpi	r16, 0x02	; 2
    1586:	95 56       	subi	r25, 0x65	; 101
    1588:	52 42       	sbci	r21, 0x22	; 34
    158a:	4b 0e       	add	r4, r27
    158c:	fc 2f       	mov	r31, r28
    158e:	8d 54       	subi	r24, 0x4D	; 77
    1590:	88 82       	st	Y, r8
    1592:	93 56       	subi	r25, 0x63	; 99
    1594:	80 42       	sbci	r24, 0x20	; 32
    1596:	53 42       	sbci	r21, 0x23	; 35
    1598:	40 42       	sbci	r20, 0x20	; 32
    159a:	42 86       	std	Z+10, r4	; 0x0a
    159c:	83 54       	subi	r24, 0x43	; 67
    159e:	c0 2e       	mov	r12, r16
    15a0:	c2 42       	sbci	r28, 0x22	; 34
    15a2:	00 2e       	mov	r0, r16
    15a4:	a3 52       	subi	r26, 0x23	; 35
    15a6:	00 51       	subi	r16, 0x10	; 16
    15a8:	52 40       	sbci	r21, 0x02	; 2
    15aa:	47 40       	sbci	r20, 0x07	; 7
    15ac:	1a 25       	eor	r17, r10
    15ae:	01 2e       	mov	r0, r17
    15b0:	97 00       	.word	0x0097	; ????
    15b2:	8f be       	out	0x3f, r8	; 63
    15b4:	72 86       	std	Z+10, r7	; 0x0a
    15b6:	fb 7f       	andi	r31, 0xFB	; 251
    15b8:	0b 30       	cpi	r16, 0x0B	; 11
    15ba:	7c bf       	out	0x3c, r23	; 60
    15bc:	a5 50       	subi	r26, 0x05	; 5
    15be:	10 08       	sbc	r1, r0
    15c0:	df ba       	out	0x1f, r13	; 31
    15c2:	70 88       	ldd	r7, Z+16	; 0x10
    15c4:	f8 bf       	out	0x38, r31	; 56
    15c6:	cb 42       	sbci	r28, 0x2B	; 43
    15c8:	d3 7f       	andi	r29, 0xF3	; 243
    15ca:	6c bb       	out	0x1c, r22	; 28
    15cc:	fc bb       	out	0x1c, r31	; 28
    15ce:	c5 0a       	sbc	r12, r21
    15d0:	90 7f       	andi	r25, 0xF0	; 240
    15d2:	1b 7f       	andi	r17, 0xFB	; 251
    15d4:	0b 43       	sbci	r16, 0x3B	; 59
    15d6:	c0 b2       	in	r12, 0x10	; 16
    15d8:	e5 7f       	andi	r30, 0xF5	; 245
    15da:	b7 7f       	andi	r27, 0xF7	; 247
    15dc:	a6 7f       	andi	r26, 0xF6	; 246
    15de:	c4 7f       	andi	r28, 0xF4	; 244
    15e0:	90 2e       	mov	r9, r16
    15e2:	1c b7       	in	r17, 0x3c	; 60
    15e4:	07 2e       	mov	r0, r23
    15e6:	d2 00       	.word	0x00d2	; ????
    15e8:	c0 b2       	in	r12, 0x10	; 16
    15ea:	0b 2f       	mov	r16, r27
    15ec:	97 52       	subi	r25, 0x27	; 39
    15ee:	01 2e       	mov	r0, r17
    15f0:	cd 00       	.word	0x00cd	; ????
    15f2:	82 7f       	andi	r24, 0xF2	; 242
    15f4:	98 2e       	mov	r9, r24
    15f6:	bb cc       	rjmp	.-1674   	; 0xf6e <__stack+0x66f>
    15f8:	0b 30       	cpi	r16, 0x0B	; 11
    15fa:	37 2e       	mov	r3, r23
    15fc:	d2 00       	.word	0x00d2	; ????
    15fe:	82 6f       	ori	r24, 0xF2	; 242
    1600:	90 6f       	ori	r25, 0xF0	; 240
    1602:	1a 25       	eor	r17, r10
    1604:	00 b2       	in	r0, 0x10	; 16
    1606:	8b 7f       	andi	r24, 0xFB	; 251
    1608:	14 2f       	mov	r17, r20
    160a:	a6 bd       	out	0x26, r26	; 38
    160c:	25 bd       	out	0x25, r18	; 37
    160e:	b6 b9       	out	0x06, r27	; 6
    1610:	2f b9       	out	0x0f, r18	; 15
    1612:	80 b2       	in	r8, 0x10	; 16
    1614:	d4 b0       	in	r13, 0x04	; 4
    1616:	0c 2f       	mov	r16, r28
    1618:	99 54       	subi	r25, 0x49	; 73
    161a:	9b 56       	subi	r25, 0x6B	; 107
    161c:	0b 30       	cpi	r16, 0x0B	; 11
    161e:	0b 2e       	mov	r0, r27
    1620:	b1 00       	.word	0x00b1	; ????
    1622:	a1 58       	subi	r26, 0x81	; 129
    1624:	9b 42       	sbci	r25, 0x2B	; 43
    1626:	db 42       	sbci	r29, 0x2B	; 43
    1628:	6c 09       	sbc	r22, r12
    162a:	2b 2e       	mov	r2, r27
    162c:	b1 00       	.word	0x00b1	; ????
    162e:	8b 42       	sbci	r24, 0x2B	; 43
    1630:	cb 42       	sbci	r28, 0x2B	; 43
    1632:	86 7f       	andi	r24, 0xF6	; 246
    1634:	73 84       	ldd	r7, Z+11	; 0x0b
    1636:	a7 56       	subi	r26, 0x67	; 103
    1638:	c3 08       	sbc	r12, r3
    163a:	39 52       	subi	r19, 0x29	; 41
    163c:	05 50       	subi	r16, 0x05	; 5
    163e:	72 7f       	andi	r23, 0xF2	; 242
    1640:	63 7f       	andi	r22, 0xF3	; 243
    1642:	98 2e       	mov	r9, r24
    1644:	c2 c0       	rjmp	.+388    	; 0x17ca <__stack+0xecb>
    1646:	e1 6f       	ori	r30, 0xF1	; 241
    1648:	62 6f       	ori	r22, 0xF2	; 242
    164a:	d1 0a       	sbc	r13, r17
    164c:	01 2e       	mov	r0, r17
    164e:	cd 00       	.word	0x00cd	; ????
    1650:	d5 6f       	ori	r29, 0xF5	; 245
    1652:	c4 6f       	ori	r28, 0xF4	; 244
    1654:	72 6f       	ori	r23, 0xF2	; 242
    1656:	97 52       	subi	r25, 0x27	; 39
    1658:	9d 5c       	subi	r25, 0xCD	; 205
    165a:	98 2e       	mov	r9, r24
    165c:	06 cd       	rjmp	.-1524   	; 0x106a <__stack+0x76b>
    165e:	23 6f       	ori	r18, 0xF3	; 243
    1660:	90 6f       	ori	r25, 0xF0	; 240
    1662:	99 52       	subi	r25, 0x29	; 41
    1664:	c0 b2       	in	r12, 0x10	; 16
    1666:	04 bd       	out	0x24, r16	; 36
    1668:	54 40       	sbci	r21, 0x04	; 4
    166a:	af b9       	out	0x0f, r26	; 15
    166c:	45 40       	sbci	r20, 0x05	; 5
    166e:	e1 7f       	andi	r30, 0xF1	; 241
    1670:	02 30       	cpi	r16, 0x02	; 2
    1672:	06 2f       	mov	r16, r22
    1674:	c0 b2       	in	r12, 0x10	; 16
    1676:	02 30       	cpi	r16, 0x02	; 2
    1678:	03 2f       	mov	r16, r19
    167a:	9b 5c       	subi	r25, 0xCB	; 203
    167c:	12 30       	cpi	r17, 0x02	; 2
    167e:	94 43       	sbci	r25, 0x34	; 52
    1680:	85 43       	sbci	r24, 0x35	; 53
    1682:	03 bf       	out	0x33, r16	; 51
    1684:	6f bb       	out	0x1f, r22	; 31
    1686:	80 b3       	in	r24, 0x10	; 16
    1688:	20 2f       	mov	r18, r16
    168a:	06 6f       	ori	r16, 0xF6	; 246
    168c:	26 01       	movw	r4, r12
    168e:	16 6f       	ori	r17, 0xF6	; 246
    1690:	6e 03       	fmul	r22, r22
    1692:	45 42       	sbci	r20, 0x25	; 37
    1694:	c0 90 29 2e 	lds	r12, 0x2E29	; 0x802e29 <__bss_end+0x2883>
    1698:	ce 00       	.word	0x00ce	; ????
    169a:	9b 52       	subi	r25, 0x2B	; 43
    169c:	14 2f       	mov	r17, r20
    169e:	9b 5c       	subi	r25, 0xCB	; 203
    16a0:	00 2e       	mov	r0, r16
    16a2:	93 41       	sbci	r25, 0x13	; 19
    16a4:	86 41       	sbci	r24, 0x16	; 22
    16a6:	e3 04       	cpc	r14, r3
    16a8:	ae 07       	cpc	r26, r30
    16aa:	80 ab       	std	Z+48, r24	; 0x30
    16ac:	04 2f       	mov	r16, r20
    16ae:	80 91 0a 2f 	lds	r24, 0x2F0A	; 0x802f0a <__bss_end+0x2964>
    16b2:	86 6f       	ori	r24, 0xF6	; 246
    16b4:	73 0f       	add	r23, r19
    16b6:	07 2f       	mov	r16, r23
    16b8:	83 6f       	ori	r24, 0xF3	; 243
    16ba:	c0 b2       	in	r12, 0x10	; 16
    16bc:	04 2f       	mov	r16, r20
    16be:	54 42       	sbci	r21, 0x24	; 36
    16c0:	45 42       	sbci	r20, 0x25	; 37
    16c2:	12 30       	cpi	r17, 0x02	; 2
    16c4:	04 2c       	mov	r0, r4
    16c6:	11 30       	cpi	r17, 0x01	; 1
    16c8:	02 2c       	mov	r0, r2
    16ca:	11 30       	cpi	r17, 0x01	; 1
    16cc:	11 30       	cpi	r17, 0x01	; 1
    16ce:	02 bc       	out	0x22, r0	; 34
    16d0:	0f b8       	out	0x0f, r0	; 15
    16d2:	d2 7f       	andi	r29, 0xF2	; 242
    16d4:	00 b2       	in	r0, 0x10	; 16
    16d6:	0a 2f       	mov	r16, r26
    16d8:	01 2e       	mov	r0, r17
    16da:	fc 00       	.word	0x00fc	; ????
    16dc:	05 2e       	mov	r0, r21
    16de:	c7 01       	movw	r24, r14
    16e0:	10 1a       	sub	r1, r16
    16e2:	02 2f       	mov	r16, r18
    16e4:	21 2e       	mov	r2, r17
    16e6:	c7 01       	movw	r24, r14
    16e8:	03 2d       	mov	r16, r3
    16ea:	02 2c       	mov	r0, r2
    16ec:	01 30       	cpi	r16, 0x01	; 1
    16ee:	01 30       	cpi	r16, 0x01	; 1
    16f0:	b0 6f       	ori	r27, 0xF0	; 240
    16f2:	98 2e       	mov	r9, r24
    16f4:	95 cf       	rjmp	.-214    	; 0x1620 <__stack+0xd21>
    16f6:	d1 6f       	ori	r29, 0xF1	; 241
    16f8:	a0 6f       	ori	r26, 0xF0	; 240
    16fa:	98 2e       	mov	r9, r24
    16fc:	95 cf       	rjmp	.-214    	; 0x1628 <__stack+0xd29>
    16fe:	e2 6f       	ori	r30, 0xF2	; 242
    1700:	9f 52       	subi	r25, 0x2F	; 47
    1702:	01 2e       	mov	r0, r17
    1704:	ce 00       	.word	0x00ce	; ????
    1706:	82 40       	sbci	r24, 0x02	; 2
    1708:	50 42       	sbci	r21, 0x20	; 32
    170a:	0c 2c       	mov	r0, r12
    170c:	42 42       	sbci	r20, 0x22	; 34
    170e:	11 30       	cpi	r17, 0x01	; 1
    1710:	23 2e       	mov	r2, r19
    1712:	d2 00       	.word	0x00d2	; ????
    1714:	01 30       	cpi	r16, 0x01	; 1
    1716:	b0 6f       	ori	r27, 0xF0	; 240
    1718:	98 2e       	mov	r9, r24
    171a:	95 cf       	rjmp	.-214    	; 0x1646 <__stack+0xd47>
    171c:	a0 6f       	ori	r26, 0xF0	; 240
    171e:	01 30       	cpi	r16, 0x01	; 1
    1720:	98 2e       	mov	r9, r24
    1722:	95 cf       	rjmp	.-214    	; 0x164e <__stack+0xd4f>
    1724:	00 2e       	mov	r0, r16
    1726:	fb 6f       	ori	r31, 0xFB	; 251
    1728:	00 5f       	subi	r16, 0xF0	; 240
    172a:	b8 2e       	mov	r11, r24
    172c:	83 86       	std	Z+11, r8	; 0x0b
    172e:	01 30       	cpi	r16, 0x01	; 1
    1730:	00 30       	cpi	r16, 0x00	; 0
    1732:	94 40       	sbci	r25, 0x04	; 4
    1734:	24 18       	sub	r2, r4
    1736:	06 00       	.word	0x0006	; ????
    1738:	53 0e       	add	r5, r19
    173a:	4f 02       	muls	r20, r31
    173c:	f9 2f       	mov	r31, r25
    173e:	b8 2e       	mov	r11, r24
    1740:	a9 52       	subi	r26, 0x29	; 41
    1742:	00 2e       	mov	r0, r16
    1744:	60 40       	sbci	r22, 0x00	; 0
    1746:	41 40       	sbci	r20, 0x01	; 1
    1748:	0d bc       	out	0x2d, r0	; 45
    174a:	98 bc       	out	0x28, r9	; 40
    174c:	c0 2e       	mov	r12, r16
    174e:	01 0a       	sbc	r0, r17
    1750:	0f b8       	out	0x0f, r0	; 15
    1752:	ab 52       	subi	r26, 0x2B	; 43
    1754:	53 3c       	cpi	r21, 0xC3	; 195
    1756:	52 40       	sbci	r21, 0x02	; 2
    1758:	40 40       	sbci	r20, 0x00	; 0
    175a:	4b 00       	.word	0x004b	; ????
    175c:	82 16       	cp	r8, r18
    175e:	26 b9       	out	0x06, r18	; 6
    1760:	01 b8       	out	0x01, r0	; 1
    1762:	41 40       	sbci	r20, 0x01	; 1
    1764:	10 08       	sbc	r1, r0
    1766:	97 b8       	out	0x07, r9	; 7
    1768:	01 08       	sbc	r0, r1
    176a:	c0 2e       	mov	r12, r16
    176c:	11 30       	cpi	r17, 0x01	; 1
    176e:	01 08       	sbc	r0, r1
    1770:	43 86       	std	Z+11, r4	; 0x0b
    1772:	25 40       	sbci	r18, 0x05	; 5
    1774:	04 40       	sbci	r16, 0x04	; 4
    1776:	d8 be       	out	0x38, r13	; 56
    1778:	2c 0b       	sbc	r18, r28
    177a:	22 11       	cpse	r18, r2
    177c:	54 42       	sbci	r21, 0x24	; 36
    177e:	03 80       	ldd	r0, Z+3	; 0x03
    1780:	4b 0e       	add	r4, r27
    1782:	f6 2f       	mov	r31, r22
    1784:	b8 2e       	mov	r11, r24
    1786:	9f 50       	subi	r25, 0x0F	; 15
    1788:	10 50       	subi	r17, 0x00	; 0
    178a:	ad 52       	subi	r26, 0x2D	; 45
    178c:	05 2e       	mov	r0, r21
    178e:	d3 00       	.word	0x00d3	; ????
    1790:	fb 7f       	andi	r31, 0xFB	; 251
    1792:	00 2e       	mov	r0, r16
    1794:	13 40       	sbci	r17, 0x03	; 3
    1796:	93 42       	sbci	r25, 0x23	; 35
    1798:	41 0e       	add	r4, r17
    179a:	fb 2f       	mov	r31, r27
    179c:	98 2e       	mov	r9, r24
    179e:	a5 b7       	in	r26, 0x35	; 53
    17a0:	98 2e       	mov	r9, r24
    17a2:	87 cf       	rjmp	.-242    	; 0x16b2 <__stack+0xdb3>
    17a4:	01 2e       	mov	r0, r17
    17a6:	d9 00       	.word	0x00d9	; ????
    17a8:	00 b2       	in	r0, 0x10	; 16
    17aa:	fb 6f       	ori	r31, 0xFB	; 251
    17ac:	0b 2f       	mov	r16, r27
    17ae:	01 2e       	mov	r0, r17
    17b0:	69 f7       	brne	.-38     	; 0x178c <__stack+0xe8d>
    17b2:	b1 3f       	cpi	r27, 0xF1	; 241
    17b4:	01 08       	sbc	r0, r1
    17b6:	01 30       	cpi	r16, 0x01	; 1
    17b8:	f0 5f       	subi	r31, 0xF0	; 240
    17ba:	23 2e       	mov	r2, r19
    17bc:	d9 00       	.word	0x00d9	; ????
    17be:	21 2e       	mov	r2, r17
    17c0:	69 f7       	brne	.-38     	; 0x179c <__stack+0xe9d>
    17c2:	80 2e       	mov	r8, r16
    17c4:	7a b7       	in	r23, 0x3a	; 58
    17c6:	f0 5f       	subi	r31, 0xF0	; 240
    17c8:	b8 2e       	mov	r11, r24
    17ca:	01 2e       	mov	r0, r17
    17cc:	c0 f8       	bld	r12, 0
    17ce:	03 2e       	mov	r0, r19
    17d0:	fc f5       	brge	.+126    	; 0x1850 <__stack+0xf51>
    17d2:	15 54       	subi	r17, 0x45	; 69
    17d4:	af 56       	subi	r26, 0x6F	; 111
    17d6:	82 08       	sbc	r8, r2
    17d8:	0b 2e       	mov	r0, r27
    17da:	69 f7       	brne	.-38     	; 0x17b6 <__stack+0xeb7>
    17dc:	cb 0a       	sbc	r12, r27
    17de:	b1 58       	subi	r27, 0x81	; 129
    17e0:	80 90 dd be 	lds	r8, 0xBEDD	; 0x80bedd <__bss_end+0xb937>
    17e4:	4c 08       	sbc	r4, r12
    17e6:	5f b9       	out	0x0f, r21	; 15
    17e8:	59 22       	and	r5, r25
    17ea:	80 90 07 2f 	lds	r8, 0x2F07	; 0x802f07 <__bss_end+0x2961>
    17ee:	03 34       	cpi	r16, 0x43	; 67
    17f0:	c3 08       	sbc	r12, r3
    17f2:	f2 3a       	cpi	r31, 0xA2	; 162
    17f4:	0a 08       	sbc	r0, r10
    17f6:	02 35       	cpi	r16, 0x52	; 82
    17f8:	c0 90 4a 0a 	lds	r12, 0x0A4A	; 0x800a4a <__bss_end+0x4a4>
    17fc:	48 22       	and	r4, r24
    17fe:	c0 2e       	mov	r12, r16
    1800:	23 2e       	mov	r2, r19
    1802:	fc f5       	brge	.+126    	; 0x1882 <__stack+0xf83>
    1804:	10 50       	subi	r17, 0x00	; 0
    1806:	fb 7f       	andi	r31, 0xFB	; 251
    1808:	98 2e       	mov	r9, r24
    180a:	56 c7       	rjmp	.+3756   	; 0x26b8 <BMI270_init+0xa4>
    180c:	98 2e       	mov	r9, r24
    180e:	49 c3       	rjmp	.+1682   	; 0x1ea2 <__stack+0x15a3>
    1810:	10 30       	cpi	r17, 0x00	; 0
    1812:	fb 6f       	ori	r31, 0xFB	; 251
    1814:	f0 5f       	subi	r31, 0xF0	; 240
    1816:	21 2e       	mov	r2, r17
    1818:	cc 00       	.word	0x00cc	; ????
    181a:	21 2e       	mov	r2, r17
    181c:	ca 00       	.word	0x00ca	; ????
    181e:	b8 2e       	mov	r11, r24
    1820:	03 2e       	mov	r0, r19
    1822:	d3 00       	.word	0x00d3	; ????
    1824:	16 b8       	out	0x06, r1	; 6
    1826:	02 34       	cpi	r16, 0x42	; 66
    1828:	4a 0c       	add	r4, r10
    182a:	21 2e       	mov	r2, r17
    182c:	2d f5       	brhc	.+74     	; 0x1878 <__stack+0xf79>
    182e:	c0 2e       	mov	r12, r16
    1830:	23 2e       	mov	r2, r19
    1832:	d3 00       	.word	0x00d3	; ????
    1834:	03 bc       	out	0x23, r0	; 35
    1836:	21 2e       	mov	r2, r17
    1838:	d5 00       	.word	0x00d5	; ????
    183a:	03 2e       	mov	r0, r19
    183c:	d5 00       	.word	0x00d5	; ????
    183e:	40 b2       	in	r4, 0x10	; 16
    1840:	10 30       	cpi	r17, 0x00	; 0
    1842:	21 2e       	mov	r2, r17
    1844:	77 00       	.word	0x0077	; ????
    1846:	01 30       	cpi	r16, 0x01	; 1
    1848:	05 2f       	mov	r16, r21
    184a:	05 2e       	mov	r0, r21
    184c:	d8 00       	.word	0x00d8	; ????
    184e:	80 90 01 2f 	lds	r8, 0x2F01	; 0x802f01 <__bss_end+0x295b>
    1852:	23 2e       	mov	r2, r19
    1854:	6f f5       	brid	.+90     	; 0x18b0 <__stack+0xfb1>
    1856:	c0 2e       	mov	r12, r16
    1858:	21 2e       	mov	r2, r17
    185a:	d9 00       	.word	0x00d9	; ????
    185c:	11 30       	cpi	r17, 0x01	; 1
    185e:	81 08       	sbc	r8, r1
    1860:	01 2e       	mov	r0, r17
    1862:	6a f7       	brpl	.-38     	; 0x183e <__stack+0xf3f>
    1864:	71 3f       	cpi	r23, 0xF1	; 241
    1866:	23 bd       	out	0x23, r18	; 35
    1868:	01 08       	sbc	r0, r1
    186a:	02 0a       	sbc	r0, r18
    186c:	c0 2e       	mov	r12, r16
    186e:	21 2e       	mov	r2, r17
    1870:	6a f7       	brpl	.-38     	; 0x184c <__stack+0xf4d>
    1872:	30 25       	eor	r19, r0
    1874:	00 30       	cpi	r16, 0x00	; 0
    1876:	21 2e       	mov	r2, r17
    1878:	5a f5       	brpl	.+86     	; 0x18d0 <__stack+0xfd1>
    187a:	10 50       	subi	r17, 0x00	; 0
    187c:	21 2e       	mov	r2, r17
    187e:	7b 00       	.word	0x007b	; ????
    1880:	21 2e       	mov	r2, r17
    1882:	7c 00       	.word	0x007c	; ????
    1884:	fb 7f       	andi	r31, 0xFB	; 251
    1886:	98 2e       	mov	r9, r24
    1888:	c3 b7       	in	r28, 0x33	; 51
    188a:	40 30       	cpi	r20, 0x00	; 0
    188c:	21 2e       	mov	r2, r17
    188e:	d4 00       	.word	0x00d4	; ????
    1890:	fb 6f       	ori	r31, 0xFB	; 251
    1892:	f0 5f       	subi	r31, 0xF0	; 240
    1894:	03 25       	eor	r16, r3
    1896:	80 2e       	mov	r8, r16
    1898:	af b7       	in	r26, 0x3f	; 63
    189a:	80 2e       	mov	r8, r16
    189c:	00 c1       	rjmp	.+512    	; 0x1a9e <__stack+0x119f>
    189e:	80 2e       	mov	r8, r16
    18a0:	00 c1       	rjmp	.+512    	; 0x1aa2 <__stack+0x11a3>
    18a2:	80 2e       	mov	r8, r16
    18a4:	00 c1       	rjmp	.+512    	; 0x1aa6 <__stack+0x11a7>
    18a6:	80 2e       	mov	r8, r16
    18a8:	00 c1       	rjmp	.+512    	; 0x1aaa <__stack+0x11ab>
    18aa:	80 2e       	mov	r8, r16
    18ac:	00 c1       	rjmp	.+512    	; 0x1aae <__stack+0x11af>
    18ae:	80 2e       	mov	r8, r16
    18b0:	00 c1       	rjmp	.+512    	; 0x1ab2 <__stack+0x11b3>
    18b2:	80 2e       	mov	r8, r16
    18b4:	00 c1       	rjmp	.+512    	; 0x1ab6 <__stack+0x11b7>
    18b6:	80 2e       	mov	r8, r16
    18b8:	00 c1       	rjmp	.+512    	; 0x1aba <__stack+0x11bb>
    18ba:	80 2e       	mov	r8, r16
    18bc:	00 c1       	rjmp	.+512    	; 0x1abe <__stack+0x11bf>
    18be:	80 2e       	mov	r8, r16
    18c0:	00 c1       	rjmp	.+512    	; 0x1ac2 <__stack+0x11c3>
    18c2:	80 2e       	mov	r8, r16
    18c4:	00 c1       	rjmp	.+512    	; 0x1ac6 <__stack+0x11c7>
    18c6:	80 2e       	mov	r8, r16
    18c8:	00 c1       	rjmp	.+512    	; 0x1aca <__stack+0x11cb>
    18ca:	80 2e       	mov	r8, r16
    18cc:	00 c1       	rjmp	.+512    	; 0x1ace <__stack+0x11cf>
    18ce:	80 2e       	mov	r8, r16
    18d0:	00 c1       	rjmp	.+512    	; 0x1ad2 <__stack+0x11d3>
    18d2:	80 2e       	mov	r8, r16
    18d4:	00 c1       	rjmp	.+512    	; 0x1ad6 <__stack+0x11d7>
    18d6:	01 2e       	mov	r0, r17
    18d8:	5d f7       	brhc	.-42     	; 0x18b0 <__stack+0xfb1>
    18da:	08 bc       	out	0x28, r0	; 40
    18dc:	80 ac       	ldd	r8, Z+56	; 0x38
    18de:	0e bb       	out	0x1e, r16	; 30
    18e0:	02 2f       	mov	r16, r18
    18e2:	00 30       	cpi	r16, 0x00	; 0
    18e4:	41 04       	cpc	r4, r1
    18e6:	82 06       	cpc	r8, r18
    18e8:	c0 a4       	ldd	r12, Z+40	; 0x28
    18ea:	00 30       	cpi	r16, 0x00	; 0
    18ec:	11 2f       	mov	r17, r17
    18ee:	40 a9       	ldd	r20, Z+48	; 0x30
    18f0:	03 2f       	mov	r16, r19
    18f2:	40 91 0d 2f 	lds	r20, 0x2F0D	; 0x802f0d <__bss_end+0x2967>
    18f6:	00 a7       	std	Z+40, r16	; 0x28
    18f8:	0b 2f       	mov	r16, r27
    18fa:	80 b3       	in	r24, 0x10	; 16
    18fc:	b3 58       	subi	r27, 0x83	; 131
    18fe:	02 2f       	mov	r16, r18
    1900:	90 a1       	ldd	r25, Z+32	; 0x20
    1902:	26 13       	cpse	r18, r22
    1904:	20 23       	and	r18, r16
    1906:	80 90 10 30 	lds	r8, 0x3010	; 0x803010 <__bss_end+0x2a6a>
    190a:	01 2f       	mov	r16, r17
    190c:	cc 0e       	add	r12, r28
    190e:	00 2f       	mov	r16, r16
    1910:	00 30       	cpi	r16, 0x00	; 0
    1912:	b8 2e       	mov	r11, r24
    1914:	b5 50       	subi	r27, 0x05	; 5
    1916:	18 08       	sbc	r1, r8
    1918:	08 bc       	out	0x28, r0	; 40
    191a:	88 b6       	in	r8, 0x38	; 56
    191c:	0d 17       	cp	r16, r29
    191e:	c6 bd       	out	0x26, r28	; 38
    1920:	56 bc       	out	0x26, r5	; 38
    1922:	b7 58       	subi	r27, 0x87	; 135
    1924:	da ba       	out	0x1a, r13	; 26
    1926:	04 01       	movw	r0, r8
    1928:	1d 0a       	sbc	r1, r29
    192a:	10 50       	subi	r17, 0x00	; 0
    192c:	05 30       	cpi	r16, 0x05	; 5
    192e:	32 25       	eor	r19, r2
    1930:	45 03       	mulsu	r20, r21
    1932:	fb 7f       	andi	r31, 0xFB	; 251
    1934:	f6 30       	cpi	r31, 0x06	; 6
    1936:	21 25       	eor	r18, r1
    1938:	98 2e       	mov	r9, r24
    193a:	37 ca       	rjmp	.-2962   	; 0xdaa <__stack+0x4ab>
    193c:	16 b5       	in	r17, 0x26	; 38
    193e:	9a bc       	out	0x2a, r9	; 42
    1940:	06 b8       	out	0x06, r0	; 6
    1942:	80 a8       	ldd	r8, Z+48	; 0x30
    1944:	41 0a       	sbc	r4, r17
    1946:	0e 2f       	mov	r16, r30
    1948:	80 90 02 2f 	lds	r8, 0x2F02	; 0x802f02 <__bss_end+0x295c>
    194c:	2d 50       	subi	r18, 0x0D	; 13
    194e:	48 0f       	add	r20, r24
    1950:	09 2f       	mov	r16, r25
    1952:	bf a0       	ldd	r11, Y+39	; 0x27
    1954:	04 2f       	mov	r16, r20
    1956:	bf 90       	pop	r11
    1958:	06 2f       	mov	r16, r22
    195a:	b7 54       	subi	r27, 0x47	; 71
    195c:	ca 0f       	add	r28, r26
    195e:	03 2f       	mov	r16, r19
    1960:	00 2e       	mov	r0, r16
    1962:	02 2c       	mov	r0, r2
    1964:	b7 52       	subi	r27, 0x27	; 39
    1966:	2d 52       	subi	r18, 0x2D	; 45
    1968:	f2 33       	cpi	r31, 0x32	; 50
    196a:	98 2e       	mov	r9, r24
    196c:	d9 c0       	rjmp	.+434    	; 0x1b20 <__stack+0x1221>
    196e:	fb 6f       	ori	r31, 0xFB	; 251
    1970:	f1 37       	cpi	r31, 0x71	; 113
    1972:	c0 2e       	mov	r12, r16
    1974:	01 08       	sbc	r0, r1
    1976:	f0 5f       	subi	r31, 0xF0	; 240
    1978:	bf 56       	subi	r27, 0x6F	; 111
    197a:	b9 54       	subi	r27, 0x49	; 73
    197c:	d0 40       	sbci	r29, 0x00	; 0
    197e:	c4 40       	sbci	r28, 0x04	; 4
    1980:	0b 2e       	mov	r0, r27
    1982:	fd f3       	brhs	.-2      	; 0x1982 <__stack+0x1083>
    1984:	bf 52       	subi	r27, 0x2F	; 47
    1986:	90 42       	sbci	r25, 0x20	; 32
    1988:	94 42       	sbci	r25, 0x24	; 36
    198a:	95 42       	sbci	r25, 0x25	; 37
    198c:	05 30       	cpi	r16, 0x05	; 5
    198e:	c1 50       	subi	r28, 0x01	; 1
    1990:	0f 88       	ldd	r0, Y+23	; 0x17
    1992:	06 40       	sbci	r16, 0x06	; 6
    1994:	04 41       	sbci	r16, 0x14	; 20
    1996:	96 42       	sbci	r25, 0x26	; 38
    1998:	c5 42       	sbci	r28, 0x25	; 37
    199a:	48 be       	out	0x38, r4	; 56
    199c:	73 30       	cpi	r23, 0x03	; 3
    199e:	0d 2e       	mov	r0, r29
    19a0:	d8 00       	.word	0x00d8	; ????
    19a2:	4f ba       	out	0x1f, r4	; 31
    19a4:	84 42       	sbci	r24, 0x24	; 36
    19a6:	03 42       	sbci	r16, 0x23	; 35
    19a8:	81 b3       	in	r24, 0x11	; 17
    19aa:	02 2f       	mov	r16, r18
    19ac:	2b 2e       	mov	r2, r27
    19ae:	6f f5       	brid	.+90     	; 0x1a0a <__stack+0x110b>
    19b0:	06 2d       	mov	r16, r6
    19b2:	05 2e       	mov	r0, r21
    19b4:	77 f7       	brid	.-36     	; 0x1992 <__stack+0x1093>
    19b6:	bd 56       	subi	r27, 0x6D	; 109
    19b8:	93 08       	sbc	r9, r3
    19ba:	25 2e       	mov	r2, r21
    19bc:	77 f7       	brid	.-36     	; 0x199a <__stack+0x109b>
    19be:	bb 54       	subi	r27, 0x4B	; 75
    19c0:	25 2e       	mov	r2, r21
    19c2:	c2 f5       	brpl	.+112    	; 0x1a34 <__stack+0x1135>
    19c4:	07 2e       	mov	r0, r23
    19c6:	fd f3       	brhs	.-2      	; 0x19c6 <__stack+0x10c7>
    19c8:	42 30       	cpi	r20, 0x02	; 2
    19ca:	b4 33       	cpi	r27, 0x34	; 52
    19cc:	da 0a       	sbc	r13, r26
    19ce:	4c 00       	.word	0x004c	; ????
    19d0:	27 2e       	mov	r2, r23
    19d2:	fd f3       	brhs	.-2      	; 0x19d2 <__stack+0x10d3>
    19d4:	43 40       	sbci	r20, 0x03	; 3
    19d6:	d4 3f       	cpi	r29, 0xF4	; 244
    19d8:	dc 08       	sbc	r13, r12
    19da:	43 42       	sbci	r20, 0x23	; 35
    19dc:	00 2e       	mov	r0, r16
    19de:	00 2e       	mov	r0, r16
    19e0:	43 40       	sbci	r20, 0x03	; 3
    19e2:	24 30       	cpi	r18, 0x04	; 4
    19e4:	dc 0a       	sbc	r13, r28
    19e6:	43 42       	sbci	r20, 0x23	; 35
    19e8:	04 80       	ldd	r0, Z+4	; 0x04
    19ea:	03 2e       	mov	r0, r19
    19ec:	fd f3       	brhs	.-2      	; 0x19ec <__stack+0x10ed>
    19ee:	4a 0a       	sbc	r4, r26
    19f0:	23 2e       	mov	r2, r19
    19f2:	fd f3       	brhs	.-2      	; 0x19f2 <__stack+0x10f3>
    19f4:	61 34       	cpi	r22, 0x41	; 65
    19f6:	c0 2e       	mov	r12, r16
    19f8:	01 42       	sbci	r16, 0x21	; 33
    19fa:	00 2e       	mov	r0, r16
    19fc:	60 50       	subi	r22, 0x00	; 0
    19fe:	1a 25       	eor	r17, r10
    1a00:	7a 86       	std	Y+10, r7	; 0x0a
    1a02:	e0 7f       	andi	r30, 0xF0	; 240
    1a04:	f3 7f       	andi	r31, 0xF3	; 243
    1a06:	03 25       	eor	r16, r3
    1a08:	c3 52       	subi	r28, 0x23	; 35
    1a0a:	41 84       	ldd	r4, Z+9	; 0x09
    1a0c:	db 7f       	andi	r29, 0xFB	; 251
    1a0e:	33 30       	cpi	r19, 0x03	; 3
    1a10:	98 2e       	mov	r9, r24
    1a12:	16 c2       	rjmp	.+1068   	; 0x1e40 <__stack+0x1541>
    1a14:	1a 25       	eor	r17, r10
    1a16:	7d 82       	std	Y+5, r7	; 0x05
    1a18:	f0 6f       	ori	r31, 0xF0	; 240
    1a1a:	e2 6f       	ori	r30, 0xF2	; 242
    1a1c:	32 25       	eor	r19, r2
    1a1e:	16 40       	sbci	r17, 0x06	; 6
    1a20:	94 40       	sbci	r25, 0x04	; 4
    1a22:	26 01       	movw	r4, r12
    1a24:	85 40       	sbci	r24, 0x05	; 5
    1a26:	8e 17       	cp	r24, r30
    1a28:	c4 42       	sbci	r28, 0x24	; 36
    1a2a:	6e 03       	fmul	r22, r22
    1a2c:	95 42       	sbci	r25, 0x25	; 37
    1a2e:	41 0e       	add	r4, r17
    1a30:	f4 2f       	mov	r31, r20
    1a32:	db 6f       	ori	r29, 0xFB	; 251
    1a34:	a0 5f       	subi	r26, 0xF0	; 240
    1a36:	b8 2e       	mov	r11, r24
    1a38:	b0 51       	subi	r27, 0x10	; 16
    1a3a:	fb 7f       	andi	r31, 0xFB	; 251
    1a3c:	98 2e       	mov	r9, r24
    1a3e:	e8 0d       	add	r30, r8
    1a40:	5a 25       	eor	r21, r10
    1a42:	98 2e       	mov	r9, r24
    1a44:	0f 0e       	add	r0, r31
    1a46:	cb 58       	subi	r28, 0x8B	; 139
    1a48:	32 87       	std	Z+10, r19	; 0x0a
    1a4a:	c4 7f       	andi	r28, 0xF4	; 244
    1a4c:	65 89       	ldd	r22, Z+21	; 0x15
    1a4e:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1a50:	c5 5a       	subi	r28, 0xA5	; 165
    1a52:	65 7f       	andi	r22, 0xF5	; 245
    1a54:	e1 7f       	andi	r30, 0xF1	; 241
    1a56:	83 7f       	andi	r24, 0xF3	; 243
    1a58:	a6 7f       	andi	r26, 0xF6	; 246
    1a5a:	74 7f       	andi	r23, 0xF4	; 244
    1a5c:	d0 7f       	andi	r29, 0xF0	; 240
    1a5e:	b6 7f       	andi	r27, 0xF6	; 246
    1a60:	94 7f       	andi	r25, 0xF4	; 244
    1a62:	17 30       	cpi	r17, 0x07	; 7
    1a64:	c7 52       	subi	r28, 0x27	; 39
    1a66:	c9 54       	subi	r28, 0x49	; 73
    1a68:	51 7f       	andi	r21, 0xF1	; 241
    1a6a:	00 2e       	mov	r0, r16
    1a6c:	85 6f       	ori	r24, 0xF5	; 245
    1a6e:	42 7f       	andi	r20, 0xF2	; 242
    1a70:	00 2e       	mov	r0, r16
    1a72:	51 41       	sbci	r21, 0x11	; 17
    1a74:	45 81       	ldd	r20, Z+5	; 0x05
    1a76:	42 41       	sbci	r20, 0x12	; 18
    1a78:	13 40       	sbci	r17, 0x03	; 3
    1a7a:	3b 8a       	std	Y+19, r3	; 0x13
    1a7c:	00 40       	sbci	r16, 0x00	; 0
    1a7e:	4b 04       	cpc	r4, r11
    1a80:	d0 06       	cpc	r13, r16
    1a82:	c0 ac       	ldd	r12, Z+56	; 0x38
    1a84:	85 7f       	andi	r24, 0xF5	; 245
    1a86:	02 2f       	mov	r16, r18
    1a88:	02 30       	cpi	r16, 0x02	; 2
    1a8a:	51 04       	cpc	r5, r1
    1a8c:	d3 06       	cpc	r13, r19
    1a8e:	41 84       	ldd	r4, Z+9	; 0x09
    1a90:	05 30       	cpi	r16, 0x05	; 5
    1a92:	5d 02       	muls	r21, r29
    1a94:	c9 16       	cp	r12, r25
    1a96:	df 08       	sbc	r13, r15
    1a98:	d3 00       	.word	0x00d3	; ????
    1a9a:	8d 02       	muls	r24, r29
    1a9c:	af bc       	out	0x2f, r10	; 47
    1a9e:	b1 b9       	out	0x01, r27	; 1
    1aa0:	59 0a       	sbc	r5, r25
    1aa2:	65 6f       	ori	r22, 0xF5	; 245
    1aa4:	11 43       	sbci	r17, 0x31	; 49
    1aa6:	a1 b4       	in	r10, 0x21	; 33
    1aa8:	52 41       	sbci	r21, 0x12	; 18
    1aaa:	53 41       	sbci	r21, 0x13	; 19
    1aac:	01 43       	sbci	r16, 0x31	; 49
    1aae:	34 7f       	andi	r19, 0xF4	; 244
    1ab0:	65 7f       	andi	r22, 0xF5	; 245
    1ab2:	26 31       	cpi	r18, 0x16	; 22
    1ab4:	e5 6f       	ori	r30, 0xF5	; 245
    1ab6:	d4 6f       	ori	r29, 0xF4	; 244
    1ab8:	98 2e       	mov	r9, r24
    1aba:	37 ca       	rjmp	.-2962   	; 0xf2a <__stack+0x62b>
    1abc:	32 6f       	ori	r19, 0xF2	; 242
    1abe:	75 6f       	ori	r23, 0xF5	; 245
    1ac0:	83 40       	sbci	r24, 0x03	; 3
    1ac2:	42 41       	sbci	r20, 0x12	; 18
    1ac4:	23 7f       	andi	r18, 0xF3	; 243
    1ac6:	12 7f       	andi	r17, 0xF2	; 242
    1ac8:	f6 30       	cpi	r31, 0x06	; 6
    1aca:	40 25       	eor	r20, r0
    1acc:	51 25       	eor	r21, r1
    1ace:	98 2e       	mov	r9, r24
    1ad0:	37 ca       	rjmp	.-2962   	; 0xf40 <__stack+0x641>
    1ad2:	14 6f       	ori	r17, 0xF4	; 244
    1ad4:	20 05       	cpc	r18, r0
    1ad6:	70 6f       	ori	r23, 0xF0	; 240
    1ad8:	25 6f       	ori	r18, 0xF5	; 245
    1ada:	69 07       	cpc	r22, r25
    1adc:	a2 6f       	ori	r26, 0xF2	; 242
    1ade:	31 6f       	ori	r19, 0xF1	; 241
    1ae0:	0b 30       	cpi	r16, 0x0B	; 11
    1ae2:	04 42       	sbci	r16, 0x24	; 36
    1ae4:	9b 42       	sbci	r25, 0x2B	; 43
    1ae6:	8b 42       	sbci	r24, 0x2B	; 43
    1ae8:	55 42       	sbci	r21, 0x25	; 37
    1aea:	32 7f       	andi	r19, 0xF2	; 242
    1aec:	40 a9       	ldd	r20, Z+48	; 0x30
    1aee:	c3 6f       	ori	r28, 0xF3	; 243
    1af0:	71 7f       	andi	r23, 0xF1	; 241
    1af2:	02 30       	cpi	r16, 0x02	; 2
    1af4:	d0 40       	sbci	r29, 0x00	; 0
    1af6:	c3 7f       	andi	r28, 0xF3	; 243
    1af8:	03 2f       	mov	r16, r19
    1afa:	40 91 15 2f 	lds	r20, 0x2F15	; 0x802f15 <__bss_end+0x296f>
    1afe:	00 a7       	std	Z+40, r16	; 0x28
    1b00:	13 2f       	mov	r17, r19
    1b02:	00 a4       	ldd	r0, Z+40	; 0x28
    1b04:	11 2f       	mov	r17, r17
    1b06:	84 bd       	out	0x24, r24	; 36
    1b08:	98 2e       	mov	r9, r24
    1b0a:	79 ca       	rjmp	.-2830   	; 0xffe <__stack+0x6ff>
    1b0c:	55 6f       	ori	r21, 0xF5	; 245
    1b0e:	b7 54       	subi	r27, 0x47	; 71
    1b10:	54 41       	sbci	r21, 0x14	; 20
    1b12:	82 00       	.word	0x0082	; ????
    1b14:	f3 3f       	cpi	r31, 0xF3	; 243
    1b16:	45 41       	sbci	r20, 0x15	; 21
    1b18:	cb 02       	muls	r28, r27
    1b1a:	f6 30       	cpi	r31, 0x06	; 6
    1b1c:	98 2e       	mov	r9, r24
    1b1e:	37 ca       	rjmp	.-2962   	; 0xf8e <__stack+0x68f>
    1b20:	35 6f       	ori	r19, 0xF5	; 245
    1b22:	a4 6f       	ori	r26, 0xF4	; 244
    1b24:	41 43       	sbci	r20, 0x31	; 49
    1b26:	03 2c       	mov	r0, r3
    1b28:	00 43       	sbci	r16, 0x30	; 48
    1b2a:	a4 6f       	ori	r26, 0xF4	; 244
    1b2c:	35 6f       	ori	r19, 0xF5	; 245
    1b2e:	17 30       	cpi	r17, 0x07	; 7
    1b30:	42 6f       	ori	r20, 0xF2	; 242
    1b32:	51 6f       	ori	r21, 0xF1	; 241
    1b34:	93 40       	sbci	r25, 0x03	; 3
    1b36:	42 82       	std	Z+2, r4	; 0x02
    1b38:	00 41       	sbci	r16, 0x10	; 16
    1b3a:	c3 00       	.word	0x00c3	; ????
    1b3c:	03 43       	sbci	r16, 0x33	; 51
    1b3e:	51 7f       	andi	r21, 0xF1	; 241
    1b40:	00 2e       	mov	r0, r16
    1b42:	94 40       	sbci	r25, 0x04	; 4
    1b44:	41 41       	sbci	r20, 0x11	; 17
    1b46:	4c 02       	muls	r20, r28
    1b48:	c4 6f       	ori	r28, 0xF4	; 244
    1b4a:	d1 56       	subi	r29, 0x61	; 97
    1b4c:	63 0e       	add	r6, r19
    1b4e:	74 6f       	ori	r23, 0xF4	; 244
    1b50:	51 43       	sbci	r21, 0x31	; 49
    1b52:	a5 7f       	andi	r26, 0xF5	; 245
    1b54:	8a 2f       	mov	r24, r26
    1b56:	09 2e       	mov	r0, r25
    1b58:	d8 00       	.word	0x00d8	; ????
    1b5a:	01 b3       	in	r16, 0x11	; 17
    1b5c:	21 2f       	mov	r18, r17
    1b5e:	cb 58       	subi	r28, 0x8B	; 139
    1b60:	90 6f       	ori	r25, 0xF0	; 240
    1b62:	13 41       	sbci	r17, 0x13	; 19
    1b64:	b6 6f       	ori	r27, 0xF6	; 246
    1b66:	e4 7f       	andi	r30, 0xF4	; 244
    1b68:	00 2e       	mov	r0, r16
    1b6a:	91 41       	sbci	r25, 0x11	; 17
    1b6c:	14 40       	sbci	r17, 0x04	; 4
    1b6e:	92 41       	sbci	r25, 0x12	; 18
    1b70:	15 40       	sbci	r17, 0x05	; 5
    1b72:	17 2e       	mov	r1, r23
    1b74:	6f f5       	brid	.+90     	; 0x1bd0 <__stack+0x12d1>
    1b76:	b6 7f       	andi	r27, 0xF6	; 246
    1b78:	d0 7f       	andi	r29, 0xF0	; 240
    1b7a:	cb 7f       	andi	r28, 0xFB	; 251
    1b7c:	98 2e       	mov	r9, r24
    1b7e:	00 0c       	add	r0, r0
    1b80:	07 15       	cp	r16, r7
    1b82:	c2 6f       	ori	r28, 0xF2	; 242
    1b84:	14 0b       	sbc	r17, r20
    1b86:	29 2e       	mov	r2, r25
    1b88:	6f f5       	brid	.+90     	; 0x1be4 <__stack+0x12e5>
    1b8a:	c3 a3       	std	Z+35, r28	; 0x23
    1b8c:	c1 8f       	std	Z+25, r28	; 0x19
    1b8e:	e4 6f       	ori	r30, 0xF4	; 244
    1b90:	d0 6f       	ori	r29, 0xF0	; 240
    1b92:	e6 2f       	mov	r30, r22
    1b94:	14 30       	cpi	r17, 0x04	; 4
    1b96:	05 2e       	mov	r0, r21
    1b98:	6f f5       	brid	.+90     	; 0x1bf4 <__stack+0x12f5>
    1b9a:	14 0b       	sbc	r17, r20
    1b9c:	29 2e       	mov	r2, r25
    1b9e:	6f f5       	brid	.+90     	; 0x1bfa <__stack+0x12fb>
    1ba0:	18 2d       	mov	r17, r8
    1ba2:	cd 56       	subi	r28, 0x6D	; 109
    1ba4:	04 32       	cpi	r16, 0x24	; 36
    1ba6:	b5 6f       	ori	r27, 0xF5	; 245
    1ba8:	1c 01       	movw	r2, r24
    1baa:	51 41       	sbci	r21, 0x11	; 17
    1bac:	52 41       	sbci	r21, 0x12	; 18
    1bae:	c3 40       	sbci	r28, 0x03	; 3
    1bb0:	b5 7f       	andi	r27, 0xF5	; 245
    1bb2:	e4 7f       	andi	r30, 0xF4	; 244
    1bb4:	98 2e       	mov	r9, r24
    1bb6:	1f 0c       	add	r1, r15
    1bb8:	e4 6f       	ori	r30, 0xF4	; 244
    1bba:	21 87       	std	Z+9, r18	; 0x09
    1bbc:	00 43       	sbci	r16, 0x30	; 48
    1bbe:	04 32       	cpi	r16, 0x24	; 36
    1bc0:	cf 54       	subi	r28, 0x4F	; 79
    1bc2:	5a 0e       	add	r5, r26
    1bc4:	ef 2f       	mov	r30, r31
    1bc6:	15 54       	subi	r17, 0x45	; 69
    1bc8:	09 2e       	mov	r0, r25
    1bca:	77 f7       	brid	.-36     	; 0x1ba8 <__stack+0x12a9>
    1bcc:	22 0b       	sbc	r18, r18
    1bce:	29 2e       	mov	r2, r25
    1bd0:	77 f7       	brid	.-36     	; 0x1bae <__stack+0x12af>
    1bd2:	fb 6f       	ori	r31, 0xFB	; 251
    1bd4:	50 5e       	subi	r21, 0xE0	; 224
    1bd6:	b8 2e       	mov	r11, r24
    1bd8:	10 50       	subi	r17, 0x00	; 0
    1bda:	01 2e       	mov	r0, r17
    1bdc:	d4 00       	.word	0x00d4	; ????
    1bde:	00 b2       	in	r0, 0x10	; 16
    1be0:	fb 7f       	andi	r31, 0xFB	; 251
    1be2:	51 2f       	mov	r21, r17
    1be4:	01 b2       	in	r0, 0x11	; 17
    1be6:	48 2f       	mov	r20, r24
    1be8:	02 b2       	in	r0, 0x12	; 18
    1bea:	42 2f       	mov	r20, r18
    1bec:	03 90       	.word	0x9003	; ????
    1bee:	56 2f       	mov	r21, r22
    1bf0:	d7 52       	subi	r29, 0x27	; 39
    1bf2:	79 80       	ldd	r7, Y+1	; 0x01
    1bf4:	42 40       	sbci	r20, 0x02	; 2
    1bf6:	81 84       	ldd	r8, Z+9	; 0x09
    1bf8:	00 40       	sbci	r16, 0x00	; 0
    1bfa:	42 42       	sbci	r20, 0x22	; 34
    1bfc:	98 2e       	mov	r9, r24
    1bfe:	93 0c       	add	r9, r3
    1c00:	d9 54       	subi	r29, 0x49	; 73
    1c02:	d7 50       	subi	r29, 0x07	; 7
    1c04:	a1 40       	sbci	r26, 0x01	; 1
    1c06:	98 bd       	out	0x28, r25	; 40
    1c08:	82 40       	sbci	r24, 0x02	; 2
    1c0a:	3e 82       	std	Y+6, r3	; 0x06
    1c0c:	da 0a       	sbc	r13, r26
    1c0e:	44 40       	sbci	r20, 0x04	; 4
    1c10:	8b 16       	cp	r8, r27
    1c12:	e3 00       	.word	0x00e3	; ????
    1c14:	53 42       	sbci	r21, 0x23	; 35
    1c16:	00 2e       	mov	r0, r16
    1c18:	43 40       	sbci	r20, 0x03	; 3
    1c1a:	9a 02       	muls	r25, r26
    1c1c:	52 42       	sbci	r21, 0x22	; 34
    1c1e:	00 2e       	mov	r0, r16
    1c20:	41 40       	sbci	r20, 0x01	; 1
    1c22:	15 54       	subi	r17, 0x45	; 69
    1c24:	4a 0e       	add	r4, r26
    1c26:	3a 2f       	mov	r19, r26
    1c28:	3a 82       	std	Y+2, r3	; 0x02
    1c2a:	00 30       	cpi	r16, 0x00	; 0
    1c2c:	41 40       	sbci	r20, 0x01	; 1
    1c2e:	21 2e       	mov	r2, r17
    1c30:	85 0f       	add	r24, r21
    1c32:	40 b2       	in	r4, 0x10	; 16
    1c34:	0a 2f       	mov	r16, r26
    1c36:	98 2e       	mov	r9, r24
    1c38:	b1 0c       	add	r11, r1
    1c3a:	98 2e       	mov	r9, r24
    1c3c:	45 0e       	add	r4, r21
    1c3e:	98 2e       	mov	r9, r24
    1c40:	5b 0e       	add	r5, r27
    1c42:	fb 6f       	ori	r31, 0xFB	; 251
    1c44:	f0 5f       	subi	r31, 0xF0	; 240
    1c46:	00 30       	cpi	r16, 0x00	; 0
    1c48:	80 2e       	mov	r8, r16
    1c4a:	ce b7       	in	r28, 0x3e	; 62
    1c4c:	dd 52       	subi	r29, 0x2D	; 45
    1c4e:	d3 54       	subi	r29, 0x43	; 67
    1c50:	42 42       	sbci	r20, 0x22	; 34
    1c52:	4f 84       	ldd	r4, Y+15	; 0x0f
    1c54:	73 30       	cpi	r23, 0x03	; 3
    1c56:	db 52       	subi	r29, 0x2B	; 43
    1c58:	83 42       	sbci	r24, 0x23	; 35
    1c5a:	1b 30       	cpi	r17, 0x0B	; 11
    1c5c:	6b 42       	sbci	r22, 0x2B	; 43
    1c5e:	23 30       	cpi	r18, 0x03	; 3
    1c60:	27 2e       	mov	r2, r23
    1c62:	d7 00       	.word	0x00d7	; ????
    1c64:	37 2e       	mov	r3, r23
    1c66:	d4 00       	.word	0x00d4	; ????
    1c68:	21 2e       	mov	r2, r17
    1c6a:	d6 00       	.word	0x00d6	; ????
    1c6c:	7a 84       	ldd	r7, Y+10	; 0x0a
    1c6e:	17 2c       	mov	r1, r7
    1c70:	42 42       	sbci	r20, 0x22	; 34
    1c72:	30 30       	cpi	r19, 0x00	; 0
    1c74:	21 2e       	mov	r2, r17
    1c76:	d4 00       	.word	0x00d4	; ????
    1c78:	12 2d       	mov	r17, r2
    1c7a:	21 30       	cpi	r18, 0x01	; 1
    1c7c:	00 30       	cpi	r16, 0x00	; 0
    1c7e:	23 2e       	mov	r2, r19
    1c80:	d4 00       	.word	0x00d4	; ????
    1c82:	21 2e       	mov	r2, r17
    1c84:	7b f7       	brvc	.-34     	; 0x1c64 <__stack+0x1365>
    1c86:	0b 2d       	mov	r16, r11
    1c88:	17 30       	cpi	r17, 0x07	; 7
    1c8a:	98 2e       	mov	r9, r24
    1c8c:	51 0c       	add	r5, r1
    1c8e:	d5 50       	subi	r29, 0x05	; 5
    1c90:	0c 82       	std	Y+4, r0	; 0x04
    1c92:	72 30       	cpi	r23, 0x02	; 2
    1c94:	2f 2e       	mov	r2, r31
    1c96:	d4 00       	.word	0x00d4	; ????
    1c98:	25 2e       	mov	r2, r21
    1c9a:	7b f7       	brvc	.-34     	; 0x1c7a <__stack+0x137b>
    1c9c:	40 42       	sbci	r20, 0x20	; 32
    1c9e:	00 2e       	mov	r0, r16
    1ca0:	fb 6f       	ori	r31, 0xFB	; 251
    1ca2:	f0 5f       	subi	r31, 0xF0	; 240
    1ca4:	b8 2e       	mov	r11, r24
    1ca6:	70 50       	subi	r23, 0x00	; 0
    1ca8:	0a 25       	eor	r16, r10
    1caa:	39 86       	std	Y+9, r3	; 0x09
    1cac:	fb 7f       	andi	r31, 0xFB	; 251
    1cae:	e1 32       	cpi	r30, 0x21	; 33
    1cb0:	62 30       	cpi	r22, 0x02	; 2
    1cb2:	98 2e       	mov	r9, r24
    1cb4:	c2 c4       	rjmp	.+2436   	; 0x263a <BMI270_init+0x26>
    1cb6:	b5 56       	subi	r27, 0x65	; 101
    1cb8:	a5 6f       	ori	r26, 0xF5	; 245
    1cba:	ab 08       	sbc	r10, r11
    1cbc:	91 6f       	ori	r25, 0xF1	; 241
    1cbe:	4b 08       	sbc	r4, r11
    1cc0:	df 56       	subi	r29, 0x6F	; 111
    1cc2:	c4 6f       	ori	r28, 0xF4	; 244
    1cc4:	23 09       	sbc	r18, r3
    1cc6:	4d ba       	out	0x1d, r4	; 29
    1cc8:	93 bc       	out	0x23, r9	; 35
    1cca:	8c 0b       	sbc	r24, r28
    1ccc:	d1 6f       	ori	r29, 0xF1	; 241
    1cce:	0b 09       	sbc	r16, r11
    1cd0:	cb 52       	subi	r28, 0x2B	; 43
    1cd2:	e1 5e       	subi	r30, 0xE1	; 225
    1cd4:	56 42       	sbci	r21, 0x26	; 38
    1cd6:	af 09       	sbc	r26, r15
    1cd8:	4d ba       	out	0x1d, r4	; 29
    1cda:	23 bd       	out	0x23, r18	; 35
    1cdc:	94 0a       	sbc	r9, r20
    1cde:	e5 6f       	ori	r30, 0xF5	; 245
    1ce0:	68 bb       	out	0x18, r22	; 24
    1ce2:	eb 08       	sbc	r14, r11
    1ce4:	bd b9       	out	0x0d, r27	; 13
    1ce6:	63 be       	out	0x33, r6	; 51
    1ce8:	fb 6f       	ori	r31, 0xFB	; 251
    1cea:	52 42       	sbci	r21, 0x22	; 34
    1cec:	e3 0a       	sbc	r14, r19
    1cee:	c0 2e       	mov	r12, r16
    1cf0:	43 42       	sbci	r20, 0x23	; 35
    1cf2:	90 5f       	subi	r25, 0xF0	; 240
    1cf4:	d1 50       	subi	r29, 0x01	; 1
    1cf6:	03 2e       	mov	r0, r19
    1cf8:	25 f3       	brhs	.-56     	; 0x1cc2 <__stack+0x13c3>
    1cfa:	13 40       	sbci	r17, 0x03	; 3
    1cfc:	00 40       	sbci	r16, 0x00	; 0
    1cfe:	9b bc       	out	0x2b, r9	; 43
    1d00:	9b b4       	in	r9, 0x2b	; 43
    1d02:	08 bd       	out	0x28, r16	; 40
    1d04:	b8 b9       	out	0x08, r27	; 8
    1d06:	98 bc       	out	0x28, r9	; 40
    1d08:	da 0a       	sbc	r13, r26
    1d0a:	08 b6       	in	r0, 0x38	; 56
    1d0c:	89 16       	cp	r8, r25
    1d0e:	c0 2e       	mov	r12, r16
    1d10:	19 00       	.word	0x0019	; ????
    1d12:	62 02       	muls	r22, r18
    1d14:	10 50       	subi	r17, 0x00	; 0
    1d16:	fb 7f       	andi	r31, 0xFB	; 251
    1d18:	98 2e       	mov	r9, r24
    1d1a:	81 0d       	add	r24, r1
    1d1c:	01 2e       	mov	r0, r17
    1d1e:	d4 00       	.word	0x00d4	; ????
    1d20:	31 30       	cpi	r19, 0x01	; 1
    1d22:	08 04       	cpc	r0, r8
    1d24:	fb 6f       	ori	r31, 0xFB	; 251
    1d26:	01 30       	cpi	r16, 0x01	; 1
    1d28:	f0 5f       	subi	r31, 0xF0	; 240
    1d2a:	23 2e       	mov	r2, r19
    1d2c:	d6 00       	.word	0x00d6	; ????
    1d2e:	21 2e       	mov	r2, r17
    1d30:	d7 00       	.word	0x00d7	; ????
    1d32:	b8 2e       	mov	r11, r24
    1d34:	01 2e       	mov	r0, r17
    1d36:	d7 00       	.word	0x00d7	; ????
    1d38:	03 2e       	mov	r0, r19
    1d3a:	d6 00       	.word	0x00d6	; ????
    1d3c:	48 0e       	add	r4, r24
    1d3e:	01 2f       	mov	r16, r17
    1d40:	80 2e       	mov	r8, r16
    1d42:	1f 0e       	add	r1, r31
    1d44:	b8 2e       	mov	r11, r24
    1d46:	e3 50       	subi	r30, 0x03	; 3
    1d48:	21 34       	cpi	r18, 0x41	; 65
    1d4a:	01 42       	sbci	r16, 0x21	; 33
    1d4c:	82 30       	cpi	r24, 0x02	; 2
    1d4e:	c1 32       	cpi	r28, 0x21	; 33
    1d50:	25 2e       	mov	r2, r21
    1d52:	62 f5       	brpl	.+88     	; 0x1dac <__stack+0x14ad>
    1d54:	01 00       	.word	0x0001	; ????
    1d56:	22 30       	cpi	r18, 0x02	; 2
    1d58:	01 40       	sbci	r16, 0x01	; 1
    1d5a:	4a 0a       	sbc	r4, r26
    1d5c:	01 42       	sbci	r16, 0x21	; 33
    1d5e:	b8 2e       	mov	r11, r24
    1d60:	e3 54       	subi	r30, 0x43	; 67
    1d62:	f0 3b       	cpi	r31, 0xB0	; 176
    1d64:	83 40       	sbci	r24, 0x03	; 3
    1d66:	d8 08       	sbc	r13, r8
    1d68:	e5 52       	subi	r30, 0x25	; 37
    1d6a:	83 42       	sbci	r24, 0x23	; 35
    1d6c:	00 30       	cpi	r16, 0x00	; 0
    1d6e:	83 30       	cpi	r24, 0x03	; 3
    1d70:	50 42       	sbci	r21, 0x20	; 32
    1d72:	c4 32       	cpi	r28, 0x24	; 36
    1d74:	27 2e       	mov	r2, r23
    1d76:	64 f5       	brge	.+88     	; 0x1dd0 <__stack+0x14d1>
    1d78:	94 00       	.word	0x0094	; ????
    1d7a:	50 42       	sbci	r21, 0x20	; 32
    1d7c:	40 42       	sbci	r20, 0x20	; 32
    1d7e:	d3 3f       	cpi	r29, 0xF3	; 243
    1d80:	84 40       	sbci	r24, 0x04	; 4
    1d82:	7d 82       	std	Y+5, r7	; 0x05
    1d84:	e3 08       	sbc	r14, r3
    1d86:	40 42       	sbci	r20, 0x20	; 32
    1d88:	83 42       	sbci	r24, 0x23	; 35
    1d8a:	b8 2e       	mov	r11, r24
    1d8c:	dd 52       	subi	r29, 0x2D	; 45
    1d8e:	00 30       	cpi	r16, 0x00	; 0
    1d90:	40 42       	sbci	r20, 0x20	; 32
    1d92:	7c 86       	std	Y+12, r7	; 0x0c
    1d94:	b9 52       	subi	r27, 0x29	; 41
    1d96:	09 2e       	mov	r0, r25
    1d98:	70 0f       	add	r23, r16
    1d9a:	bf 54       	subi	r27, 0x4F	; 79
    1d9c:	c4 42       	sbci	r28, 0x24	; 36
    1d9e:	d3 86       	std	Z+11, r13	; 0x0b
    1da0:	54 40       	sbci	r21, 0x04	; 4
    1da2:	55 40       	sbci	r21, 0x05	; 5
    1da4:	94 42       	sbci	r25, 0x24	; 36
    1da6:	85 42       	sbci	r24, 0x25	; 37
    1da8:	21 2e       	mov	r2, r17
    1daa:	d7 00       	.word	0x00d7	; ????
    1dac:	42 40       	sbci	r20, 0x02	; 2
    1dae:	25 2e       	mov	r2, r21
    1db0:	fd f3       	brhs	.-2      	; 0x1db0 <__stack+0x14b1>
    1db2:	c0 42       	sbci	r28, 0x20	; 32
    1db4:	7e 82       	std	Y+6, r7	; 0x06
    1db6:	05 2e       	mov	r0, r21
    1db8:	7d 00       	.word	0x007d	; ????
    1dba:	80 b2       	in	r8, 0x10	; 16
    1dbc:	14 2f       	mov	r17, r20
    1dbe:	05 2e       	mov	r0, r21
    1dc0:	89 00       	.word	0x0089	; ????
    1dc2:	27 bd       	out	0x27, r18	; 39
    1dc4:	2f b9       	out	0x0f, r18	; 15
    1dc6:	80 90 02 2f 	lds	r8, 0x2F02	; 0x802f02 <__bss_end+0x295c>
    1dca:	21 2e       	mov	r2, r17
    1dcc:	6f f5       	brid	.+90     	; 0x1e28 <__stack+0x1529>
    1dce:	0c 2d       	mov	r16, r12
    1dd0:	07 2e       	mov	r0, r23
    1dd2:	71 0f       	add	r23, r17
    1dd4:	14 30       	cpi	r17, 0x04	; 4
    1dd6:	1c 09       	sbc	r17, r12
    1dd8:	05 2e       	mov	r0, r21
    1dda:	77 f7       	brid	.-36     	; 0x1db8 <__stack+0x14b9>
    1ddc:	bd 56       	subi	r27, 0x6D	; 109
    1dde:	47 be       	out	0x37, r4	; 55
    1de0:	93 08       	sbc	r9, r3
    1de2:	94 0a       	sbc	r9, r20
    1de4:	25 2e       	mov	r2, r21
    1de6:	77 f7       	brid	.-36     	; 0x1dc4 <__stack+0x14c5>
    1de8:	e7 54       	subi	r30, 0x47	; 71
    1dea:	50 42       	sbci	r21, 0x20	; 32
    1dec:	4a 0e       	add	r4, r26
    1dee:	fc 2f       	mov	r31, r28
    1df0:	b8 2e       	mov	r11, r24
    1df2:	50 50       	subi	r21, 0x00	; 0
    1df4:	02 30       	cpi	r16, 0x02	; 2
    1df6:	43 86       	std	Z+11, r4	; 0x0b
    1df8:	e5 50       	subi	r30, 0x05	; 5
    1dfa:	fb 7f       	andi	r31, 0xFB	; 251
    1dfc:	e3 7f       	andi	r30, 0xF3	; 243
    1dfe:	d2 7f       	andi	r29, 0xF2	; 242
    1e00:	c0 7f       	andi	r28, 0xF0	; 240
    1e02:	b1 7f       	andi	r27, 0xF1	; 241
    1e04:	00 2e       	mov	r0, r16
    1e06:	41 40       	sbci	r20, 0x01	; 1
    1e08:	00 40       	sbci	r16, 0x00	; 0
    1e0a:	48 04       	cpc	r4, r8
    1e0c:	98 2e       	mov	r9, r24
    1e0e:	74 c0       	rjmp	.+232    	; 0x1ef8 <__stack+0x15f9>
    1e10:	1e aa       	std	Y+54, r1	; 0x36
    1e12:	d3 6f       	ori	r29, 0xF3	; 243
    1e14:	14 30       	cpi	r17, 0x04	; 4
    1e16:	b1 6f       	ori	r27, 0xF1	; 241
    1e18:	e3 22       	and	r14, r19
    1e1a:	c0 6f       	ori	r28, 0xF0	; 240
    1e1c:	52 40       	sbci	r21, 0x02	; 2
    1e1e:	e4 6f       	ori	r30, 0xF4	; 244
    1e20:	4c 0e       	add	r4, r28
    1e22:	12 42       	sbci	r17, 0x22	; 34
    1e24:	d3 7f       	andi	r29, 0xF3	; 243
    1e26:	eb 2f       	mov	r30, r27
    1e28:	03 2e       	mov	r0, r19
    1e2a:	86 0f       	add	r24, r22
    1e2c:	40 90 11 30 	lds	r4, 0x3011	; 0x803011 <__bss_end+0x2a6b>
    1e30:	03 2f       	mov	r16, r19
    1e32:	23 2e       	mov	r2, r19
    1e34:	86 0f       	add	r24, r22
    1e36:	02 2c       	mov	r0, r2
    1e38:	00 30       	cpi	r16, 0x00	; 0
    1e3a:	d0 6f       	ori	r29, 0xF0	; 240
    1e3c:	fb 6f       	ori	r31, 0xFB	; 251
    1e3e:	b0 5f       	subi	r27, 0xF0	; 240
    1e40:	b8 2e       	mov	r11, r24
    1e42:	40 50       	subi	r20, 0x00	; 0
    1e44:	f1 7f       	andi	r31, 0xF1	; 241
    1e46:	0a 25       	eor	r16, r10
    1e48:	3c 86       	std	Y+12, r3	; 0x0c
    1e4a:	eb 7f       	andi	r30, 0xFB	; 251
    1e4c:	41 33       	cpi	r20, 0x31	; 49
    1e4e:	22 30       	cpi	r18, 0x02	; 2
    1e50:	98 2e       	mov	r9, r24
    1e52:	c2 c4       	rjmp	.+2436   	; 0x27d8 <ff_wtoupper+0x34>
    1e54:	d3 6f       	ori	r29, 0xF3	; 243
    1e56:	f4 30       	cpi	r31, 0x04	; 4
    1e58:	dc 09       	sbc	r29, r12
    1e5a:	47 58       	subi	r20, 0x87	; 135
    1e5c:	c2 6f       	ori	r28, 0xF2	; 242
    1e5e:	94 09       	sbc	r25, r4
    1e60:	eb 58       	subi	r30, 0x8B	; 139
    1e62:	6a bb       	out	0x1a, r22	; 26
    1e64:	dc 08       	sbc	r13, r12
    1e66:	b4 b9       	out	0x04, r27	; 4
    1e68:	b1 bd       	out	0x21, r27	; 33
    1e6a:	e9 5a       	subi	r30, 0xA9	; 169
    1e6c:	95 08       	sbc	r9, r5
    1e6e:	21 bd       	out	0x21, r18	; 33
    1e70:	f6 bf       	out	0x36, r31	; 54
    1e72:	77 0b       	sbc	r23, r23
    1e74:	51 be       	out	0x31, r5	; 49
    1e76:	f1 6f       	ori	r31, 0xF1	; 241
    1e78:	eb 6f       	ori	r30, 0xFB	; 251
    1e7a:	52 42       	sbci	r21, 0x22	; 34
    1e7c:	54 42       	sbci	r21, 0x24	; 36
    1e7e:	c0 2e       	mov	r12, r16
    1e80:	43 42       	sbci	r20, 0x23	; 35
    1e82:	c0 5f       	subi	r28, 0xF0	; 240
    1e84:	50 50       	subi	r21, 0x00	; 0
    1e86:	f5 50       	subi	r31, 0x05	; 5
    1e88:	31 30       	cpi	r19, 0x01	; 1
    1e8a:	11 42       	sbci	r17, 0x21	; 33
    1e8c:	fb 7f       	andi	r31, 0xFB	; 251
    1e8e:	7b 30       	cpi	r23, 0x0B	; 11
    1e90:	0b 42       	sbci	r16, 0x2B	; 43
    1e92:	11 30       	cpi	r17, 0x01	; 1
    1e94:	02 80       	ldd	r0, Z+2	; 0x02
    1e96:	23 33       	cpi	r18, 0x33	; 51
    1e98:	01 42       	sbci	r16, 0x21	; 33
    1e9a:	03 00       	.word	0x0003	; ????
    1e9c:	07 2e       	mov	r0, r23
    1e9e:	80 03       	fmuls	r16, r16
    1ea0:	05 2e       	mov	r0, r21
    1ea2:	d3 00       	.word	0x00d3	; ????
    1ea4:	23 52       	subi	r18, 0x23	; 35
    1ea6:	e2 7f       	andi	r30, 0xF2	; 242
    1ea8:	d3 7f       	andi	r29, 0xF3	; 243
    1eaa:	c0 7f       	andi	r28, 0xF0	; 240
    1eac:	98 2e       	mov	r9, r24
    1eae:	b6 0e       	add	r11, r22
    1eb0:	d1 6f       	ori	r29, 0xF1	; 241
    1eb2:	08 0a       	sbc	r0, r24
    1eb4:	1a 25       	eor	r17, r10
    1eb6:	7b 86       	std	Y+11, r7	; 0x0b
    1eb8:	d0 7f       	andi	r29, 0xF0	; 240
    1eba:	01 33       	cpi	r16, 0x31	; 49
    1ebc:	12 30       	cpi	r17, 0x02	; 2
    1ebe:	98 2e       	mov	r9, r24
    1ec0:	c2 c4       	rjmp	.+2436   	; 0x2846 <mem_cmp+0x24>
    1ec2:	d1 6f       	ori	r29, 0xF1	; 241
    1ec4:	08 0a       	sbc	r0, r24
    1ec6:	00 b2       	in	r0, 0x10	; 16
    1ec8:	0d 2f       	mov	r16, r29
    1eca:	e3 6f       	ori	r30, 0xF3	; 243
    1ecc:	01 2e       	mov	r0, r17
    1ece:	80 03       	fmuls	r16, r16
    1ed0:	51 30       	cpi	r21, 0x01	; 1
    1ed2:	c7 86       	std	Z+15, r12	; 0x0f
    1ed4:	23 2e       	mov	r2, r19
    1ed6:	21 f2       	breq	.-120    	; 0x1e60 <__stack+0x1561>
    1ed8:	08 bc       	out	0x28, r0	; 40
    1eda:	c0 42       	sbci	r28, 0x20	; 32
    1edc:	98 2e       	mov	r9, r24
    1ede:	a5 b7       	in	r26, 0x35	; 53
    1ee0:	00 2e       	mov	r0, r16
    1ee2:	00 2e       	mov	r0, r16
    1ee4:	d0 2e       	mov	r13, r16
    1ee6:	b0 6f       	ori	r27, 0xF0	; 240
    1ee8:	0b b8       	out	0x0b, r0	; 11
    1eea:	03 2e       	mov	r0, r19
    1eec:	1b 00       	.word	0x001b	; ????
    1eee:	08 1a       	sub	r0, r24
    1ef0:	b0 7f       	andi	r27, 0xF0	; 240
    1ef2:	70 30       	cpi	r23, 0x00	; 0
    1ef4:	04 2f       	mov	r16, r20
    1ef6:	21 2e       	mov	r2, r17
    1ef8:	21 f2       	breq	.-120    	; 0x1e82 <__stack+0x1583>
    1efa:	00 2e       	mov	r0, r16
    1efc:	00 2e       	mov	r0, r16
    1efe:	d0 2e       	mov	r13, r16
    1f00:	98 2e       	mov	r9, r24
    1f02:	6d c0       	rjmp	.+218    	; 0x1fde <__stack+0x16df>
    1f04:	98 2e       	mov	r9, r24
    1f06:	5d c0       	rjmp	.+186    	; 0x1fc2 <__stack+0x16c3>
    1f08:	ed 50       	subi	r30, 0x0D	; 13
    1f0a:	98 2e       	mov	r9, r24
    1f0c:	44 cb       	rjmp	.-2424   	; 0x1596 <__stack+0xc97>
    1f0e:	ef 50       	subi	r30, 0x0F	; 15
    1f10:	98 2e       	mov	r9, r24
    1f12:	46 c3       	rjmp	.+1676   	; 0x25a0 <__ctors_end+0xa>
    1f14:	f1 50       	subi	r31, 0x01	; 1
    1f16:	98 2e       	mov	r9, r24
    1f18:	53 c7       	rjmp	.+3750   	; 0x2dc0 <find_volume+0xa0>
    1f1a:	35 50       	subi	r19, 0x05	; 5
    1f1c:	98 2e       	mov	r9, r24
    1f1e:	64 cf       	rjmp	.-312    	; 0x1de8 <__stack+0x14e9>
    1f20:	10 30       	cpi	r17, 0x00	; 0
    1f22:	98 2e       	mov	r9, r24
    1f24:	dc 03       	fmulsu	r21, r20
    1f26:	20 26       	eor	r2, r16
    1f28:	c0 6f       	ori	r28, 0xF0	; 240
    1f2a:	02 31       	cpi	r16, 0x12	; 18
    1f2c:	12 42       	sbci	r17, 0x22	; 34
    1f2e:	ab 33       	cpi	r26, 0x3B	; 59
    1f30:	0b 42       	sbci	r16, 0x2B	; 43
    1f32:	37 80       	ldd	r3, Z+7	; 0x07
    1f34:	01 30       	cpi	r16, 0x01	; 1
    1f36:	01 42       	sbci	r16, 0x21	; 33
    1f38:	f3 37       	cpi	r31, 0x73	; 115
    1f3a:	f7 52       	subi	r31, 0x27	; 39
    1f3c:	fb 50       	subi	r31, 0x0B	; 11
    1f3e:	44 40       	sbci	r20, 0x04	; 4
    1f40:	a2 0a       	sbc	r10, r18
    1f42:	42 42       	sbci	r20, 0x22	; 34
    1f44:	8b 31       	cpi	r24, 0x1B	; 27
    1f46:	09 2e       	mov	r0, r25
    1f48:	5e f7       	brtc	.-42     	; 0x1f20 <__stack+0x1621>
    1f4a:	f9 54       	subi	r31, 0x49	; 73
    1f4c:	e3 08       	sbc	r14, r3
    1f4e:	83 42       	sbci	r24, 0x23	; 35
    1f50:	1b 42       	sbci	r17, 0x2B	; 43
    1f52:	23 33       	cpi	r18, 0x33	; 51
    1f54:	4b 00       	.word	0x004b	; ????
    1f56:	bc 84       	ldd	r11, Y+12	; 0x0c
    1f58:	0b 40       	sbci	r16, 0x0B	; 11
    1f5a:	33 30       	cpi	r19, 0x03	; 3
    1f5c:	83 42       	sbci	r24, 0x23	; 35
    1f5e:	0b 42       	sbci	r16, 0x2B	; 43
    1f60:	e0 7f       	andi	r30, 0xF0	; 240
    1f62:	d1 7f       	andi	r29, 0xF1	; 241
    1f64:	98 2e       	mov	r9, r24
    1f66:	58 b7       	in	r21, 0x38	; 56
    1f68:	d1 6f       	ori	r29, 0xF1	; 241
    1f6a:	80 30       	cpi	r24, 0x00	; 0
    1f6c:	40 42       	sbci	r20, 0x20	; 32
    1f6e:	03 30       	cpi	r16, 0x03	; 3
    1f70:	e0 6f       	ori	r30, 0xF0	; 240
    1f72:	f3 54       	subi	r31, 0x43	; 67
    1f74:	04 30       	cpi	r16, 0x04	; 4
    1f76:	00 2e       	mov	r0, r16
    1f78:	00 2e       	mov	r0, r16
    1f7a:	01 89       	ldd	r16, Z+17	; 0x11
    1f7c:	62 0e       	add	r6, r18
    1f7e:	fa 2f       	mov	r31, r26
    1f80:	43 42       	sbci	r20, 0x23	; 35
    1f82:	11 30       	cpi	r17, 0x01	; 1
    1f84:	fb 6f       	ori	r31, 0xFB	; 251
    1f86:	c0 2e       	mov	r12, r16
    1f88:	01 42       	sbci	r16, 0x21	; 33
    1f8a:	b0 5f       	subi	r27, 0xF0	; 240
    1f8c:	c1 4a       	sbci	r28, 0xA1	; 161
    1f8e:	00 00       	nop
    1f90:	6d 57       	subi	r22, 0x7D	; 125
    1f92:	00 00       	nop
    1f94:	77 8e       	std	Z+31, r7	; 0x1f
    1f96:	00 00       	nop
    1f98:	e0 ff       	sbrs	r30, 0
    1f9a:	ff ff       	.word	0xffff	; ????
    1f9c:	d3 ff       	sbrs	r29, 3
    1f9e:	ff ff       	.word	0xffff	; ????
    1fa0:	e5 ff       	sbrs	r30, 5
    1fa2:	ff ff       	.word	0xffff	; ????
    1fa4:	ee e1       	ldi	r30, 0x1E	; 30
    1fa6:	ff ff       	.word	0xffff	; ????
    1fa8:	7c 13       	cpse	r23, r28
    1faa:	00 00       	nop
    1fac:	46 e6       	ldi	r20, 0x66	; 102
    1fae:	ff ff       	.word	0xffff	; ????
	...
    1fe8:	00 00       	nop
    1fea:	80 2e       	mov	r8, r16
    1fec:	00 c1       	rjmp	.+512    	; 0x21ee <tbl_upper.1977+0x118>
    1fee:	80 2e       	mov	r8, r16
    1ff0:	00 c1       	rjmp	.+512    	; 0x21f2 <tbl_upper.1977+0x11c>
    1ff2:	80 2e       	mov	r8, r16
    1ff4:	00 c1       	rjmp	.+512    	; 0x21f6 <tbl_upper.1977+0x120>
    1ff6:	80 2e       	mov	r8, r16
    1ff8:	00 c1       	rjmp	.+512    	; 0x21fa <tbl_upper.1977+0x124>
    1ffa:	80 2e       	mov	r8, r16
    1ffc:	00 c1       	rjmp	.+512    	; 0x21fe <tbl_upper.1977+0x128>
    1ffe:	80 2e       	mov	r8, r16
    2000:	00 c1       	rjmp	.+512    	; 0x2202 <tbl_upper.1977+0x12c>
    2002:	80 2e       	mov	r8, r16
    2004:	00 c1       	rjmp	.+512    	; 0x2206 <tbl_upper.1977+0x130>
    2006:	80 2e       	mov	r8, r16
    2008:	00 c1       	rjmp	.+512    	; 0x220a <tbl_upper.1977+0x134>
    200a:	80 2e       	mov	r8, r16
    200c:	00 c1       	rjmp	.+512    	; 0x220e <tbl_upper.1977+0x138>
    200e:	80 2e       	mov	r8, r16
    2010:	00 c1       	rjmp	.+512    	; 0x2212 <tbl_upper.1977+0x13c>
    2012:	80 2e       	mov	r8, r16
    2014:	00 c1       	rjmp	.+512    	; 0x2216 <tbl_upper.1977+0x140>
    2016:	80 2e       	mov	r8, r16
    2018:	00 c1       	rjmp	.+512    	; 0x221a <tbl_upper.1977+0x144>
    201a:	80 2e       	mov	r8, r16
    201c:	00 c1       	rjmp	.+512    	; 0x221e <tbl_upper.1977+0x148>
    201e:	80 2e       	mov	r8, r16
    2020:	00 c1       	rjmp	.+512    	; 0x2222 <tbl_upper.1977+0x14c>
    2022:	80 2e       	mov	r8, r16
    2024:	00 c1       	rjmp	.+512    	; 0x2226 <tbl_upper.1977+0x150>
    2026:	80 2e       	mov	r8, r16
    2028:	00 c1       	rjmp	.+512    	; 0x222a <tbl_upper.1977+0x154>
    202a:	80 2e       	mov	r8, r16
    202c:	00 c1       	rjmp	.+512    	; 0x222e <tbl_upper.1977+0x158>
    202e:	80 2e       	mov	r8, r16
    2030:	00 c1       	rjmp	.+512    	; 0x2232 <tbl_upper.1977+0x15c>
    2032:	80 2e       	mov	r8, r16
    2034:	00 c1       	rjmp	.+512    	; 0x2236 <tbl_upper.1977+0x160>
    2036:	80 2e       	mov	r8, r16
    2038:	00 c1       	rjmp	.+512    	; 0x223a <tbl_upper.1977+0x164>
    203a:	80 2e       	mov	r8, r16
    203c:	00 c1       	rjmp	.+512    	; 0x223e <tbl_upper.1977+0x168>
    203e:	80 2e       	mov	r8, r16
    2040:	00 c1       	rjmp	.+512    	; 0x2242 <tbl_upper.1977+0x16c>
    2042:	80 2e       	mov	r8, r16
    2044:	00 c1       	rjmp	.+512    	; 0x2246 <tbl_upper.1977+0x170>
    2046:	80 2e       	mov	r8, r16
    2048:	00 c1       	rjmp	.+512    	; 0x224a <tbl_upper.1977+0x174>
    204a:	80 2e       	mov	r8, r16
    204c:	00 c1       	rjmp	.+512    	; 0x224e <tbl_upper.1977+0x178>
    204e:	80 2e       	mov	r8, r16
    2050:	00 c1       	rjmp	.+512    	; 0x2252 <tbl_upper.1977+0x17c>
    2052:	80 2e       	mov	r8, r16
    2054:	00 c1       	rjmp	.+512    	; 0x2256 <tbl_upper.1977+0x180>
    2056:	80 2e       	mov	r8, r16
    2058:	00 c1       	rjmp	.+512    	; 0x225a <tbl_upper.1977+0x184>
    205a:	80 2e       	mov	r8, r16
    205c:	00 c1       	rjmp	.+512    	; 0x225e <tbl_upper.1977+0x188>
    205e:	80 2e       	mov	r8, r16
    2060:	00 c1       	rjmp	.+512    	; 0x2262 <tbl_upper.1977+0x18c>
    2062:	80 2e       	mov	r8, r16
    2064:	00 c1       	rjmp	.+512    	; 0x2266 <tbl_upper.1977+0x190>
    2066:	80 2e       	mov	r8, r16
    2068:	00 c1       	rjmp	.+512    	; 0x226a <tbl_upper.1977+0x194>
    206a:	80 2e       	mov	r8, r16
    206c:	00 c1       	rjmp	.+512    	; 0x226e <tbl_upper.1977+0x198>
    206e:	80 2e       	mov	r8, r16
    2070:	00 c1       	rjmp	.+512    	; 0x2272 <tbl_upper.1977+0x19c>
    2072:	80 2e       	mov	r8, r16
    2074:	00 c1       	rjmp	.+512    	; 0x2276 <tbl_upper.1977+0x1a0>
    2076:	80 2e       	mov	r8, r16
    2078:	00 c1       	rjmp	.+512    	; 0x227a <tbl_upper.1977+0x1a4>
    207a:	80 2e       	mov	r8, r16
    207c:	00 c1       	rjmp	.+512    	; 0x227e <tbl_upper.1977+0x1a8>
    207e:	80 2e       	mov	r8, r16
    2080:	00 c1       	rjmp	.+512    	; 0x2282 <tbl_upper.1977+0x1ac>
    2082:	80 2e       	mov	r8, r16
    2084:	00 c1       	rjmp	.+512    	; 0x2286 <tbl_upper.1977+0x1b0>
    2086:	80 2e       	mov	r8, r16
    2088:	00 c1       	rjmp	.+512    	; 0x228a <tbl_upper.1977+0x1b4>
    208a:	80 2e       	mov	r8, r16
    208c:	00 c1       	rjmp	.+512    	; 0x228e <tbl_upper.1977+0x1b8>
    208e:	80 2e       	mov	r8, r16
    2090:	00 c1       	rjmp	.+512    	; 0x2292 <tbl_upper.1977+0x1bc>
    2092:	80 2e       	mov	r8, r16
    2094:	00 c1       	rjmp	.+512    	; 0x2296 <tbl_upper.1977+0x1c0>
    2096:	80 2e       	mov	r8, r16
    2098:	00 c1       	rjmp	.+512    	; 0x229a <tbl_upper.1977+0x1c4>
    209a:	80 2e       	mov	r8, r16
    209c:	00 c1       	rjmp	.+512    	; 0x229e <tbl_upper.1977+0x1c8>
    209e:	80 2e       	mov	r8, r16
    20a0:	00 c1       	rjmp	.+512    	; 0x22a2 <tbl_upper.1977+0x1cc>
    20a2:	80 2e       	mov	r8, r16
    20a4:	00 c1       	rjmp	.+512    	; 0x22a6 <tbl_upper.1977+0x1d0>
    20a6:	80 2e       	mov	r8, r16
    20a8:	00 c1       	rjmp	.+512    	; 0x22aa <tbl_upper.1977+0x1d4>
    20aa:	80 2e       	mov	r8, r16
    20ac:	00 c1       	rjmp	.+512    	; 0x22ae <tbl_upper.1977+0x1d8>
    20ae:	80 2e       	mov	r8, r16
    20b0:	00 c1       	rjmp	.+512    	; 0x22b2 <tbl_upper.1977+0x1dc>
    20b2:	80 2e       	mov	r8, r16
    20b4:	00 c1       	rjmp	.+512    	; 0x22b6 <tbl_lower.1976>
    20b6:	80 2e       	mov	r8, r16
    20b8:	00 c1       	rjmp	.+512    	; 0x22ba <tbl_lower.1976+0x4>
    20ba:	80 2e       	mov	r8, r16
    20bc:	00 c1       	rjmp	.+512    	; 0x22be <tbl_lower.1976+0x8>
    20be:	80 2e       	mov	r8, r16
    20c0:	00 c1       	rjmp	.+512    	; 0x22c2 <tbl_lower.1976+0xc>
    20c2:	80 2e       	mov	r8, r16
    20c4:	00 c1       	rjmp	.+512    	; 0x22c6 <tbl_lower.1976+0x10>
    20c6:	80 2e       	mov	r8, r16
    20c8:	00 c1       	rjmp	.+512    	; 0x22ca <tbl_lower.1976+0x14>
    20ca:	80 2e       	mov	r8, r16
    20cc:	00 c1       	rjmp	.+512    	; 0x22ce <tbl_lower.1976+0x18>
    20ce:	80 2e       	mov	r8, r16
    20d0:	00 c1       	rjmp	.+512    	; 0x22d2 <tbl_lower.1976+0x1c>
    20d2:	80 2e       	mov	r8, r16
    20d4:	00 c1       	rjmp	.+512    	; 0x22d6 <tbl_lower.1976+0x20>

000020d6 <tbl_upper.1977>:
    20d6:	41 00 42 00 43 00 44 00 45 00 46 00 47 00 48 00     A.B.C.D.E.F.G.H.
    20e6:	49 00 4a 00 4b 00 4c 00 4d 00 4e 00 4f 00 50 00     I.J.K.L.M.N.O.P.
    20f6:	51 00 52 00 53 00 54 00 55 00 56 00 57 00 58 00     Q.R.S.T.U.V.W.X.
    2106:	59 00 5a 00 21 00 e0 ff e1 ff e5 ff e2 ff e3 ff     Y.Z.!...........
    2116:	c0 00 c1 00 c2 00 c3 00 c4 00 c5 00 c6 00 c7 00     ................
    2126:	c8 00 c9 00 ca 00 cb 00 cc 00 cd 00 ce 00 cf 00     ................
    2136:	d0 00 d1 00 d2 00 d3 00 d4 00 d5 00 d6 00 d8 00     ................
    2146:	d9 00 da 00 db 00 dc 00 dd 00 de 00 78 01 00 01     ............x...
    2156:	02 01 04 01 06 01 08 01 0a 01 0c 01 0e 01 10 01     ................
    2166:	12 01 14 01 16 01 18 01 1a 01 1c 01 1e 01 20 01     .............. .
    2176:	22 01 24 01 26 01 28 01 2a 01 2c 01 2e 01 30 01     ".$.&.(.*.,...0.
    2186:	32 01 34 01 36 01 39 01 3b 01 3d 01 3f 01 41 01     2.4.6.9.;.=.?.A.
    2196:	43 01 45 01 47 01 4a 01 4c 01 4e 01 50 01 52 01     C.E.G.J.L.N.P.R.
    21a6:	54 01 56 01 58 01 5a 01 5c 01 5e 01 60 01 62 01     T.V.X.Z.\.^.`.b.
    21b6:	64 01 66 01 68 01 6a 01 6c 01 6e 01 70 01 72 01     d.f.h.j.l.n.p.r.
    21c6:	74 01 76 01 79 01 7b 01 7d 01 91 01 91 03 92 03     t.v.y.{.}.......
    21d6:	93 03 94 03 95 03 96 03 97 03 98 03 99 03 9a 03     ................
    21e6:	9b 03 9c 03 9d 03 9e 03 9f 03 a0 03 a1 03 a3 03     ................
    21f6:	a4 03 a5 03 a6 03 a7 03 a8 03 a9 03 aa 03 10 04     ................
    2206:	11 04 12 04 13 04 14 04 15 04 16 04 17 04 18 04     ................
    2216:	19 04 1a 04 1b 04 1c 04 1d 04 1e 04 1f 04 20 04     .............. .
    2226:	21 04 22 04 23 04 24 04 25 04 26 04 27 04 28 04     !.".#.$.%.&.'.(.
    2236:	29 04 2a 04 2b 04 2c 04 2d 04 2e 04 2f 04 01 04     ).*.+.,.-.../...
    2246:	02 04 03 04 04 04 05 04 06 04 07 04 08 04 09 04     ................
    2256:	0a 04 0b 04 0c 04 0e 04 0f 04 60 21 61 21 62 21     ..........`!a!b!
    2266:	63 21 64 21 65 21 66 21 67 21 68 21 69 21 6a 21     c!d!e!f!g!h!i!j!
    2276:	6b 21 6c 21 6d 21 6e 21 6f 21 21 ff 22 ff 23 ff     k!l!m!n!o!!.".#.
    2286:	24 ff 25 ff 26 ff 27 ff 28 ff 29 ff 2a ff 2b ff     $.%.&.'.(.).*.+.
    2296:	2c ff 2d ff 2e ff 2f ff 30 ff 31 ff 32 ff 33 ff     ,.-.../.0.1.2.3.
    22a6:	34 ff 35 ff 36 ff 37 ff 38 ff 39 ff 3a ff ff ff     4.5.6.7.8.9.:...

000022b6 <tbl_lower.1976>:
    22b6:	61 00 62 00 63 00 64 00 65 00 66 00 67 00 68 00     a.b.c.d.e.f.g.h.
    22c6:	69 00 6a 00 6b 00 6c 00 6d 00 6e 00 6f 00 70 00     i.j.k.l.m.n.o.p.
    22d6:	71 00 72 00 73 00 74 00 75 00 76 00 77 00 78 00     q.r.s.t.u.v.w.x.
    22e6:	79 00 7a 00 a1 00 a2 00 a3 00 a5 00 ac 00 af 00     y.z.............
    22f6:	e0 00 e1 00 e2 00 e3 00 e4 00 e5 00 e6 00 e7 00     ................
    2306:	e8 00 e9 00 ea 00 eb 00 ec 00 ed 00 ee 00 ef 00     ................
    2316:	f0 00 f1 00 f2 00 f3 00 f4 00 f5 00 f6 00 f8 00     ................
    2326:	f9 00 fa 00 fb 00 fc 00 fd 00 fe 00 ff 00 01 01     ................
    2336:	03 01 05 01 07 01 09 01 0b 01 0d 01 0f 01 11 01     ................
    2346:	13 01 15 01 17 01 19 01 1b 01 1d 01 1f 01 21 01     ..............!.
    2356:	23 01 25 01 27 01 29 01 2b 01 2d 01 2f 01 31 01     #.%.'.).+.-./.1.
    2366:	33 01 35 01 37 01 3a 01 3c 01 3e 01 40 01 42 01     3.5.7.:.<.>.@.B.
    2376:	44 01 46 01 48 01 4b 01 4d 01 4f 01 51 01 53 01     D.F.H.K.M.O.Q.S.
    2386:	55 01 57 01 59 01 5b 01 5d 01 5f 01 61 01 63 01     U.W.Y.[.]._.a.c.
    2396:	65 01 67 01 69 01 6b 01 6d 01 6f 01 71 01 73 01     e.g.i.k.m.o.q.s.
    23a6:	75 01 77 01 7a 01 7c 01 7e 01 92 01 b1 03 b2 03     u.w.z.|.~.......
    23b6:	b3 03 b4 03 b5 03 b6 03 b7 03 b8 03 b9 03 ba 03     ................
    23c6:	bb 03 bc 03 bd 03 be 03 bf 03 c0 03 c1 03 c3 03     ................
    23d6:	c4 03 c5 03 c6 03 c7 03 c8 03 c9 03 ca 03 30 04     ..............0.
    23e6:	31 04 32 04 33 04 34 04 35 04 36 04 37 04 38 04     1.2.3.4.5.6.7.8.
    23f6:	39 04 3a 04 3b 04 3c 04 3d 04 3e 04 3f 04 40 04     9.:.;.<.=.>.?.@.
    2406:	41 04 42 04 43 04 44 04 45 04 46 04 47 04 48 04     A.B.C.D.E.F.G.H.
    2416:	49 04 4a 04 4b 04 4c 04 4d 04 4e 04 4f 04 51 04     I.J.K.L.M.N.O.Q.
    2426:	52 04 53 04 54 04 55 04 56 04 57 04 58 04 59 04     R.S.T.U.V.W.X.Y.
    2436:	5a 04 5b 04 5c 04 5e 04 5f 04 70 21 71 21 72 21     Z.[.\.^._.p!q!r!
    2446:	73 21 74 21 75 21 76 21 77 21 78 21 79 21 7a 21     s!t!u!v!w!x!y!z!
    2456:	7b 21 7c 21 7d 21 7e 21 7f 21 41 ff 42 ff 43 ff     {!|!}!~!.!A.B.C.
    2466:	44 ff 45 ff 46 ff 47 ff 48 ff 49 ff 4a ff 4b ff     D.E.F.G.H.I.J.K.
    2476:	4c ff 4d ff 4e ff 4f ff 50 ff 51 ff 52 ff 53 ff     L.M.N.O.P.Q.R.S.
    2486:	54 ff 55 ff 56 ff 57 ff 58 ff 59 ff 5a ff ff ff     T.U.V.W.X.Y.Z...

00002496 <Tbl>:
    2496:	c7 00 fc 00 e9 00 e2 00 e4 00 e0 00 e5 00 e7 00     ................
    24a6:	ea 00 eb 00 e8 00 ef 00 ee 00 ec 00 c4 00 c5 00     ................
    24b6:	c9 00 e6 00 c6 00 f4 00 f6 00 f2 00 fb 00 f9 00     ................
    24c6:	ff 00 d6 00 dc 00 a2 00 a3 00 a5 00 a7 20 92 01     ............. ..
    24d6:	e1 00 ed 00 f3 00 fa 00 f1 00 d1 00 aa 00 ba 00     ................
    24e6:	bf 00 10 23 ac 00 bd 00 bc 00 a1 00 ab 00 bb 00     ...#............
    24f6:	91 25 92 25 93 25 02 25 24 25 61 25 62 25 56 25     .%.%.%.%$%a%b%V%
    2506:	55 25 63 25 51 25 57 25 5d 25 5c 25 5b 25 10 25     U%c%Q%W%]%\%[%.%
    2516:	14 25 34 25 2c 25 1c 25 00 25 3c 25 5e 25 5f 25     .%4%,%.%.%<%^%_%
    2526:	5a 25 54 25 69 25 66 25 60 25 50 25 6c 25 67 25     Z%T%i%f%`%P%l%g%
    2536:	68 25 64 25 65 25 59 25 58 25 52 25 53 25 6b 25     h%d%e%Y%X%R%S%k%
    2546:	6a 25 18 25 0c 25 88 25 84 25 8c 25 90 25 80 25     j%.%.%.%.%.%.%.%
    2556:	b1 03 df 00 93 03 c0 03 a3 03 c3 03 b5 00 c4 03     ................
    2566:	a6 03 98 03 a9 03 b4 03 1e 22 c6 03 b5 03 29 22     ........."....)"
    2576:	61 22 b1 00 65 22 64 22 20 23 21 23 f7 00 48 22     a"..e"d" #!#..H"
    2586:	b0 00 19 22 b7 00 1a 22 7f 20 b2 00 a0 25 a0 00     ..."...". ...%..

00002596 <__ctors_end>:
    2596:	11 24       	eor	r1, r1
    2598:	1f be       	out	0x3f, r1	; 63
    259a:	cf ef       	ldi	r28, 0xFF	; 255
    259c:	d8 e0       	ldi	r29, 0x08	; 8
    259e:	de bf       	out	0x3e, r29	; 62
    25a0:	cd bf       	out	0x3d, r28	; 61

000025a2 <__do_copy_data>:
    25a2:	12 e0       	ldi	r17, 0x02	; 2
    25a4:	a0 e0       	ldi	r26, 0x00	; 0
    25a6:	b1 e0       	ldi	r27, 0x01	; 1
    25a8:	e6 ef       	ldi	r30, 0xF6	; 246
    25aa:	f5 e6       	ldi	r31, 0x65	; 101
    25ac:	02 c0       	rjmp	.+4      	; 0x25b2 <__do_copy_data+0x10>
    25ae:	05 90       	lpm	r0, Z+
    25b0:	0d 92       	st	X+, r0
    25b2:	a8 34       	cpi	r26, 0x48	; 72
    25b4:	b1 07       	cpc	r27, r17
    25b6:	d9 f7       	brne	.-10     	; 0x25ae <__do_copy_data+0xc>

000025b8 <__do_clear_bss>:
    25b8:	25 e0       	ldi	r18, 0x05	; 5
    25ba:	a8 e4       	ldi	r26, 0x48	; 72
    25bc:	b2 e0       	ldi	r27, 0x02	; 2
    25be:	01 c0       	rjmp	.+2      	; 0x25c2 <.do_clear_bss_start>

000025c0 <.do_clear_bss_loop>:
    25c0:	1d 92       	st	X+, r1

000025c2 <.do_clear_bss_start>:
    25c2:	a6 3a       	cpi	r26, 0xA6	; 166
    25c4:	b2 07       	cpc	r27, r18
    25c6:	e1 f7       	brne	.-8      	; 0x25c0 <.do_clear_bss_loop>
    25c8:	0e 94 57 29 	call	0x52ae	; 0x52ae <main>
    25cc:	0c 94 f9 32 	jmp	0x65f2	; 0x65f2 <_exit>

000025d0 <__bad_interrupt>:
    25d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000025d4 <BMI270_check>:
	0xc1, 0x80, 0x2e, 0x00, 0xc1, 0x80, 0x2e, 0x00, 0xc1, 0x80, 0x2e, 0x00, 0xc1, 0x80, 0x2e, 0x00, 0xc1, 0x80, 0x2e,
	0x00, 0xc1, 0x80, 0x2e, 0x00, 0xc1, 0x80, 0x2e, 0x00, 0xc1, 0x80, 0x2e, 0x00, 0xc1, 0x80, 0x2e, 0x00, 0xc1, 0x80,
	0x2e, 0x00, 0xc1
};

void BMI270_check(void){
    25d4:	cf 93       	push	r28
	
	unsigned char BMI_data,bmi270_config_byte;
	
	// read chip ID
	I2C_start();
    25d6:	0e 94 98 2e 	call	0x5d30	; 0x5d30 <I2C_start>
	I2C_MasterTransmitAddress(BMI270_address,0x00);
    25da:	60 e0       	ldi	r22, 0x00	; 0
    25dc:	80 ed       	ldi	r24, 0xD0	; 208
    25de:	0e 94 a4 2e 	call	0x5d48	; 0x5d48 <I2C_MasterTransmitAddress>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    25e2:	8f ec       	ldi	r24, 0xCF	; 207
    25e4:	97 e0       	ldi	r25, 0x07	; 7
    25e6:	01 97       	sbiw	r24, 0x01	; 1
    25e8:	f1 f7       	brne	.-4      	; 0x25e6 <BMI270_check+0x12>
    25ea:	00 c0       	rjmp	.+0      	; 0x25ec <BMI270_check+0x18>
    25ec:	00 00       	nop
	_delay_us(500);
	I2C_start();
    25ee:	0e 94 98 2e 	call	0x5d30	; 0x5d30 <I2C_start>
	BMI_data = I2C_MasterReceiveData(BMI270_address);
    25f2:	80 ed       	ldi	r24, 0xD0	; 208
    25f4:	0e 94 c1 2e 	call	0x5d82	; 0x5d82 <I2C_MasterReceiveData>
    25f8:	c8 2f       	mov	r28, r24
	I2C_stop();
    25fa:	0e 94 a0 2e 	call	0x5d40	; 0x5d40 <I2C_stop>

	//Turn on orange LED if chip ID is correct - I2C com working correctly
	if(BMI_data==0x24){
    25fe:	c4 32       	cpi	r28, 0x24	; 36
    2600:	21 f4       	brne	.+8      	; 0x260a <BMI270_check+0x36>
		//if(IMU_data&(1<<0)){
		PORTD|=1<<PD3;
    2602:	8b b1       	in	r24, 0x0b	; 11
    2604:	88 60       	ori	r24, 0x08	; 8
    2606:	8b b9       	out	0x0b, r24	; 11
    2608:	03 c0       	rjmp	.+6      	; 0x2610 <BMI270_check+0x3c>
	}
	else{
		PORTD&=~(1<<PD3);
    260a:	8b b1       	in	r24, 0x0b	; 11
    260c:	87 7f       	andi	r24, 0xF7	; 247
    260e:	8b b9       	out	0x0b, r24	; 11
	}
	
}
    2610:	cf 91       	pop	r28
    2612:	08 95       	ret

00002614 <BMI270_init>:

void BMI270_init(void){
    2614:	cf 93       	push	r28
    2616:	df 93       	push	r29
	unsigned int ii;

	//_delay_ms(2000);
	
	// BMI270 soft reset
	I2C_MasterTransmitByte(BMI270_address,0x7e,0xb6);
    2618:	46 eb       	ldi	r20, 0xB6	; 182
    261a:	6e e7       	ldi	r22, 0x7E	; 126
    261c:	80 ed       	ldi	r24, 0xD0	; 208
    261e:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <I2C_MasterTransmitByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2622:	8f e3       	ldi	r24, 0x3F	; 63
    2624:	9c e9       	ldi	r25, 0x9C	; 156
    2626:	01 97       	sbiw	r24, 0x01	; 1
    2628:	f1 f7       	brne	.-4      	; 0x2626 <BMI270_init+0x12>
    262a:	00 c0       	rjmp	.+0      	; 0x262c <BMI270_init+0x18>
    262c:	00 00       	nop
	_delay_ms(10);

	BMI270_check();
    262e:	0e 94 ea 12 	call	0x25d4	; 0x25d4 <BMI270_check>
    2632:	9f ef       	ldi	r25, 0xFF	; 255
    2634:	23 ed       	ldi	r18, 0xD3	; 211
    2636:	80 e3       	ldi	r24, 0x30	; 48
    2638:	91 50       	subi	r25, 0x01	; 1
    263a:	20 40       	sbci	r18, 0x00	; 0
    263c:	80 40       	sbci	r24, 0x00	; 0
    263e:	e1 f7       	brne	.-8      	; 0x2638 <BMI270_init+0x24>
    2640:	00 c0       	rjmp	.+0      	; 0x2642 <BMI270_init+0x2e>
    2642:	00 00       	nop

	// Wait 1 second and then off 1 second
	_delay_ms(1000);
	PORTD&=~(1<<PD3);
    2644:	8b b1       	in	r24, 0x0b	; 11
    2646:	87 7f       	andi	r24, 0xF7	; 247
    2648:	8b b9       	out	0x0b, r24	; 11
    264a:	9f ef       	ldi	r25, 0xFF	; 255
    264c:	23 ed       	ldi	r18, 0xD3	; 211
    264e:	80 e3       	ldi	r24, 0x30	; 48
    2650:	91 50       	subi	r25, 0x01	; 1
    2652:	20 40       	sbci	r18, 0x00	; 0
    2654:	80 40       	sbci	r24, 0x00	; 0
    2656:	e1 f7       	brne	.-8      	; 0x2650 <BMI270_init+0x3c>
    2658:	00 c0       	rjmp	.+0      	; 0x265a <BMI270_init+0x46>
    265a:	00 00       	nop
	_delay_ms(1000);
	
	/* BMI270 standard config sequence */
	// write
	I2C_MasterTransmitByte(BMI270_address,0x7c,0x00);
    265c:	40 e0       	ldi	r20, 0x00	; 0
    265e:	6c e7       	ldi	r22, 0x7C	; 124
    2660:	80 ed       	ldi	r24, 0xD0	; 208
    2662:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <I2C_MasterTransmitByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2666:	8f ec       	ldi	r24, 0xCF	; 207
    2668:	97 e0       	ldi	r25, 0x07	; 7
    266a:	01 97       	sbiw	r24, 0x01	; 1
    266c:	f1 f7       	brne	.-4      	; 0x266a <BMI270_init+0x56>
    266e:	00 c0       	rjmp	.+0      	; 0x2670 <BMI270_init+0x5c>
    2670:	00 00       	nop

	_delay_us(500);

	// write
	I2C_MasterTransmitByte(BMI270_address,0x59,0x00);
    2672:	40 e0       	ldi	r20, 0x00	; 0
    2674:	69 e5       	ldi	r22, 0x59	; 89
    2676:	80 ed       	ldi	r24, 0xD0	; 208
    2678:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <I2C_MasterTransmitByte>

	I2C_start();
    267c:	0e 94 98 2e 	call	0x5d30	; 0x5d30 <I2C_start>
	I2C_MasterTransmitAddress(BMI270_address,0x5e);
    2680:	6e e5       	ldi	r22, 0x5E	; 94
    2682:	80 ed       	ldi	r24, 0xD0	; 208
    2684:	0e 94 a4 2e 	call	0x5d48	; 0x5d48 <I2C_MasterTransmitAddress>

	for (ii=0;ii<=8191;ii++){
    2688:	c0 e0       	ldi	r28, 0x00	; 0
    268a:	d0 e0       	ldi	r29, 0x00	; 0
    268c:	0b c0       	rjmp	.+22     	; 0x26a4 <BMI270_init+0x90>

		bmi270_config_byte = pgm_read_byte_near(&bmi270_config_file[ii]);
    268e:	fe 01       	movw	r30, r28
    2690:	ea 52       	subi	r30, 0x2A	; 42
    2692:	ff 4f       	sbci	r31, 0xFF	; 255
    2694:	84 91       	lpm	r24, Z
		I2C_MasterTransmitData(bmi270_config_byte);
    2696:	0e 94 b7 2e 	call	0x5d6e	; 0x5d6e <I2C_MasterTransmitData>
    269a:	9a e6       	ldi	r25, 0x6A	; 106
    269c:	9a 95       	dec	r25
    269e:	f1 f7       	brne	.-4      	; 0x269c <BMI270_init+0x88>
    26a0:	00 c0       	rjmp	.+0      	; 0x26a2 <BMI270_init+0x8e>
	I2C_MasterTransmitByte(BMI270_address,0x59,0x00);

	I2C_start();
	I2C_MasterTransmitAddress(BMI270_address,0x5e);

	for (ii=0;ii<=8191;ii++){
    26a2:	21 96       	adiw	r28, 0x01	; 1
    26a4:	c1 15       	cp	r28, r1
    26a6:	20 e2       	ldi	r18, 0x20	; 32
    26a8:	d2 07       	cpc	r29, r18
    26aa:	88 f3       	brcs	.-30     	; 0x268e <BMI270_init+0x7a>

		_delay_us(20);

	}

	I2C_stop();
    26ac:	0e 94 a0 2e 	call	0x5d40	; 0x5d40 <I2C_stop>
    26b0:	87 e0       	ldi	r24, 0x07	; 7
    26b2:	97 e0       	ldi	r25, 0x07	; 7
    26b4:	01 97       	sbiw	r24, 0x01	; 1
    26b6:	f1 f7       	brne	.-4      	; 0x26b4 <BMI270_init+0xa0>
    26b8:	00 c0       	rjmp	.+0      	; 0x26ba <BMI270_init+0xa6>
    26ba:	00 00       	nop
	//PORTB|=1<<PB0;
	_delay_us(450);
	//// write
	I2C_MasterTransmitByte(BMI270_address,0x59,0x01);
    26bc:	41 e0       	ldi	r20, 0x01	; 1
    26be:	69 e5       	ldi	r22, 0x59	; 89
    26c0:	80 ed       	ldi	r24, 0xD0	; 208
    26c2:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <I2C_MasterTransmitByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    26c6:	9f ef       	ldi	r25, 0xFF	; 255
    26c8:	22 e5       	ldi	r18, 0x52	; 82
    26ca:	87 e0       	ldi	r24, 0x07	; 7
    26cc:	91 50       	subi	r25, 0x01	; 1
    26ce:	20 40       	sbci	r18, 0x00	; 0
    26d0:	80 40       	sbci	r24, 0x00	; 0
    26d2:	e1 f7       	brne	.-8      	; 0x26cc <BMI270_init+0xb8>
    26d4:	00 c0       	rjmp	.+0      	; 0x26d6 <BMI270_init+0xc2>
    26d6:	00 00       	nop
	_delay_ms(150);
	/* End of BMI270 standard config sequence */

	// Chip init check
	
	BMI_data = I2C_MasterReceiveByte(BMI270_address,0x21);
    26d8:	61 e2       	ldi	r22, 0x21	; 33
    26da:	80 ed       	ldi	r24, 0xD0	; 208
    26dc:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
	//Turn on orange LED if chip is initialised
	if((BMI_data&0x01)==0x01){
    26e0:	80 ff       	sbrs	r24, 0
    26e2:	04 c0       	rjmp	.+8      	; 0x26ec <BMI270_init+0xd8>
		//if(IMU_data&(1<<0)){
		PORTD|=1<<PD3;
    26e4:	8b b1       	in	r24, 0x0b	; 11
    26e6:	88 60       	ori	r24, 0x08	; 8
    26e8:	8b b9       	out	0x0b, r24	; 11
    26ea:	03 c0       	rjmp	.+6      	; 0x26f2 <BMI270_init+0xde>
	}
	else{
		PORTD&=~(1<<PD3);
    26ec:	8b b1       	in	r24, 0x0b	; 11
    26ee:	87 7f       	andi	r24, 0xF7	; 247
    26f0:	8b b9       	out	0x0b, r24	; 11
    26f2:	9f ef       	ldi	r25, 0xFF	; 255
    26f4:	23 ed       	ldi	r18, 0xD3	; 211
    26f6:	80 e3       	ldi	r24, 0x30	; 48
    26f8:	91 50       	subi	r25, 0x01	; 1
    26fa:	20 40       	sbci	r18, 0x00	; 0
    26fc:	80 40       	sbci	r24, 0x00	; 0
    26fe:	e1 f7       	brne	.-8      	; 0x26f8 <BMI270_init+0xe4>
    2700:	00 c0       	rjmp	.+0      	; 0x2702 <BMI270_init+0xee>
    2702:	00 00       	nop
	}
	
	// Wait 2 second and then off 1 second
	_delay_ms(1000);
	PORTD&=~(1<<PD3);
    2704:	8b b1       	in	r24, 0x0b	; 11
    2706:	87 7f       	andi	r24, 0xF7	; 247
    2708:	8b b9       	out	0x0b, r24	; 11
    270a:	9f ef       	ldi	r25, 0xFF	; 255
    270c:	23 ed       	ldi	r18, 0xD3	; 211
    270e:	80 e3       	ldi	r24, 0x30	; 48
    2710:	91 50       	subi	r25, 0x01	; 1
    2712:	20 40       	sbci	r18, 0x00	; 0
    2714:	80 40       	sbci	r24, 0x00	; 0
    2716:	e1 f7       	brne	.-8      	; 0x2710 <BMI270_init+0xfc>
    2718:	00 c0       	rjmp	.+0      	; 0x271a <BMI270_init+0x106>
    271a:	00 00       	nop
	_delay_ms(1000);
}
    271c:	df 91       	pop	r29
    271e:	cf 91       	pop	r28
    2720:	08 95       	ret

00002722 <BMI270_config>:
	
void BMI270_config(void){
		
	// write 0xA7 to BMI270 ACC_CONF to set 50Hz ODR
	I2C_MasterTransmitByte(BMI270_address,ACC_CONF_address,ACC_ODR_50Hz);
    2722:	47 ea       	ldi	r20, 0xA7	; 167
    2724:	60 e4       	ldi	r22, 0x40	; 64
    2726:	80 ed       	ldi	r24, 0xD0	; 208
    2728:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <I2C_MasterTransmitByte>

	// write 0x03 to BMI270 ACC_RANGE +/-16g range
	I2C_MasterTransmitByte(BMI270_address,ACC_RANGE_address,ACC_RANGE_16g);
    272c:	43 e0       	ldi	r20, 0x03	; 3
    272e:	61 e4       	ldi	r22, 0x41	; 65
    2730:	80 ed       	ldi	r24, 0xD0	; 208
    2732:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <I2C_MasterTransmitByte>

	// write ??? to BMI270 GYR_RANGE +/-2000dps range
	// Add your code here to implement the settings in the comment above
		
	// write 0x06 to enable accelerometer and gyroscope
	I2C_MasterTransmitByte(BMI270_address,0x7D,0x06);
    2736:	46 e0       	ldi	r20, 0x06	; 6
    2738:	6d e7       	ldi	r22, 0x7D	; 125
    273a:	80 ed       	ldi	r24, 0xD0	; 208
    273c:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <I2C_MasterTransmitByte>

	// Blink orange LED 1 second on/off 0.25s 4 times and the off 1 second to indicate start of next section
		
	PORTD|=1<<PD3;
    2740:	8b b1       	in	r24, 0x0b	; 11
    2742:	88 60       	ori	r24, 0x08	; 8
    2744:	8b b9       	out	0x0b, r24	; 11
    2746:	08 95       	ret

00002748 <ff_convert>:
)
{
	WCHAR c;


	if (chr < 0x80) {	/* ASCII */
    2748:	80 38       	cpi	r24, 0x80	; 128
    274a:	91 05       	cpc	r25, r1
    274c:	50 f1       	brcs	.+84     	; 0x27a2 <ff_convert+0x5a>
		c = chr;

	} else {
		if (dir) {		/* OEMCP to Unicode */
    274e:	67 2b       	or	r22, r23
    2750:	e1 f0       	breq	.+56     	; 0x278a <ff_convert+0x42>
			c = (chr >= 0x100) ? 0 : (WCHAR)pgm_read_word(&Tbl[chr - 0x80]);
    2752:	8f 3f       	cpi	r24, 0xFF	; 255
    2754:	91 05       	cpc	r25, r1
    2756:	09 f0       	breq	.+2      	; 0x275a <ff_convert+0x12>
    2758:	10 f5       	brcc	.+68     	; 0x279e <ff_convert+0x56>
    275a:	fc 01       	movw	r30, r24
    275c:	e0 58       	subi	r30, 0x80	; 128
    275e:	f1 09       	sbc	r31, r1
    2760:	ee 0f       	add	r30, r30
    2762:	ff 1f       	adc	r31, r31
    2764:	ea 56       	subi	r30, 0x6A	; 106
    2766:	fb 4d       	sbci	r31, 0xDB	; 219
    2768:	25 91       	lpm	r18, Z+
    276a:	34 91       	lpm	r19, Z
    276c:	c9 01       	movw	r24, r18
    276e:	08 95       	ret

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
				if (chr == (WCHAR)pgm_read_word(&Tbl[c])) break;
    2770:	f9 01       	movw	r30, r18
    2772:	ee 0f       	add	r30, r30
    2774:	ff 1f       	adc	r31, r31
    2776:	ea 56       	subi	r30, 0x6A	; 106
    2778:	fb 4d       	sbci	r31, 0xDB	; 219
    277a:	45 91       	lpm	r20, Z+
    277c:	54 91       	lpm	r21, Z
    277e:	84 17       	cp	r24, r20
    2780:	95 07       	cpc	r25, r21
    2782:	41 f0       	breq	.+16     	; 0x2794 <ff_convert+0x4c>
	} else {
		if (dir) {		/* OEMCP to Unicode */
			c = (chr >= 0x100) ? 0 : (WCHAR)pgm_read_word(&Tbl[chr - 0x80]);

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
    2784:	2f 5f       	subi	r18, 0xFF	; 255
    2786:	3f 4f       	sbci	r19, 0xFF	; 255
    2788:	02 c0       	rjmp	.+4      	; 0x278e <ff_convert+0x46>
    278a:	20 e0       	ldi	r18, 0x00	; 0
    278c:	30 e0       	ldi	r19, 0x00	; 0
    278e:	20 38       	cpi	r18, 0x80	; 128
    2790:	31 05       	cpc	r19, r1
    2792:	70 f3       	brcs	.-36     	; 0x2770 <ff_convert+0x28>
				if (chr == (WCHAR)pgm_read_word(&Tbl[c])) break;
			}
			c = (c + 0x80) & 0xFF;
    2794:	20 58       	subi	r18, 0x80	; 128
    2796:	3f 4f       	sbci	r19, 0xFF	; 255
    2798:	c9 01       	movw	r24, r18
    279a:	99 27       	eor	r25, r25
    279c:	08 95       	ret
	if (chr < 0x80) {	/* ASCII */
		c = chr;

	} else {
		if (dir) {		/* OEMCP to Unicode */
			c = (chr >= 0x100) ? 0 : (WCHAR)pgm_read_word(&Tbl[chr - 0x80]);
    279e:	80 e0       	ldi	r24, 0x00	; 0
    27a0:	90 e0       	ldi	r25, 0x00	; 0
			c = (c + 0x80) & 0xFF;
		}
	}

	return c;
}
    27a2:	08 95       	ret

000027a4 <ff_wtoupper>:
	static const WCHAR tbl_lower[] PROGMEM = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0xFFFF };
	static const WCHAR tbl_upper[] PROGMEM = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0xFFFF };
	UINT i;


	for (i = 0; chr > pgm_read_word(&tbl_lower[i]); i++) ;
    27a4:	40 e0       	ldi	r20, 0x00	; 0
    27a6:	50 e0       	ldi	r21, 0x00	; 0
    27a8:	02 c0       	rjmp	.+4      	; 0x27ae <ff_wtoupper+0xa>
    27aa:	4f 5f       	subi	r20, 0xFF	; 255
    27ac:	5f 4f       	sbci	r21, 0xFF	; 255
    27ae:	9a 01       	movw	r18, r20
    27b0:	22 0f       	add	r18, r18
    27b2:	33 1f       	adc	r19, r19
    27b4:	2a 54       	subi	r18, 0x4A	; 74
    27b6:	3d 4d       	sbci	r19, 0xDD	; 221
    27b8:	f9 01       	movw	r30, r18
    27ba:	65 91       	lpm	r22, Z+
    27bc:	74 91       	lpm	r23, Z
    27be:	68 17       	cp	r22, r24
    27c0:	79 07       	cpc	r23, r25
    27c2:	98 f3       	brcs	.-26     	; 0x27aa <ff_wtoupper+0x6>
	if (chr == pgm_read_word(&tbl_lower[i])) chr = pgm_read_word(&tbl_upper[i]);
    27c4:	f9 01       	movw	r30, r18
    27c6:	25 91       	lpm	r18, Z+
    27c8:	34 91       	lpm	r19, Z
    27ca:	82 17       	cp	r24, r18
    27cc:	93 07       	cpc	r25, r19
    27ce:	39 f4       	brne	.+14     	; 0x27de <ff_wtoupper+0x3a>
    27d0:	fa 01       	movw	r30, r20
    27d2:	ee 0f       	add	r30, r30
    27d4:	ff 1f       	adc	r31, r31
    27d6:	ea 52       	subi	r30, 0x2A	; 42
    27d8:	ff 4d       	sbci	r31, 0xDF	; 223
    27da:	85 91       	lpm	r24, Z+
    27dc:	94 91       	lpm	r25, Z

	return chr;
}
    27de:	08 95       	ret

000027e0 <mem_cpy>:
		*tp = 0;
		FREE_BUF();
	}

	LEAVE_FF(dj.fs, res);
}
    27e0:	fc 01       	movw	r30, r24
    27e2:	db 01       	movw	r26, r22
    27e4:	06 c0       	rjmp	.+12     	; 0x27f2 <mem_cpy+0x12>
    27e6:	8d 91       	ld	r24, X+
    27e8:	9d 91       	ld	r25, X+
    27ea:	81 93       	st	Z+, r24
    27ec:	91 93       	st	Z+, r25
    27ee:	42 50       	subi	r20, 0x02	; 2
    27f0:	51 09       	sbc	r21, r1
    27f2:	42 30       	cpi	r20, 0x02	; 2
    27f4:	51 05       	cpc	r21, r1
    27f6:	b8 f7       	brcc	.-18     	; 0x27e6 <mem_cpy+0x6>
    27f8:	05 c0       	rjmp	.+10     	; 0x2804 <mem_cpy+0x24>
    27fa:	2c 91       	ld	r18, X
    27fc:	20 83       	st	Z, r18
    27fe:	ac 01       	movw	r20, r24
    2800:	11 96       	adiw	r26, 0x01	; 1
    2802:	31 96       	adiw	r30, 0x01	; 1
    2804:	ca 01       	movw	r24, r20
    2806:	01 97       	sbiw	r24, 0x01	; 1
    2808:	45 2b       	or	r20, r21
    280a:	b9 f7       	brne	.-18     	; 0x27fa <mem_cpy+0x1a>
    280c:	08 95       	ret

0000280e <mem_set>:
    280e:	fc 01       	movw	r30, r24
    2810:	03 c0       	rjmp	.+6      	; 0x2818 <mem_set+0xa>
    2812:	60 83       	st	Z, r22
    2814:	ac 01       	movw	r20, r24
    2816:	31 96       	adiw	r30, 0x01	; 1
    2818:	ca 01       	movw	r24, r20
    281a:	01 97       	sbiw	r24, 0x01	; 1
    281c:	45 2b       	or	r20, r21
    281e:	c9 f7       	brne	.-14     	; 0x2812 <mem_set+0x4>
    2820:	08 95       	ret

00002822 <mem_cmp>:
    2822:	cf 93       	push	r28
    2824:	df 93       	push	r29
    2826:	dc 01       	movw	r26, r24
    2828:	fb 01       	movw	r30, r22
    282a:	80 e0       	ldi	r24, 0x00	; 0
    282c:	90 e0       	ldi	r25, 0x00	; 0
    282e:	02 c0       	rjmp	.+4      	; 0x2834 <mem_cmp+0x12>
    2830:	fb 01       	movw	r30, r22
    2832:	de 01       	movw	r26, r28
    2834:	9a 01       	movw	r18, r20
    2836:	21 50       	subi	r18, 0x01	; 1
    2838:	31 09       	sbc	r19, r1
    283a:	45 2b       	or	r20, r21
    283c:	61 f0       	breq	.+24     	; 0x2856 <mem_cmp+0x34>
    283e:	ed 01       	movw	r28, r26
    2840:	21 96       	adiw	r28, 0x01	; 1
    2842:	8c 91       	ld	r24, X
    2844:	90 e0       	ldi	r25, 0x00	; 0
    2846:	bf 01       	movw	r22, r30
    2848:	6f 5f       	subi	r22, 0xFF	; 255
    284a:	7f 4f       	sbci	r23, 0xFF	; 255
    284c:	40 81       	ld	r20, Z
    284e:	84 1b       	sub	r24, r20
    2850:	91 09       	sbc	r25, r1
    2852:	a9 01       	movw	r20, r18
    2854:	69 f3       	breq	.-38     	; 0x2830 <mem_cmp+0xe>
    2856:	df 91       	pop	r29
    2858:	cf 91       	pop	r28
    285a:	08 95       	ret

0000285c <chk_chr>:
    285c:	fc 01       	movw	r30, r24
    285e:	01 c0       	rjmp	.+2      	; 0x2862 <chk_chr+0x6>
    2860:	31 96       	adiw	r30, 0x01	; 1
    2862:	80 81       	ld	r24, Z
    2864:	88 23       	and	r24, r24
    2866:	29 f0       	breq	.+10     	; 0x2872 <chk_chr+0x16>
    2868:	28 2f       	mov	r18, r24
    286a:	30 e0       	ldi	r19, 0x00	; 0
    286c:	26 17       	cp	r18, r22
    286e:	37 07       	cpc	r19, r23
    2870:	b9 f7       	brne	.-18     	; 0x2860 <chk_chr+0x4>
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	08 95       	ret

00002876 <ld_clust>:
    2876:	0f 93       	push	r16
    2878:	1f 93       	push	r17
    287a:	dc 01       	movw	r26, r24
    287c:	fb 01       	movw	r30, r22
    287e:	62 8d       	ldd	r22, Z+26	; 0x1a
    2880:	73 8d       	ldd	r23, Z+27	; 0x1b
    2882:	80 e0       	ldi	r24, 0x00	; 0
    2884:	90 e0       	ldi	r25, 0x00	; 0
    2886:	2c 91       	ld	r18, X
    2888:	23 30       	cpi	r18, 0x03	; 3
    288a:	59 f4       	brne	.+22     	; 0x28a2 <ld_clust+0x2c>
    288c:	04 89       	ldd	r16, Z+20	; 0x14
    288e:	15 89       	ldd	r17, Z+21	; 0x15
    2890:	20 e0       	ldi	r18, 0x00	; 0
    2892:	30 e0       	ldi	r19, 0x00	; 0
    2894:	98 01       	movw	r18, r16
    2896:	11 27       	eor	r17, r17
    2898:	00 27       	eor	r16, r16
    289a:	60 2b       	or	r22, r16
    289c:	71 2b       	or	r23, r17
    289e:	82 2b       	or	r24, r18
    28a0:	93 2b       	or	r25, r19
    28a2:	1f 91       	pop	r17
    28a4:	0f 91       	pop	r16
    28a6:	08 95       	ret

000028a8 <st_clust>:
    28a8:	fc 01       	movw	r30, r24
    28aa:	53 8f       	std	Z+27, r21	; 0x1b
    28ac:	42 8f       	std	Z+26, r20	; 0x1a
    28ae:	75 8b       	std	Z+21, r23	; 0x15
    28b0:	64 8b       	std	Z+20, r22	; 0x14
    28b2:	08 95       	ret

000028b4 <fit_lfn>:
    28b4:	cf 93       	push	r28
    28b6:	df 93       	push	r29
    28b8:	fb 01       	movw	r30, r22
    28ba:	25 87       	std	Z+13, r18	; 0x0d
    28bc:	2f e0       	ldi	r18, 0x0F	; 15
    28be:	23 87       	std	Z+11, r18	; 0x0b
    28c0:	14 86       	std	Z+12, r1	; 0x0c
    28c2:	13 8e       	std	Z+27, r1	; 0x1b
    28c4:	12 8e       	std	Z+26, r1	; 0x1a
    28c6:	24 2f       	mov	r18, r20
    28c8:	30 e0       	ldi	r19, 0x00	; 0
    28ca:	21 50       	subi	r18, 0x01	; 1
    28cc:	31 09       	sbc	r19, r1
    28ce:	5d e0       	ldi	r21, 0x0D	; 13
    28d0:	52 9f       	mul	r21, r18
    28d2:	e0 01       	movw	r28, r0
    28d4:	53 9f       	mul	r21, r19
    28d6:	d0 0d       	add	r29, r0
    28d8:	11 24       	eor	r1, r1
    28da:	20 e0       	ldi	r18, 0x00	; 0
    28dc:	30 e0       	ldi	r19, 0x00	; 0
    28de:	e0 e0       	ldi	r30, 0x00	; 0
    28e0:	f0 e0       	ldi	r31, 0x00	; 0
    28e2:	2f 3f       	cpi	r18, 0xFF	; 255
    28e4:	5f ef       	ldi	r21, 0xFF	; 255
    28e6:	35 07       	cpc	r19, r21
    28e8:	41 f0       	breq	.+16     	; 0x28fa <fit_lfn+0x46>
    28ea:	de 01       	movw	r26, r28
    28ec:	aa 0f       	add	r26, r26
    28ee:	bb 1f       	adc	r27, r27
    28f0:	a8 0f       	add	r26, r24
    28f2:	b9 1f       	adc	r27, r25
    28f4:	2d 91       	ld	r18, X+
    28f6:	3c 91       	ld	r19, X
    28f8:	21 96       	adiw	r28, 0x01	; 1
    28fa:	df 01       	movw	r26, r30
    28fc:	ab 5a       	subi	r26, 0xAB	; 171
    28fe:	be 4f       	sbci	r27, 0xFE	; 254
    2900:	5c 91       	ld	r21, X
    2902:	db 01       	movw	r26, r22
    2904:	a5 0f       	add	r26, r21
    2906:	b1 1d       	adc	r27, r1
    2908:	2d 93       	st	X+, r18
    290a:	3c 93       	st	X, r19
    290c:	21 15       	cp	r18, r1
    290e:	31 05       	cpc	r19, r1
    2910:	11 f4       	brne	.+4      	; 0x2916 <fit_lfn+0x62>
    2912:	2f ef       	ldi	r18, 0xFF	; 255
    2914:	3f ef       	ldi	r19, 0xFF	; 255
    2916:	31 96       	adiw	r30, 0x01	; 1
    2918:	ed 30       	cpi	r30, 0x0D	; 13
    291a:	f1 05       	cpc	r31, r1
    291c:	10 f3       	brcs	.-60     	; 0x28e2 <fit_lfn+0x2e>
    291e:	2f 3f       	cpi	r18, 0xFF	; 255
    2920:	3f 4f       	sbci	r19, 0xFF	; 255
    2922:	41 f0       	breq	.+16     	; 0x2934 <fit_lfn+0x80>
    2924:	cc 0f       	add	r28, r28
    2926:	dd 1f       	adc	r29, r29
    2928:	c8 0f       	add	r28, r24
    292a:	d9 1f       	adc	r29, r25
    292c:	88 81       	ld	r24, Y
    292e:	99 81       	ldd	r25, Y+1	; 0x01
    2930:	89 2b       	or	r24, r25
    2932:	09 f4       	brne	.+2      	; 0x2936 <fit_lfn+0x82>
    2934:	40 64       	ori	r20, 0x40	; 64
    2936:	fb 01       	movw	r30, r22
    2938:	40 83       	st	Z, r20
    293a:	df 91       	pop	r29
    293c:	cf 91       	pop	r28
    293e:	08 95       	ret

00002940 <gen_numname>:
    2940:	cf 92       	push	r12
    2942:	df 92       	push	r13
    2944:	ef 92       	push	r14
    2946:	ff 92       	push	r15
    2948:	0f 93       	push	r16
    294a:	1f 93       	push	r17
    294c:	cf 93       	push	r28
    294e:	df 93       	push	r29
    2950:	cd b7       	in	r28, 0x3d	; 61
    2952:	de b7       	in	r29, 0x3e	; 62
    2954:	28 97       	sbiw	r28, 0x08	; 8
    2956:	0f b6       	in	r0, 0x3f	; 63
    2958:	f8 94       	cli
    295a:	de bf       	out	0x3e, r29	; 62
    295c:	0f be       	out	0x3f, r0	; 63
    295e:	cd bf       	out	0x3d, r28	; 61
    2960:	8c 01       	movw	r16, r24
    2962:	7a 01       	movw	r14, r20
    2964:	69 01       	movw	r12, r18
    2966:	4b e0       	ldi	r20, 0x0B	; 11
    2968:	50 e0       	ldi	r21, 0x00	; 0
    296a:	0e 94 f0 13 	call	0x27e0	; 0x27e0 <mem_cpy>
    296e:	46 e0       	ldi	r20, 0x06	; 6
    2970:	c4 16       	cp	r12, r20
    2972:	d1 04       	cpc	r13, r1
    2974:	58 f1       	brcs	.+86     	; 0x29cc <gen_numname+0x8c>
    2976:	c6 01       	movw	r24, r12
    2978:	a0 e0       	ldi	r26, 0x00	; 0
    297a:	b0 e0       	ldi	r27, 0x00	; 0
    297c:	20 c0       	rjmp	.+64     	; 0x29be <gen_numname+0x7e>
    297e:	62 e0       	ldi	r22, 0x02	; 2
    2980:	e6 0e       	add	r14, r22
    2982:	f1 1c       	adc	r15, r1
    2984:	40 e0       	ldi	r20, 0x00	; 0
    2986:	50 e0       	ldi	r21, 0x00	; 0
    2988:	17 c0       	rjmp	.+46     	; 0x29b8 <gen_numname+0x78>
    298a:	88 0f       	add	r24, r24
    298c:	99 1f       	adc	r25, r25
    298e:	aa 1f       	adc	r26, r26
    2990:	bb 1f       	adc	r27, r27
    2992:	b9 01       	movw	r22, r18
    2994:	61 70       	andi	r22, 0x01	; 1
    2996:	77 27       	eor	r23, r23
    2998:	86 0f       	add	r24, r22
    299a:	97 1f       	adc	r25, r23
    299c:	a1 1d       	adc	r26, r1
    299e:	b1 1d       	adc	r27, r1
    29a0:	36 95       	lsr	r19
    29a2:	27 95       	ror	r18
    29a4:	a0 ff       	sbrs	r26, 0
    29a6:	06 c0       	rjmp	.+12     	; 0x29b4 <gen_numname+0x74>
    29a8:	e1 e2       	ldi	r30, 0x21	; 33
    29aa:	8e 27       	eor	r24, r30
    29ac:	e0 e1       	ldi	r30, 0x10	; 16
    29ae:	9e 27       	eor	r25, r30
    29b0:	e1 e0       	ldi	r30, 0x01	; 1
    29b2:	ae 27       	eor	r26, r30
    29b4:	4f 5f       	subi	r20, 0xFF	; 255
    29b6:	5f 4f       	sbci	r21, 0xFF	; 255
    29b8:	40 31       	cpi	r20, 0x10	; 16
    29ba:	51 05       	cpc	r21, r1
    29bc:	30 f3       	brcs	.-52     	; 0x298a <gen_numname+0x4a>
    29be:	f7 01       	movw	r30, r14
    29c0:	20 81       	ld	r18, Z
    29c2:	31 81       	ldd	r19, Z+1	; 0x01
    29c4:	21 15       	cp	r18, r1
    29c6:	31 05       	cpc	r19, r1
    29c8:	d1 f6       	brne	.-76     	; 0x297e <gen_numname+0x3e>
    29ca:	6c 01       	movw	r12, r24
    29cc:	87 e0       	ldi	r24, 0x07	; 7
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	01 c0       	rjmp	.+2      	; 0x29d4 <gen_numname+0x94>
    29d2:	c9 01       	movw	r24, r18
    29d4:	2c 2d       	mov	r18, r12
    29d6:	2f 70       	andi	r18, 0x0F	; 15
    29d8:	40 e3       	ldi	r20, 0x30	; 48
    29da:	42 0f       	add	r20, r18
    29dc:	4a 33       	cpi	r20, 0x3A	; 58
    29de:	10 f0       	brcs	.+4      	; 0x29e4 <gen_numname+0xa4>
    29e0:	47 e3       	ldi	r20, 0x37	; 55
    29e2:	42 0f       	add	r20, r18
    29e4:	9c 01       	movw	r18, r24
    29e6:	21 50       	subi	r18, 0x01	; 1
    29e8:	31 09       	sbc	r19, r1
    29ea:	e1 e0       	ldi	r30, 0x01	; 1
    29ec:	f0 e0       	ldi	r31, 0x00	; 0
    29ee:	ec 0f       	add	r30, r28
    29f0:	fd 1f       	adc	r31, r29
    29f2:	e8 0f       	add	r30, r24
    29f4:	f9 1f       	adc	r31, r25
    29f6:	40 83       	st	Z, r20
    29f8:	d6 94       	lsr	r13
    29fa:	c7 94       	ror	r12
    29fc:	d6 94       	lsr	r13
    29fe:	c7 94       	ror	r12
    2a00:	d6 94       	lsr	r13
    2a02:	c7 94       	ror	r12
    2a04:	d6 94       	lsr	r13
    2a06:	c7 94       	ror	r12
    2a08:	c1 14       	cp	r12, r1
    2a0a:	d1 04       	cpc	r13, r1
    2a0c:	11 f7       	brne	.-60     	; 0x29d2 <gen_numname+0x92>
    2a0e:	e1 e0       	ldi	r30, 0x01	; 1
    2a10:	f0 e0       	ldi	r31, 0x00	; 0
    2a12:	ec 0f       	add	r30, r28
    2a14:	fd 1f       	adc	r31, r29
    2a16:	e2 0f       	add	r30, r18
    2a18:	f3 1f       	adc	r31, r19
    2a1a:	8e e7       	ldi	r24, 0x7E	; 126
    2a1c:	80 83       	st	Z, r24
    2a1e:	80 e0       	ldi	r24, 0x00	; 0
    2a20:	90 e0       	ldi	r25, 0x00	; 0
    2a22:	01 c0       	rjmp	.+2      	; 0x2a26 <gen_numname+0xe6>
    2a24:	01 96       	adiw	r24, 0x01	; 1
    2a26:	82 17       	cp	r24, r18
    2a28:	93 07       	cpc	r25, r19
    2a2a:	30 f4       	brcc	.+12     	; 0x2a38 <gen_numname+0xf8>
    2a2c:	f8 01       	movw	r30, r16
    2a2e:	e8 0f       	add	r30, r24
    2a30:	f9 1f       	adc	r31, r25
    2a32:	40 81       	ld	r20, Z
    2a34:	40 32       	cpi	r20, 0x20	; 32
    2a36:	b1 f7       	brne	.-20     	; 0x2a24 <gen_numname+0xe4>
    2a38:	ac 01       	movw	r20, r24
    2a3a:	4f 5f       	subi	r20, 0xFF	; 255
    2a3c:	5f 4f       	sbci	r21, 0xFF	; 255
    2a3e:	d8 01       	movw	r26, r16
    2a40:	a8 0f       	add	r26, r24
    2a42:	b9 1f       	adc	r27, r25
    2a44:	28 30       	cpi	r18, 0x08	; 8
    2a46:	31 05       	cpc	r19, r1
    2a48:	50 f4       	brcc	.+20     	; 0x2a5e <gen_numname+0x11e>
    2a4a:	e1 e0       	ldi	r30, 0x01	; 1
    2a4c:	f0 e0       	ldi	r31, 0x00	; 0
    2a4e:	ec 0f       	add	r30, r28
    2a50:	fd 1f       	adc	r31, r29
    2a52:	e2 0f       	add	r30, r18
    2a54:	f3 1f       	adc	r31, r19
    2a56:	60 81       	ld	r22, Z
    2a58:	2f 5f       	subi	r18, 0xFF	; 255
    2a5a:	3f 4f       	sbci	r19, 0xFF	; 255
    2a5c:	01 c0       	rjmp	.+2      	; 0x2a60 <gen_numname+0x120>
    2a5e:	60 e2       	ldi	r22, 0x20	; 32
    2a60:	6c 93       	st	X, r22
    2a62:	ca 01       	movw	r24, r20
    2a64:	48 30       	cpi	r20, 0x08	; 8
    2a66:	51 05       	cpc	r21, r1
    2a68:	38 f3       	brcs	.-50     	; 0x2a38 <gen_numname+0xf8>
    2a6a:	28 96       	adiw	r28, 0x08	; 8
    2a6c:	0f b6       	in	r0, 0x3f	; 63
    2a6e:	f8 94       	cli
    2a70:	de bf       	out	0x3e, r29	; 62
    2a72:	0f be       	out	0x3f, r0	; 63
    2a74:	cd bf       	out	0x3d, r28	; 61
    2a76:	df 91       	pop	r29
    2a78:	cf 91       	pop	r28
    2a7a:	1f 91       	pop	r17
    2a7c:	0f 91       	pop	r16
    2a7e:	ff 90       	pop	r15
    2a80:	ef 90       	pop	r14
    2a82:	df 90       	pop	r13
    2a84:	cf 90       	pop	r12
    2a86:	08 95       	ret

00002a88 <sum_sfn>:
    2a88:	fc 01       	movw	r30, r24
    2a8a:	2b e0       	ldi	r18, 0x0B	; 11
    2a8c:	30 e0       	ldi	r19, 0x00	; 0
    2a8e:	80 e0       	ldi	r24, 0x00	; 0
    2a90:	80 fb       	bst	r24, 0
    2a92:	87 95       	ror	r24
    2a94:	87 f9       	bld	r24, 7
    2a96:	90 81       	ld	r25, Z
    2a98:	89 0f       	add	r24, r25
    2a9a:	21 50       	subi	r18, 0x01	; 1
    2a9c:	31 09       	sbc	r19, r1
    2a9e:	31 96       	adiw	r30, 0x01	; 1
    2aa0:	21 15       	cp	r18, r1
    2aa2:	31 05       	cpc	r19, r1
    2aa4:	a9 f7       	brne	.-22     	; 0x2a90 <sum_sfn+0x8>
    2aa6:	08 95       	ret

00002aa8 <get_ldnumber>:
    2aa8:	cf 93       	push	r28
    2aaa:	df 93       	push	r29
    2aac:	ec 01       	movw	r28, r24
    2aae:	a8 81       	ld	r26, Y
    2ab0:	b9 81       	ldd	r27, Y+1	; 0x01
    2ab2:	10 97       	sbiw	r26, 0x00	; 0
    2ab4:	29 f4       	brne	.+10     	; 0x2ac0 <get_ldnumber+0x18>
    2ab6:	8f ef       	ldi	r24, 0xFF	; 255
    2ab8:	9f ef       	ldi	r25, 0xFF	; 255
    2aba:	2a c0       	rjmp	.+84     	; 0x2b10 <get_ldnumber+0x68>
    2abc:	31 96       	adiw	r30, 0x01	; 1
    2abe:	01 c0       	rjmp	.+2      	; 0x2ac2 <get_ldnumber+0x1a>
    2ac0:	fd 01       	movw	r30, r26
    2ac2:	90 81       	ld	r25, Z
    2ac4:	90 32       	cpi	r25, 0x20	; 32
    2ac6:	10 f0       	brcs	.+4      	; 0x2acc <get_ldnumber+0x24>
    2ac8:	9a 33       	cpi	r25, 0x3A	; 58
    2aca:	c1 f7       	brne	.-16     	; 0x2abc <get_ldnumber+0x14>
    2acc:	9a 33       	cpi	r25, 0x3A	; 58
    2ace:	a1 f4       	brne	.+40     	; 0x2af8 <get_ldnumber+0x50>
    2ad0:	ad 01       	movw	r20, r26
    2ad2:	4f 5f       	subi	r20, 0xFF	; 255
    2ad4:	5f 4f       	sbci	r21, 0xFF	; 255
    2ad6:	2c 91       	ld	r18, X
    2ad8:	30 e0       	ldi	r19, 0x00	; 0
    2ada:	c9 01       	movw	r24, r18
    2adc:	c0 97       	sbiw	r24, 0x30	; 48
    2ade:	8a 30       	cpi	r24, 0x0A	; 10
    2ae0:	91 05       	cpc	r25, r1
    2ae2:	70 f4       	brcc	.+28     	; 0x2b00 <get_ldnumber+0x58>
    2ae4:	e4 17       	cp	r30, r20
    2ae6:	f5 07       	cpc	r31, r21
    2ae8:	71 f4       	brne	.+28     	; 0x2b06 <get_ldnumber+0x5e>
    2aea:	82 30       	cpi	r24, 0x02	; 2
    2aec:	91 05       	cpc	r25, r1
    2aee:	70 f4       	brcc	.+28     	; 0x2b0c <get_ldnumber+0x64>
    2af0:	31 96       	adiw	r30, 0x01	; 1
    2af2:	f9 83       	std	Y+1, r31	; 0x01
    2af4:	e8 83       	st	Y, r30
    2af6:	0c c0       	rjmp	.+24     	; 0x2b10 <get_ldnumber+0x68>
    2af8:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <CurrVol>
    2afc:	90 e0       	ldi	r25, 0x00	; 0
    2afe:	08 c0       	rjmp	.+16     	; 0x2b10 <get_ldnumber+0x68>
    2b00:	8f ef       	ldi	r24, 0xFF	; 255
    2b02:	9f ef       	ldi	r25, 0xFF	; 255
    2b04:	05 c0       	rjmp	.+10     	; 0x2b10 <get_ldnumber+0x68>
    2b06:	8f ef       	ldi	r24, 0xFF	; 255
    2b08:	9f ef       	ldi	r25, 0xFF	; 255
    2b0a:	02 c0       	rjmp	.+4      	; 0x2b10 <get_ldnumber+0x68>
    2b0c:	8f ef       	ldi	r24, 0xFF	; 255
    2b0e:	9f ef       	ldi	r25, 0xFF	; 255
    2b10:	df 91       	pop	r29
    2b12:	cf 91       	pop	r28
    2b14:	08 95       	ret

00002b16 <sync_window>:
    2b16:	8f 92       	push	r8
    2b18:	9f 92       	push	r9
    2b1a:	af 92       	push	r10
    2b1c:	bf 92       	push	r11
    2b1e:	cf 92       	push	r12
    2b20:	df 92       	push	r13
    2b22:	ef 92       	push	r14
    2b24:	ff 92       	push	r15
    2b26:	0f 93       	push	r16
    2b28:	1f 93       	push	r17
    2b2a:	cf 93       	push	r28
    2b2c:	df 93       	push	r29
    2b2e:	fc 01       	movw	r30, r24
    2b30:	24 81       	ldd	r18, Z+4	; 0x04
    2b32:	22 23       	and	r18, r18
    2b34:	09 f4       	brne	.+2      	; 0x2b38 <sync_window+0x22>
    2b36:	43 c0       	rjmp	.+134    	; 0x2bbe <sync_window+0xa8>
    2b38:	ec 01       	movw	r28, r24
    2b3a:	c6 a4       	ldd	r12, Z+46	; 0x2e
    2b3c:	d7 a4       	ldd	r13, Z+47	; 0x2f
    2b3e:	e0 a8       	ldd	r14, Z+48	; 0x30
    2b40:	f1 a8       	ldd	r15, Z+49	; 0x31
    2b42:	5c 01       	movw	r10, r24
    2b44:	f2 e3       	ldi	r31, 0x32	; 50
    2b46:	af 0e       	add	r10, r31
    2b48:	b1 1c       	adc	r11, r1
    2b4a:	01 e0       	ldi	r16, 0x01	; 1
    2b4c:	10 e0       	ldi	r17, 0x00	; 0
    2b4e:	a7 01       	movw	r20, r14
    2b50:	96 01       	movw	r18, r12
    2b52:	b5 01       	movw	r22, r10
    2b54:	89 81       	ldd	r24, Y+1	; 0x01
    2b56:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <disk_write>
    2b5a:	81 11       	cpse	r24, r1
    2b5c:	32 c0       	rjmp	.+100    	; 0x2bc2 <sync_window+0xac>
    2b5e:	1c 82       	std	Y+4, r1	; 0x04
    2b60:	8a a1       	ldd	r24, Y+34	; 0x22
    2b62:	9b a1       	ldd	r25, Y+35	; 0x23
    2b64:	ac a1       	ldd	r26, Y+36	; 0x24
    2b66:	bd a1       	ldd	r27, Y+37	; 0x25
    2b68:	b7 01       	movw	r22, r14
    2b6a:	a6 01       	movw	r20, r12
    2b6c:	48 1b       	sub	r20, r24
    2b6e:	59 0b       	sbc	r21, r25
    2b70:	6a 0b       	sbc	r22, r26
    2b72:	7b 0b       	sbc	r23, r27
    2b74:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2b76:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2b78:	ac 8d       	ldd	r26, Y+28	; 0x1c
    2b7a:	bd 8d       	ldd	r27, Y+29	; 0x1d
    2b7c:	48 17       	cp	r20, r24
    2b7e:	59 07       	cpc	r21, r25
    2b80:	6a 07       	cpc	r22, r26
    2b82:	7b 07       	cpc	r23, r27
    2b84:	00 f5       	brcc	.+64     	; 0x2bc6 <sync_window+0xb0>
    2b86:	8b 80       	ldd	r8, Y+3	; 0x03
    2b88:	91 2c       	mov	r9, r1
    2b8a:	13 c0       	rjmp	.+38     	; 0x2bb2 <sync_window+0x9c>
    2b8c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2b8e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2b90:	ac 8d       	ldd	r26, Y+28	; 0x1c
    2b92:	bd 8d       	ldd	r27, Y+29	; 0x1d
    2b94:	c8 0e       	add	r12, r24
    2b96:	d9 1e       	adc	r13, r25
    2b98:	ea 1e       	adc	r14, r26
    2b9a:	fb 1e       	adc	r15, r27
    2b9c:	01 e0       	ldi	r16, 0x01	; 1
    2b9e:	10 e0       	ldi	r17, 0x00	; 0
    2ba0:	a7 01       	movw	r20, r14
    2ba2:	96 01       	movw	r18, r12
    2ba4:	b5 01       	movw	r22, r10
    2ba6:	89 81       	ldd	r24, Y+1	; 0x01
    2ba8:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <disk_write>
    2bac:	81 e0       	ldi	r24, 0x01	; 1
    2bae:	88 1a       	sub	r8, r24
    2bb0:	91 08       	sbc	r9, r1
    2bb2:	e2 e0       	ldi	r30, 0x02	; 2
    2bb4:	8e 16       	cp	r8, r30
    2bb6:	91 04       	cpc	r9, r1
    2bb8:	48 f7       	brcc	.-46     	; 0x2b8c <sync_window+0x76>
    2bba:	80 e0       	ldi	r24, 0x00	; 0
    2bbc:	05 c0       	rjmp	.+10     	; 0x2bc8 <sync_window+0xb2>
    2bbe:	80 e0       	ldi	r24, 0x00	; 0
    2bc0:	03 c0       	rjmp	.+6      	; 0x2bc8 <sync_window+0xb2>
    2bc2:	81 e0       	ldi	r24, 0x01	; 1
    2bc4:	01 c0       	rjmp	.+2      	; 0x2bc8 <sync_window+0xb2>
    2bc6:	80 e0       	ldi	r24, 0x00	; 0
    2bc8:	df 91       	pop	r29
    2bca:	cf 91       	pop	r28
    2bcc:	1f 91       	pop	r17
    2bce:	0f 91       	pop	r16
    2bd0:	ff 90       	pop	r15
    2bd2:	ef 90       	pop	r14
    2bd4:	df 90       	pop	r13
    2bd6:	cf 90       	pop	r12
    2bd8:	bf 90       	pop	r11
    2bda:	af 90       	pop	r10
    2bdc:	9f 90       	pop	r9
    2bde:	8f 90       	pop	r8
    2be0:	08 95       	ret

00002be2 <move_window>:
    2be2:	8f 92       	push	r8
    2be4:	9f 92       	push	r9
    2be6:	af 92       	push	r10
    2be8:	bf 92       	push	r11
    2bea:	ff 92       	push	r15
    2bec:	0f 93       	push	r16
    2bee:	1f 93       	push	r17
    2bf0:	cf 93       	push	r28
    2bf2:	df 93       	push	r29
    2bf4:	ec 01       	movw	r28, r24
    2bf6:	4a 01       	movw	r8, r20
    2bf8:	5b 01       	movw	r10, r22
    2bfa:	8e a5       	ldd	r24, Y+46	; 0x2e
    2bfc:	9f a5       	ldd	r25, Y+47	; 0x2f
    2bfe:	a8 a9       	ldd	r26, Y+48	; 0x30
    2c00:	b9 a9       	ldd	r27, Y+49	; 0x31
    2c02:	84 17       	cp	r24, r20
    2c04:	95 07       	cpc	r25, r21
    2c06:	a6 07       	cpc	r26, r22
    2c08:	b7 07       	cpc	r27, r23
    2c0a:	e9 f0       	breq	.+58     	; 0x2c46 <move_window+0x64>
    2c0c:	ce 01       	movw	r24, r28
    2c0e:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <sync_window>
    2c12:	f8 2e       	mov	r15, r24
    2c14:	81 11       	cpse	r24, r1
    2c16:	18 c0       	rjmp	.+48     	; 0x2c48 <move_window+0x66>
    2c18:	01 e0       	ldi	r16, 0x01	; 1
    2c1a:	10 e0       	ldi	r17, 0x00	; 0
    2c1c:	a5 01       	movw	r20, r10
    2c1e:	94 01       	movw	r18, r8
    2c20:	be 01       	movw	r22, r28
    2c22:	6e 5c       	subi	r22, 0xCE	; 206
    2c24:	7f 4f       	sbci	r23, 0xFF	; 255
    2c26:	89 81       	ldd	r24, Y+1	; 0x01
    2c28:	0e 94 05 2c 	call	0x580a	; 0x580a <disk_read>
    2c2c:	88 23       	and	r24, r24
    2c2e:	31 f0       	breq	.+12     	; 0x2c3c <move_window+0x5a>
    2c30:	ff 24       	eor	r15, r15
    2c32:	f3 94       	inc	r15
    2c34:	88 24       	eor	r8, r8
    2c36:	8a 94       	dec	r8
    2c38:	98 2c       	mov	r9, r8
    2c3a:	54 01       	movw	r10, r8
    2c3c:	8e a6       	std	Y+46, r8	; 0x2e
    2c3e:	9f a6       	std	Y+47, r9	; 0x2f
    2c40:	a8 aa       	std	Y+48, r10	; 0x30
    2c42:	b9 aa       	std	Y+49, r11	; 0x31
    2c44:	01 c0       	rjmp	.+2      	; 0x2c48 <move_window+0x66>
    2c46:	f1 2c       	mov	r15, r1
    2c48:	8f 2d       	mov	r24, r15
    2c4a:	df 91       	pop	r29
    2c4c:	cf 91       	pop	r28
    2c4e:	1f 91       	pop	r17
    2c50:	0f 91       	pop	r16
    2c52:	ff 90       	pop	r15
    2c54:	bf 90       	pop	r11
    2c56:	af 90       	pop	r10
    2c58:	9f 90       	pop	r9
    2c5a:	8f 90       	pop	r8
    2c5c:	08 95       	ret

00002c5e <check_fs>:
    2c5e:	cf 93       	push	r28
    2c60:	df 93       	push	r29
    2c62:	ec 01       	movw	r28, r24
    2c64:	1c 82       	std	Y+4, r1	; 0x04
    2c66:	8f ef       	ldi	r24, 0xFF	; 255
    2c68:	9f ef       	ldi	r25, 0xFF	; 255
    2c6a:	dc 01       	movw	r26, r24
    2c6c:	8e a7       	std	Y+46, r24	; 0x2e
    2c6e:	9f a7       	std	Y+47, r25	; 0x2f
    2c70:	a8 ab       	std	Y+48, r26	; 0x30
    2c72:	b9 ab       	std	Y+49, r27	; 0x31
    2c74:	ce 01       	movw	r24, r28
    2c76:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    2c7a:	81 11       	cpse	r24, r1
    2c7c:	22 c0       	rjmp	.+68     	; 0x2cc2 <check_fs+0x64>
    2c7e:	fe 01       	movw	r30, r28
    2c80:	e0 5d       	subi	r30, 0xD0	; 208
    2c82:	fd 4f       	sbci	r31, 0xFD	; 253
    2c84:	80 81       	ld	r24, Z
    2c86:	91 81       	ldd	r25, Z+1	; 0x01
    2c88:	85 35       	cpi	r24, 0x55	; 85
    2c8a:	9a 4a       	sbci	r25, 0xAA	; 170
    2c8c:	e1 f4       	brne	.+56     	; 0x2cc6 <check_fs+0x68>
    2c8e:	e8 5c       	subi	r30, 0xC8	; 200
    2c90:	f1 40       	sbci	r31, 0x01	; 1
    2c92:	80 81       	ld	r24, Z
    2c94:	91 81       	ldd	r25, Z+1	; 0x01
    2c96:	a2 81       	ldd	r26, Z+2	; 0x02
    2c98:	b3 81       	ldd	r27, Z+3	; 0x03
    2c9a:	bb 27       	eor	r27, r27
    2c9c:	86 34       	cpi	r24, 0x46	; 70
    2c9e:	91 44       	sbci	r25, 0x41	; 65
    2ca0:	a4 45       	sbci	r26, 0x54	; 84
    2ca2:	b1 05       	cpc	r27, r1
    2ca4:	91 f0       	breq	.+36     	; 0x2cca <check_fs+0x6c>
    2ca6:	cc 57       	subi	r28, 0x7C	; 124
    2ca8:	df 4f       	sbci	r29, 0xFF	; 255
    2caa:	88 81       	ld	r24, Y
    2cac:	99 81       	ldd	r25, Y+1	; 0x01
    2cae:	aa 81       	ldd	r26, Y+2	; 0x02
    2cb0:	bb 81       	ldd	r27, Y+3	; 0x03
    2cb2:	bb 27       	eor	r27, r27
    2cb4:	86 34       	cpi	r24, 0x46	; 70
    2cb6:	91 44       	sbci	r25, 0x41	; 65
    2cb8:	a4 45       	sbci	r26, 0x54	; 84
    2cba:	b1 05       	cpc	r27, r1
    2cbc:	41 f4       	brne	.+16     	; 0x2cce <check_fs+0x70>
    2cbe:	80 e0       	ldi	r24, 0x00	; 0
    2cc0:	07 c0       	rjmp	.+14     	; 0x2cd0 <check_fs+0x72>
    2cc2:	83 e0       	ldi	r24, 0x03	; 3
    2cc4:	05 c0       	rjmp	.+10     	; 0x2cd0 <check_fs+0x72>
    2cc6:	82 e0       	ldi	r24, 0x02	; 2
    2cc8:	03 c0       	rjmp	.+6      	; 0x2cd0 <check_fs+0x72>
    2cca:	80 e0       	ldi	r24, 0x00	; 0
    2ccc:	01 c0       	rjmp	.+2      	; 0x2cd0 <check_fs+0x72>
    2cce:	81 e0       	ldi	r24, 0x01	; 1
    2cd0:	df 91       	pop	r29
    2cd2:	cf 91       	pop	r28
    2cd4:	08 95       	ret

00002cd6 <validate>:
    2cd6:	00 97       	sbiw	r24, 0x00	; 0
    2cd8:	c9 f0       	breq	.+50     	; 0x2d0c <validate+0x36>
    2cda:	dc 01       	movw	r26, r24
    2cdc:	ed 91       	ld	r30, X+
    2cde:	fc 91       	ld	r31, X
    2ce0:	11 97       	sbiw	r26, 0x01	; 1
    2ce2:	30 97       	sbiw	r30, 0x00	; 0
    2ce4:	a9 f0       	breq	.+42     	; 0x2d10 <validate+0x3a>
    2ce6:	20 81       	ld	r18, Z
    2ce8:	22 23       	and	r18, r18
    2cea:	a1 f0       	breq	.+40     	; 0x2d14 <validate+0x3e>
    2cec:	26 81       	ldd	r18, Z+6	; 0x06
    2cee:	37 81       	ldd	r19, Z+7	; 0x07
    2cf0:	12 96       	adiw	r26, 0x02	; 2
    2cf2:	8d 91       	ld	r24, X+
    2cf4:	9c 91       	ld	r25, X
    2cf6:	13 97       	sbiw	r26, 0x03	; 3
    2cf8:	28 17       	cp	r18, r24
    2cfa:	39 07       	cpc	r19, r25
    2cfc:	69 f4       	brne	.+26     	; 0x2d18 <validate+0x42>
    2cfe:	81 81       	ldd	r24, Z+1	; 0x01
    2d00:	0e 94 fe 2b 	call	0x57fc	; 0x57fc <disk_status>
    2d04:	80 ff       	sbrs	r24, 0
    2d06:	0a c0       	rjmp	.+20     	; 0x2d1c <validate+0x46>
    2d08:	83 e0       	ldi	r24, 0x03	; 3
    2d0a:	08 95       	ret
    2d0c:	89 e0       	ldi	r24, 0x09	; 9
    2d0e:	08 95       	ret
    2d10:	89 e0       	ldi	r24, 0x09	; 9
    2d12:	08 95       	ret
    2d14:	89 e0       	ldi	r24, 0x09	; 9
    2d16:	08 95       	ret
    2d18:	89 e0       	ldi	r24, 0x09	; 9
    2d1a:	08 95       	ret
    2d1c:	80 e0       	ldi	r24, 0x00	; 0
    2d1e:	08 95       	ret

00002d20 <find_volume>:
    2d20:	2f 92       	push	r2
    2d22:	3f 92       	push	r3
    2d24:	4f 92       	push	r4
    2d26:	5f 92       	push	r5
    2d28:	6f 92       	push	r6
    2d2a:	7f 92       	push	r7
    2d2c:	8f 92       	push	r8
    2d2e:	9f 92       	push	r9
    2d30:	af 92       	push	r10
    2d32:	bf 92       	push	r11
    2d34:	cf 92       	push	r12
    2d36:	df 92       	push	r13
    2d38:	ef 92       	push	r14
    2d3a:	ff 92       	push	r15
    2d3c:	0f 93       	push	r16
    2d3e:	1f 93       	push	r17
    2d40:	cf 93       	push	r28
    2d42:	df 93       	push	r29
    2d44:	cd b7       	in	r28, 0x3d	; 61
    2d46:	de b7       	in	r29, 0x3e	; 62
    2d48:	6d 97       	sbiw	r28, 0x1d	; 29
    2d4a:	0f b6       	in	r0, 0x3f	; 63
    2d4c:	f8 94       	cli
    2d4e:	de bf       	out	0x3e, r29	; 62
    2d50:	0f be       	out	0x3f, r0	; 63
    2d52:	cd bf       	out	0x3d, r28	; 61
    2d54:	6c 01       	movw	r12, r24
    2d56:	cb 01       	movw	r24, r22
    2d58:	b4 2e       	mov	r11, r20
    2d5a:	f6 01       	movw	r30, r12
    2d5c:	11 82       	std	Z+1, r1	; 0x01
    2d5e:	10 82       	st	Z, r1
    2d60:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <get_ldnumber>
    2d64:	7c 01       	movw	r14, r24
    2d66:	99 23       	and	r25, r25
    2d68:	0c f4       	brge	.+2      	; 0x2d6c <find_volume+0x4c>
    2d6a:	3a c2       	rjmp	.+1140   	; 0x31e0 <find_volume+0x4c0>
    2d6c:	fc 01       	movw	r30, r24
    2d6e:	ee 0f       	add	r30, r30
    2d70:	ff 1f       	adc	r31, r31
    2d72:	e3 5b       	subi	r30, 0xB3	; 179
    2d74:	fc 4f       	sbci	r31, 0xFC	; 252
    2d76:	00 81       	ld	r16, Z
    2d78:	11 81       	ldd	r17, Z+1	; 0x01
    2d7a:	01 15       	cp	r16, r1
    2d7c:	11 05       	cpc	r17, r1
    2d7e:	09 f4       	brne	.+2      	; 0x2d82 <find_volume+0x62>
    2d80:	31 c2       	rjmp	.+1122   	; 0x31e4 <find_volume+0x4c4>
    2d82:	f6 01       	movw	r30, r12
    2d84:	11 83       	std	Z+1, r17	; 0x01
    2d86:	00 83       	st	Z, r16
    2d88:	f8 01       	movw	r30, r16
    2d8a:	80 81       	ld	r24, Z
    2d8c:	88 23       	and	r24, r24
    2d8e:	61 f0       	breq	.+24     	; 0x2da8 <find_volume+0x88>
    2d90:	81 81       	ldd	r24, Z+1	; 0x01
    2d92:	0e 94 fe 2b 	call	0x57fc	; 0x57fc <disk_status>
    2d96:	80 fd       	sbrc	r24, 0
    2d98:	07 c0       	rjmp	.+14     	; 0x2da8 <find_volume+0x88>
    2d9a:	bb 20       	and	r11, r11
    2d9c:	09 f4       	brne	.+2      	; 0x2da0 <find_volume+0x80>
    2d9e:	24 c2       	rjmp	.+1096   	; 0x31e8 <find_volume+0x4c8>
    2da0:	82 fd       	sbrc	r24, 2
    2da2:	24 c2       	rjmp	.+1096   	; 0x31ec <find_volume+0x4cc>
    2da4:	80 e0       	ldi	r24, 0x00	; 0
    2da6:	41 c2       	rjmp	.+1154   	; 0x322a <find_volume+0x50a>
    2da8:	f8 01       	movw	r30, r16
    2daa:	10 82       	st	Z, r1
    2dac:	e1 82       	std	Z+1, r14	; 0x01
    2dae:	8e 2d       	mov	r24, r14
    2db0:	0e 94 2e 2b 	call	0x565c	; 0x565c <disk_initialize>
    2db4:	80 fd       	sbrc	r24, 0
    2db6:	1c c2       	rjmp	.+1080   	; 0x31f0 <find_volume+0x4d0>
    2db8:	bb 20       	and	r11, r11
    2dba:	11 f0       	breq	.+4      	; 0x2dc0 <find_volume+0xa0>
    2dbc:	82 fd       	sbrc	r24, 2
    2dbe:	1a c2       	rjmp	.+1076   	; 0x31f4 <find_volume+0x4d4>
    2dc0:	40 e0       	ldi	r20, 0x00	; 0
    2dc2:	50 e0       	ldi	r21, 0x00	; 0
    2dc4:	ba 01       	movw	r22, r20
    2dc6:	c8 01       	movw	r24, r16
    2dc8:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <check_fs>
    2dcc:	81 30       	cpi	r24, 0x01	; 1
    2dce:	79 f1       	breq	.+94     	; 0x2e2e <find_volume+0x10e>
    2dd0:	c1 2c       	mov	r12, r1
    2dd2:	d1 2c       	mov	r13, r1
    2dd4:	76 01       	movw	r14, r12
    2dd6:	56 c0       	rjmp	.+172    	; 0x2e84 <find_volume+0x164>
    2dd8:	f9 01       	movw	r30, r18
    2dda:	e2 95       	swap	r30
    2ddc:	f2 95       	swap	r31
    2dde:	f0 7f       	andi	r31, 0xF0	; 240
    2de0:	fe 27       	eor	r31, r30
    2de2:	e0 7f       	andi	r30, 0xF0	; 240
    2de4:	fe 27       	eor	r31, r30
    2de6:	e2 54       	subi	r30, 0x42	; 66
    2de8:	fe 4f       	sbci	r31, 0xFE	; 254
    2dea:	c8 01       	movw	r24, r16
    2dec:	c2 96       	adiw	r24, 0x32	; 50
    2dee:	e8 0f       	add	r30, r24
    2df0:	f9 1f       	adc	r31, r25
    2df2:	84 81       	ldd	r24, Z+4	; 0x04
    2df4:	88 23       	and	r24, r24
    2df6:	29 f0       	breq	.+10     	; 0x2e02 <find_volume+0xe2>
    2df8:	80 85       	ldd	r24, Z+8	; 0x08
    2dfa:	91 85       	ldd	r25, Z+9	; 0x09
    2dfc:	a2 85       	ldd	r26, Z+10	; 0x0a
    2dfe:	b3 85       	ldd	r27, Z+11	; 0x0b
    2e00:	03 c0       	rjmp	.+6      	; 0x2e08 <find_volume+0xe8>
    2e02:	80 e0       	ldi	r24, 0x00	; 0
    2e04:	90 e0       	ldi	r25, 0x00	; 0
    2e06:	dc 01       	movw	r26, r24
    2e08:	f9 01       	movw	r30, r18
    2e0a:	ee 0f       	add	r30, r30
    2e0c:	ff 1f       	adc	r31, r31
    2e0e:	ee 0f       	add	r30, r30
    2e10:	ff 1f       	adc	r31, r31
    2e12:	88 24       	eor	r8, r8
    2e14:	83 94       	inc	r8
    2e16:	91 2c       	mov	r9, r1
    2e18:	8c 0e       	add	r8, r28
    2e1a:	9d 1e       	adc	r9, r29
    2e1c:	e8 0d       	add	r30, r8
    2e1e:	f9 1d       	adc	r31, r9
    2e20:	80 83       	st	Z, r24
    2e22:	91 83       	std	Z+1, r25	; 0x01
    2e24:	a2 83       	std	Z+2, r26	; 0x02
    2e26:	b3 83       	std	Z+3, r27	; 0x03
    2e28:	2f 5f       	subi	r18, 0xFF	; 255
    2e2a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e2c:	02 c0       	rjmp	.+4      	; 0x2e32 <find_volume+0x112>
    2e2e:	20 e0       	ldi	r18, 0x00	; 0
    2e30:	30 e0       	ldi	r19, 0x00	; 0
    2e32:	24 30       	cpi	r18, 0x04	; 4
    2e34:	31 05       	cpc	r19, r1
    2e36:	80 f2       	brcs	.-96     	; 0x2dd8 <find_volume+0xb8>
    2e38:	a1 2c       	mov	r10, r1
    2e3a:	b1 2c       	mov	r11, r1
    2e3c:	f5 01       	movw	r30, r10
    2e3e:	ee 0f       	add	r30, r30
    2e40:	ff 1f       	adc	r31, r31
    2e42:	ee 0f       	add	r30, r30
    2e44:	ff 1f       	adc	r31, r31
    2e46:	21 e0       	ldi	r18, 0x01	; 1
    2e48:	30 e0       	ldi	r19, 0x00	; 0
    2e4a:	2c 0f       	add	r18, r28
    2e4c:	3d 1f       	adc	r19, r29
    2e4e:	e2 0f       	add	r30, r18
    2e50:	f3 1f       	adc	r31, r19
    2e52:	c0 80       	ld	r12, Z
    2e54:	d1 80       	ldd	r13, Z+1	; 0x01
    2e56:	e2 80       	ldd	r14, Z+2	; 0x02
    2e58:	f3 80       	ldd	r15, Z+3	; 0x03
    2e5a:	c1 14       	cp	r12, r1
    2e5c:	d1 04       	cpc	r13, r1
    2e5e:	e1 04       	cpc	r14, r1
    2e60:	f1 04       	cpc	r15, r1
    2e62:	31 f0       	breq	.+12     	; 0x2e70 <find_volume+0x150>
    2e64:	b7 01       	movw	r22, r14
    2e66:	a6 01       	movw	r20, r12
    2e68:	c8 01       	movw	r24, r16
    2e6a:	0e 94 2f 16 	call	0x2c5e	; 0x2c5e <check_fs>
    2e6e:	01 c0       	rjmp	.+2      	; 0x2e72 <find_volume+0x152>
    2e70:	82 e0       	ldi	r24, 0x02	; 2
    2e72:	88 23       	and	r24, r24
    2e74:	39 f0       	breq	.+14     	; 0x2e84 <find_volume+0x164>
    2e76:	3f ef       	ldi	r19, 0xFF	; 255
    2e78:	a3 1a       	sub	r10, r19
    2e7a:	b3 0a       	sbc	r11, r19
    2e7c:	44 e0       	ldi	r20, 0x04	; 4
    2e7e:	a4 16       	cp	r10, r20
    2e80:	b1 04       	cpc	r11, r1
    2e82:	e0 f2       	brcs	.-72     	; 0x2e3c <find_volume+0x11c>
    2e84:	83 30       	cpi	r24, 0x03	; 3
    2e86:	09 f4       	brne	.+2      	; 0x2e8a <find_volume+0x16a>
    2e88:	b7 c1       	rjmp	.+878    	; 0x31f8 <find_volume+0x4d8>
    2e8a:	81 11       	cpse	r24, r1
    2e8c:	b7 c1       	rjmp	.+878    	; 0x31fc <find_volume+0x4dc>
    2e8e:	f8 01       	movw	r30, r16
    2e90:	85 ad       	ldd	r24, Z+61	; 0x3d
    2e92:	96 ad       	ldd	r25, Z+62	; 0x3e
    2e94:	81 15       	cp	r24, r1
    2e96:	92 40       	sbci	r25, 0x02	; 2
    2e98:	09 f0       	breq	.+2      	; 0x2e9c <find_volume+0x17c>
    2e9a:	b2 c1       	rjmp	.+868    	; 0x3200 <find_volume+0x4e0>
    2e9c:	f8 01       	movw	r30, r16
    2e9e:	e8 5b       	subi	r30, 0xB8	; 184
    2ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea2:	40 80       	ld	r4, Z
    2ea4:	51 80       	ldd	r5, Z+1	; 0x01
    2ea6:	61 2c       	mov	r6, r1
    2ea8:	71 2c       	mov	r7, r1
    2eaa:	41 14       	cp	r4, r1
    2eac:	51 04       	cpc	r5, r1
    2eae:	61 04       	cpc	r6, r1
    2eb0:	71 04       	cpc	r7, r1
    2eb2:	29 f4       	brne	.+10     	; 0x2ebe <find_volume+0x19e>
    2eb4:	3e 96       	adiw	r30, 0x0e	; 14
    2eb6:	40 80       	ld	r4, Z
    2eb8:	51 80       	ldd	r5, Z+1	; 0x01
    2eba:	62 80       	ldd	r6, Z+2	; 0x02
    2ebc:	73 80       	ldd	r7, Z+3	; 0x03
    2ebe:	f8 01       	movw	r30, r16
    2ec0:	42 8e       	std	Z+26, r4	; 0x1a
    2ec2:	53 8e       	std	Z+27, r5	; 0x1b
    2ec4:	64 8e       	std	Z+28, r6	; 0x1c
    2ec6:	75 8e       	std	Z+29, r7	; 0x1d
    2ec8:	ee 5b       	subi	r30, 0xBE	; 190
    2eca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ecc:	a0 81       	ld	r26, Z
    2ece:	f8 01       	movw	r30, r16
    2ed0:	a3 83       	std	Z+3, r26	; 0x03
    2ed2:	8f ef       	ldi	r24, 0xFF	; 255
    2ed4:	8a 0f       	add	r24, r26
    2ed6:	82 30       	cpi	r24, 0x02	; 2
    2ed8:	08 f0       	brcs	.+2      	; 0x2edc <find_volume+0x1bc>
    2eda:	94 c1       	rjmp	.+808    	; 0x3204 <find_volume+0x4e4>
    2edc:	b0 e0       	ldi	r27, 0x00	; 0
    2ede:	a3 01       	movw	r20, r6
    2ee0:	92 01       	movw	r18, r4
    2ee2:	0e 94 04 30 	call	0x6008	; 0x6008 <__muluhisi3>
    2ee6:	6e 8b       	std	Y+22, r22	; 0x16
    2ee8:	7f 8b       	std	Y+23, r23	; 0x17
    2eea:	88 8f       	std	Y+24, r24	; 0x18
    2eec:	99 8f       	std	Y+25, r25	; 0x19
    2eee:	27 ad       	ldd	r18, Z+63	; 0x3f
    2ef0:	22 83       	std	Z+2, r18	; 0x02
    2ef2:	22 23       	and	r18, r18
    2ef4:	09 f4       	brne	.+2      	; 0x2ef8 <find_volume+0x1d8>
    2ef6:	88 c1       	rjmp	.+784    	; 0x3208 <find_volume+0x4e8>
    2ef8:	42 2f       	mov	r20, r18
    2efa:	50 e0       	ldi	r21, 0x00	; 0
    2efc:	ca 01       	movw	r24, r20
    2efe:	01 97       	sbiw	r24, 0x01	; 1
    2f00:	84 23       	and	r24, r20
    2f02:	95 23       	and	r25, r21
    2f04:	89 2b       	or	r24, r25
    2f06:	09 f0       	breq	.+2      	; 0x2f0a <find_volume+0x1ea>
    2f08:	81 c1       	rjmp	.+770    	; 0x320c <find_volume+0x4ec>
    2f0a:	ed 5b       	subi	r30, 0xBD	; 189
    2f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0e:	20 80       	ld	r2, Z
    2f10:	31 80       	ldd	r3, Z+1	; 0x01
    2f12:	f8 01       	movw	r30, r16
    2f14:	31 86       	std	Z+9, r3	; 0x09
    2f16:	20 86       	std	Z+8, r2	; 0x08
    2f18:	c1 01       	movw	r24, r2
    2f1a:	8f 70       	andi	r24, 0x0F	; 15
    2f1c:	99 27       	eor	r25, r25
    2f1e:	89 2b       	or	r24, r25
    2f20:	09 f0       	breq	.+2      	; 0x2f24 <find_volume+0x204>
    2f22:	76 c1       	rjmp	.+748    	; 0x3210 <find_volume+0x4f0>
    2f24:	eb 5b       	subi	r30, 0xBB	; 187
    2f26:	ff 4f       	sbci	r31, 0xFF	; 255
    2f28:	60 81       	ld	r22, Z
    2f2a:	71 81       	ldd	r23, Z+1	; 0x01
    2f2c:	cb 01       	movw	r24, r22
    2f2e:	a0 e0       	ldi	r26, 0x00	; 0
    2f30:	b0 e0       	ldi	r27, 0x00	; 0
    2f32:	00 97       	sbiw	r24, 0x00	; 0
    2f34:	a1 05       	cpc	r26, r1
    2f36:	b1 05       	cpc	r27, r1
    2f38:	29 f4       	brne	.+10     	; 0x2f44 <find_volume+0x224>
    2f3a:	3d 96       	adiw	r30, 0x0d	; 13
    2f3c:	80 81       	ld	r24, Z
    2f3e:	91 81       	ldd	r25, Z+1	; 0x01
    2f40:	a2 81       	ldd	r26, Z+2	; 0x02
    2f42:	b3 81       	ldd	r27, Z+3	; 0x03
    2f44:	f8 01       	movw	r30, r16
    2f46:	e0 5c       	subi	r30, 0xC0	; 192
    2f48:	ff 4f       	sbci	r31, 0xFF	; 255
    2f4a:	40 81       	ld	r20, Z
    2f4c:	51 81       	ldd	r21, Z+1	; 0x01
    2f4e:	41 15       	cp	r20, r1
    2f50:	51 05       	cpc	r21, r1
    2f52:	09 f4       	brne	.+2      	; 0x2f56 <find_volume+0x236>
    2f54:	5f c1       	rjmp	.+702    	; 0x3214 <find_volume+0x4f4>
    2f56:	4a 01       	movw	r8, r20
    2f58:	a1 2c       	mov	r10, r1
    2f5a:	b1 2c       	mov	r11, r1
    2f5c:	8a 8e       	std	Y+26, r8	; 0x1a
    2f5e:	9b 8e       	std	Y+27, r9	; 0x1b
    2f60:	ac 8e       	std	Y+28, r10	; 0x1c
    2f62:	bd 8e       	std	Y+29, r11	; 0x1d
    2f64:	8e 88       	ldd	r8, Y+22	; 0x16
    2f66:	9f 88       	ldd	r9, Y+23	; 0x17
    2f68:	a8 8c       	ldd	r10, Y+24	; 0x18
    2f6a:	b9 8c       	ldd	r11, Y+25	; 0x19
    2f6c:	4a 8d       	ldd	r20, Y+26	; 0x1a
    2f6e:	5b 8d       	ldd	r21, Y+27	; 0x1b
    2f70:	6c 8d       	ldd	r22, Y+28	; 0x1c
    2f72:	7d 8d       	ldd	r23, Y+29	; 0x1d
    2f74:	84 0e       	add	r8, r20
    2f76:	95 1e       	adc	r9, r21
    2f78:	a6 1e       	adc	r10, r22
    2f7a:	b7 1e       	adc	r11, r23
    2f7c:	f1 01       	movw	r30, r2
    2f7e:	f2 95       	swap	r31
    2f80:	e2 95       	swap	r30
    2f82:	ef 70       	andi	r30, 0x0F	; 15
    2f84:	ef 27       	eor	r30, r31
    2f86:	ff 70       	andi	r31, 0x0F	; 15
    2f88:	ef 27       	eor	r30, r31
    2f8a:	b5 01       	movw	r22, r10
    2f8c:	a4 01       	movw	r20, r8
    2f8e:	4e 0f       	add	r20, r30
    2f90:	5f 1f       	adc	r21, r31
    2f92:	61 1d       	adc	r22, r1
    2f94:	71 1d       	adc	r23, r1
    2f96:	4a 8b       	std	Y+18, r20	; 0x12
    2f98:	5b 8b       	std	Y+19, r21	; 0x13
    2f9a:	6c 8b       	std	Y+20, r22	; 0x14
    2f9c:	7d 8b       	std	Y+21, r23	; 0x15
    2f9e:	84 17       	cp	r24, r20
    2fa0:	95 07       	cpc	r25, r21
    2fa2:	a6 07       	cpc	r26, r22
    2fa4:	b7 07       	cpc	r27, r23
    2fa6:	08 f4       	brcc	.+2      	; 0x2faa <find_volume+0x28a>
    2fa8:	37 c1       	rjmp	.+622    	; 0x3218 <find_volume+0x4f8>
    2faa:	bc 01       	movw	r22, r24
    2fac:	cd 01       	movw	r24, r26
    2fae:	8a 88       	ldd	r8, Y+18	; 0x12
    2fb0:	9b 88       	ldd	r9, Y+19	; 0x13
    2fb2:	ac 88       	ldd	r10, Y+20	; 0x14
    2fb4:	bd 88       	ldd	r11, Y+21	; 0x15
    2fb6:	68 19       	sub	r22, r8
    2fb8:	79 09       	sbc	r23, r9
    2fba:	8a 09       	sbc	r24, r10
    2fbc:	9b 09       	sbc	r25, r11
    2fbe:	30 e0       	ldi	r19, 0x00	; 0
    2fc0:	40 e0       	ldi	r20, 0x00	; 0
    2fc2:	50 e0       	ldi	r21, 0x00	; 0
    2fc4:	0e 94 cd 2f 	call	0x5f9a	; 0x5f9a <__udivmodsi4>
    2fc8:	da 01       	movw	r26, r20
    2fca:	c9 01       	movw	r24, r18
    2fcc:	21 15       	cp	r18, r1
    2fce:	31 05       	cpc	r19, r1
    2fd0:	41 05       	cpc	r20, r1
    2fd2:	51 05       	cpc	r21, r1
    2fd4:	09 f4       	brne	.+2      	; 0x2fd8 <find_volume+0x2b8>
    2fd6:	22 c1       	rjmp	.+580    	; 0x321c <find_volume+0x4fc>
    2fd8:	26 3f       	cpi	r18, 0xF6	; 246
    2fda:	6f e0       	ldi	r22, 0x0F	; 15
    2fdc:	36 07       	cpc	r19, r22
    2fde:	41 05       	cpc	r20, r1
    2fe0:	51 05       	cpc	r21, r1
    2fe2:	18 f4       	brcc	.+6      	; 0x2fea <find_volume+0x2ca>
    2fe4:	71 e0       	ldi	r23, 0x01	; 1
    2fe6:	79 8b       	std	Y+17, r23	; 0x11
    2fe8:	02 c0       	rjmp	.+4      	; 0x2fee <find_volume+0x2ce>
    2fea:	e2 e0       	ldi	r30, 0x02	; 2
    2fec:	e9 8b       	std	Y+17, r30	; 0x11
    2fee:	86 3f       	cpi	r24, 0xF6	; 246
    2ff0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ff2:	a1 05       	cpc	r26, r1
    2ff4:	b1 05       	cpc	r27, r1
    2ff6:	10 f0       	brcs	.+4      	; 0x2ffc <find_volume+0x2dc>
    2ff8:	63 e0       	ldi	r22, 0x03	; 3
    2ffa:	69 8b       	std	Y+17, r22	; 0x11
    2ffc:	49 01       	movw	r8, r18
    2ffe:	5a 01       	movw	r10, r20
    3000:	72 e0       	ldi	r23, 0x02	; 2
    3002:	87 0e       	add	r8, r23
    3004:	91 1c       	adc	r9, r1
    3006:	a1 1c       	adc	r10, r1
    3008:	b1 1c       	adc	r11, r1
    300a:	f8 01       	movw	r30, r16
    300c:	86 8a       	std	Z+22, r8	; 0x16
    300e:	97 8a       	std	Z+23, r9	; 0x17
    3010:	a0 8e       	std	Z+24, r10	; 0x18
    3012:	b1 8e       	std	Z+25, r11	; 0x19
    3014:	c6 8e       	std	Z+30, r12	; 0x1e
    3016:	d7 8e       	std	Z+31, r13	; 0x1f
    3018:	e0 a2       	std	Z+32, r14	; 0x20
    301a:	f1 a2       	std	Z+33, r15	; 0x21
    301c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    301e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3020:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3022:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3024:	8c 0d       	add	r24, r12
    3026:	9d 1d       	adc	r25, r13
    3028:	ae 1d       	adc	r26, r14
    302a:	bf 1d       	adc	r27, r15
    302c:	82 a3       	std	Z+34, r24	; 0x22
    302e:	93 a3       	std	Z+35, r25	; 0x23
    3030:	a4 a3       	std	Z+36, r26	; 0x24
    3032:	b5 a3       	std	Z+37, r27	; 0x25
    3034:	4a 89       	ldd	r20, Y+18	; 0x12
    3036:	5b 89       	ldd	r21, Y+19	; 0x13
    3038:	6c 89       	ldd	r22, Y+20	; 0x14
    303a:	7d 89       	ldd	r23, Y+21	; 0x15
    303c:	4c 0d       	add	r20, r12
    303e:	5d 1d       	adc	r21, r13
    3040:	6e 1d       	adc	r22, r14
    3042:	7f 1d       	adc	r23, r15
    3044:	42 a7       	std	Z+42, r20	; 0x2a
    3046:	53 a7       	std	Z+43, r21	; 0x2b
    3048:	64 a7       	std	Z+44, r22	; 0x2c
    304a:	75 a7       	std	Z+45, r23	; 0x2d
    304c:	f9 89       	ldd	r31, Y+17	; 0x11
    304e:	f3 30       	cpi	r31, 0x03	; 3
    3050:	c1 f4       	brne	.+48     	; 0x3082 <find_volume+0x362>
    3052:	23 28       	or	r2, r3
    3054:	09 f0       	breq	.+2      	; 0x3058 <find_volume+0x338>
    3056:	e4 c0       	rjmp	.+456    	; 0x3220 <find_volume+0x500>
    3058:	f8 01       	movw	r30, r16
    305a:	e2 5a       	subi	r30, 0xA2	; 162
    305c:	ff 4f       	sbci	r31, 0xFF	; 255
    305e:	80 81       	ld	r24, Z
    3060:	91 81       	ldd	r25, Z+1	; 0x01
    3062:	a2 81       	ldd	r26, Z+2	; 0x02
    3064:	b3 81       	ldd	r27, Z+3	; 0x03
    3066:	f8 01       	movw	r30, r16
    3068:	86 a3       	std	Z+38, r24	; 0x26
    306a:	97 a3       	std	Z+39, r25	; 0x27
    306c:	a0 a7       	std	Z+40, r26	; 0x28
    306e:	b1 a7       	std	Z+41, r27	; 0x29
    3070:	88 0c       	add	r8, r8
    3072:	99 1c       	adc	r9, r9
    3074:	aa 1c       	adc	r10, r10
    3076:	bb 1c       	adc	r11, r11
    3078:	88 0c       	add	r8, r8
    307a:	99 1c       	adc	r9, r9
    307c:	aa 1c       	adc	r10, r10
    307e:	bb 1c       	adc	r11, r11
    3080:	2d c0       	rjmp	.+90     	; 0x30dc <find_volume+0x3bc>
    3082:	23 28       	or	r2, r3
    3084:	09 f4       	brne	.+2      	; 0x3088 <find_volume+0x368>
    3086:	ce c0       	rjmp	.+412    	; 0x3224 <find_volume+0x504>
    3088:	2e 89       	ldd	r18, Y+22	; 0x16
    308a:	3f 89       	ldd	r19, Y+23	; 0x17
    308c:	48 8d       	ldd	r20, Y+24	; 0x18
    308e:	59 8d       	ldd	r21, Y+25	; 0x19
    3090:	82 0f       	add	r24, r18
    3092:	93 1f       	adc	r25, r19
    3094:	a4 1f       	adc	r26, r20
    3096:	b5 1f       	adc	r27, r21
    3098:	f8 01       	movw	r30, r16
    309a:	86 a3       	std	Z+38, r24	; 0x26
    309c:	97 a3       	std	Z+39, r25	; 0x27
    309e:	a0 a7       	std	Z+40, r26	; 0x28
    30a0:	b1 a7       	std	Z+41, r27	; 0x29
    30a2:	f9 89       	ldd	r31, Y+17	; 0x11
    30a4:	f2 30       	cpi	r31, 0x02	; 2
    30a6:	29 f4       	brne	.+10     	; 0x30b2 <find_volume+0x392>
    30a8:	88 0c       	add	r8, r8
    30aa:	99 1c       	adc	r9, r9
    30ac:	aa 1c       	adc	r10, r10
    30ae:	bb 1c       	adc	r11, r11
    30b0:	15 c0       	rjmp	.+42     	; 0x30dc <find_volume+0x3bc>
    30b2:	a3 e0       	ldi	r26, 0x03	; 3
    30b4:	b0 e0       	ldi	r27, 0x00	; 0
    30b6:	a5 01       	movw	r20, r10
    30b8:	94 01       	movw	r18, r8
    30ba:	0e 94 04 30 	call	0x6008	; 0x6008 <__muluhisi3>
    30be:	dc 01       	movw	r26, r24
    30c0:	cb 01       	movw	r24, r22
    30c2:	b6 95       	lsr	r27
    30c4:	a7 95       	ror	r26
    30c6:	97 95       	ror	r25
    30c8:	87 95       	ror	r24
    30ca:	21 e0       	ldi	r18, 0x01	; 1
    30cc:	82 22       	and	r8, r18
    30ce:	99 24       	eor	r9, r9
    30d0:	aa 24       	eor	r10, r10
    30d2:	bb 24       	eor	r11, r11
    30d4:	88 0e       	add	r8, r24
    30d6:	99 1e       	adc	r9, r25
    30d8:	aa 1e       	adc	r10, r26
    30da:	bb 1e       	adc	r11, r27
    30dc:	3f ef       	ldi	r19, 0xFF	; 255
    30de:	83 0e       	add	r8, r19
    30e0:	31 e0       	ldi	r19, 0x01	; 1
    30e2:	93 1e       	adc	r9, r19
    30e4:	a1 1c       	adc	r10, r1
    30e6:	b1 1c       	adc	r11, r1
    30e8:	07 2e       	mov	r0, r23
    30ea:	79 e0       	ldi	r23, 0x09	; 9
    30ec:	b6 94       	lsr	r11
    30ee:	a7 94       	ror	r10
    30f0:	97 94       	ror	r9
    30f2:	87 94       	ror	r8
    30f4:	7a 95       	dec	r23
    30f6:	d1 f7       	brne	.-12     	; 0x30ec <find_volume+0x3cc>
    30f8:	70 2d       	mov	r23, r0
    30fa:	48 14       	cp	r4, r8
    30fc:	59 04       	cpc	r5, r9
    30fe:	6a 04       	cpc	r6, r10
    3100:	7b 04       	cpc	r7, r11
    3102:	08 f4       	brcc	.+2      	; 0x3106 <find_volume+0x3e6>
    3104:	91 c0       	rjmp	.+290    	; 0x3228 <find_volume+0x508>
    3106:	8f ef       	ldi	r24, 0xFF	; 255
    3108:	9f ef       	ldi	r25, 0xFF	; 255
    310a:	dc 01       	movw	r26, r24
    310c:	f8 01       	movw	r30, r16
    310e:	86 87       	std	Z+14, r24	; 0x0e
    3110:	97 87       	std	Z+15, r25	; 0x0f
    3112:	a0 8b       	std	Z+16, r26	; 0x10
    3114:	b1 8b       	std	Z+17, r27	; 0x11
    3116:	82 87       	std	Z+10, r24	; 0x0a
    3118:	93 87       	std	Z+11, r25	; 0x0b
    311a:	a4 87       	std	Z+12, r26	; 0x0c
    311c:	b5 87       	std	Z+13, r27	; 0x0d
    311e:	80 e8       	ldi	r24, 0x80	; 128
    3120:	85 83       	std	Z+5, r24	; 0x05
    3122:	f9 89       	ldd	r31, Y+17	; 0x11
    3124:	f3 30       	cpi	r31, 0x03	; 3
    3126:	09 f0       	breq	.+2      	; 0x312a <find_volume+0x40a>
    3128:	47 c0       	rjmp	.+142    	; 0x31b8 <find_volume+0x498>
    312a:	f8 01       	movw	r30, r16
    312c:	ee 59       	subi	r30, 0x9E	; 158
    312e:	ff 4f       	sbci	r31, 0xFF	; 255
    3130:	80 81       	ld	r24, Z
    3132:	91 81       	ldd	r25, Z+1	; 0x01
    3134:	01 97       	sbiw	r24, 0x01	; 1
    3136:	09 f0       	breq	.+2      	; 0x313a <find_volume+0x41a>
    3138:	3f c0       	rjmp	.+126    	; 0x31b8 <find_volume+0x498>
    313a:	b7 01       	movw	r22, r14
    313c:	a6 01       	movw	r20, r12
    313e:	4f 5f       	subi	r20, 0xFF	; 255
    3140:	5f 4f       	sbci	r21, 0xFF	; 255
    3142:	6f 4f       	sbci	r22, 0xFF	; 255
    3144:	7f 4f       	sbci	r23, 0xFF	; 255
    3146:	c8 01       	movw	r24, r16
    3148:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    314c:	81 11       	cpse	r24, r1
    314e:	34 c0       	rjmp	.+104    	; 0x31b8 <find_volume+0x498>
    3150:	f8 01       	movw	r30, r16
    3152:	15 82       	std	Z+5, r1	; 0x05
    3154:	e0 5d       	subi	r30, 0xD0	; 208
    3156:	fd 4f       	sbci	r31, 0xFD	; 253
    3158:	80 81       	ld	r24, Z
    315a:	91 81       	ldd	r25, Z+1	; 0x01
    315c:	85 35       	cpi	r24, 0x55	; 85
    315e:	9a 4a       	sbci	r25, 0xAA	; 170
    3160:	59 f5       	brne	.+86     	; 0x31b8 <find_volume+0x498>
    3162:	f8 01       	movw	r30, r16
    3164:	82 a9       	ldd	r24, Z+50	; 0x32
    3166:	93 a9       	ldd	r25, Z+51	; 0x33
    3168:	a4 a9       	ldd	r26, Z+52	; 0x34
    316a:	b5 a9       	ldd	r27, Z+53	; 0x35
    316c:	82 35       	cpi	r24, 0x52	; 82
    316e:	92 45       	sbci	r25, 0x52	; 82
    3170:	a1 46       	sbci	r26, 0x61	; 97
    3172:	b1 44       	sbci	r27, 0x41	; 65
    3174:	09 f5       	brne	.+66     	; 0x31b8 <find_volume+0x498>
    3176:	f8 01       	movw	r30, r16
    3178:	ea 5e       	subi	r30, 0xEA	; 234
    317a:	fd 4f       	sbci	r31, 0xFD	; 253
    317c:	80 81       	ld	r24, Z
    317e:	91 81       	ldd	r25, Z+1	; 0x01
    3180:	a2 81       	ldd	r26, Z+2	; 0x02
    3182:	b3 81       	ldd	r27, Z+3	; 0x03
    3184:	82 37       	cpi	r24, 0x72	; 114
    3186:	92 47       	sbci	r25, 0x72	; 114
    3188:	a1 44       	sbci	r26, 0x41	; 65
    318a:	b1 46       	sbci	r27, 0x61	; 97
    318c:	a9 f4       	brne	.+42     	; 0x31b8 <find_volume+0x498>
    318e:	34 96       	adiw	r30, 0x04	; 4
    3190:	80 81       	ld	r24, Z
    3192:	91 81       	ldd	r25, Z+1	; 0x01
    3194:	a2 81       	ldd	r26, Z+2	; 0x02
    3196:	b3 81       	ldd	r27, Z+3	; 0x03
    3198:	f8 01       	movw	r30, r16
    319a:	86 87       	std	Z+14, r24	; 0x0e
    319c:	97 87       	std	Z+15, r25	; 0x0f
    319e:	a0 8b       	std	Z+16, r26	; 0x10
    31a0:	b1 8b       	std	Z+17, r27	; 0x11
    31a2:	e2 5e       	subi	r30, 0xE2	; 226
    31a4:	fd 4f       	sbci	r31, 0xFD	; 253
    31a6:	80 81       	ld	r24, Z
    31a8:	91 81       	ldd	r25, Z+1	; 0x01
    31aa:	a2 81       	ldd	r26, Z+2	; 0x02
    31ac:	b3 81       	ldd	r27, Z+3	; 0x03
    31ae:	f8 01       	movw	r30, r16
    31b0:	82 87       	std	Z+10, r24	; 0x0a
    31b2:	93 87       	std	Z+11, r25	; 0x0b
    31b4:	a4 87       	std	Z+12, r26	; 0x0c
    31b6:	b5 87       	std	Z+13, r27	; 0x0d
    31b8:	89 88       	ldd	r8, Y+17	; 0x11
    31ba:	f8 01       	movw	r30, r16
    31bc:	80 82       	st	Z, r8
    31be:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <Fsid>
    31c2:	90 91 4c 03 	lds	r25, 0x034C	; 0x80034c <Fsid+0x1>
    31c6:	01 96       	adiw	r24, 0x01	; 1
    31c8:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <Fsid+0x1>
    31cc:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <Fsid>
    31d0:	97 83       	std	Z+7, r25	; 0x07
    31d2:	86 83       	std	Z+6, r24	; 0x06
    31d4:	12 8a       	std	Z+18, r1	; 0x12
    31d6:	13 8a       	std	Z+19, r1	; 0x13
    31d8:	14 8a       	std	Z+20, r1	; 0x14
    31da:	15 8a       	std	Z+21, r1	; 0x15
    31dc:	80 e0       	ldi	r24, 0x00	; 0
    31de:	25 c0       	rjmp	.+74     	; 0x322a <find_volume+0x50a>
    31e0:	8b e0       	ldi	r24, 0x0B	; 11
    31e2:	23 c0       	rjmp	.+70     	; 0x322a <find_volume+0x50a>
    31e4:	8c e0       	ldi	r24, 0x0C	; 12
    31e6:	21 c0       	rjmp	.+66     	; 0x322a <find_volume+0x50a>
    31e8:	80 e0       	ldi	r24, 0x00	; 0
    31ea:	1f c0       	rjmp	.+62     	; 0x322a <find_volume+0x50a>
    31ec:	8a e0       	ldi	r24, 0x0A	; 10
    31ee:	1d c0       	rjmp	.+58     	; 0x322a <find_volume+0x50a>
    31f0:	83 e0       	ldi	r24, 0x03	; 3
    31f2:	1b c0       	rjmp	.+54     	; 0x322a <find_volume+0x50a>
    31f4:	8a e0       	ldi	r24, 0x0A	; 10
    31f6:	19 c0       	rjmp	.+50     	; 0x322a <find_volume+0x50a>
    31f8:	81 e0       	ldi	r24, 0x01	; 1
    31fa:	17 c0       	rjmp	.+46     	; 0x322a <find_volume+0x50a>
    31fc:	8d e0       	ldi	r24, 0x0D	; 13
    31fe:	15 c0       	rjmp	.+42     	; 0x322a <find_volume+0x50a>
    3200:	8d e0       	ldi	r24, 0x0D	; 13
    3202:	13 c0       	rjmp	.+38     	; 0x322a <find_volume+0x50a>
    3204:	8d e0       	ldi	r24, 0x0D	; 13
    3206:	11 c0       	rjmp	.+34     	; 0x322a <find_volume+0x50a>
    3208:	8d e0       	ldi	r24, 0x0D	; 13
    320a:	0f c0       	rjmp	.+30     	; 0x322a <find_volume+0x50a>
    320c:	8d e0       	ldi	r24, 0x0D	; 13
    320e:	0d c0       	rjmp	.+26     	; 0x322a <find_volume+0x50a>
    3210:	8d e0       	ldi	r24, 0x0D	; 13
    3212:	0b c0       	rjmp	.+22     	; 0x322a <find_volume+0x50a>
    3214:	8d e0       	ldi	r24, 0x0D	; 13
    3216:	09 c0       	rjmp	.+18     	; 0x322a <find_volume+0x50a>
    3218:	8d e0       	ldi	r24, 0x0D	; 13
    321a:	07 c0       	rjmp	.+14     	; 0x322a <find_volume+0x50a>
    321c:	8d e0       	ldi	r24, 0x0D	; 13
    321e:	05 c0       	rjmp	.+10     	; 0x322a <find_volume+0x50a>
    3220:	8d e0       	ldi	r24, 0x0D	; 13
    3222:	03 c0       	rjmp	.+6      	; 0x322a <find_volume+0x50a>
    3224:	8d e0       	ldi	r24, 0x0D	; 13
    3226:	01 c0       	rjmp	.+2      	; 0x322a <find_volume+0x50a>
    3228:	8d e0       	ldi	r24, 0x0D	; 13
    322a:	6d 96       	adiw	r28, 0x1d	; 29
    322c:	0f b6       	in	r0, 0x3f	; 63
    322e:	f8 94       	cli
    3230:	de bf       	out	0x3e, r29	; 62
    3232:	0f be       	out	0x3f, r0	; 63
    3234:	cd bf       	out	0x3d, r28	; 61
    3236:	df 91       	pop	r29
    3238:	cf 91       	pop	r28
    323a:	1f 91       	pop	r17
    323c:	0f 91       	pop	r16
    323e:	ff 90       	pop	r15
    3240:	ef 90       	pop	r14
    3242:	df 90       	pop	r13
    3244:	cf 90       	pop	r12
    3246:	bf 90       	pop	r11
    3248:	af 90       	pop	r10
    324a:	9f 90       	pop	r9
    324c:	8f 90       	pop	r8
    324e:	7f 90       	pop	r7
    3250:	6f 90       	pop	r6
    3252:	5f 90       	pop	r5
    3254:	4f 90       	pop	r4
    3256:	3f 90       	pop	r3
    3258:	2f 90       	pop	r2
    325a:	08 95       	ret

0000325c <create_name>:
    325c:	4f 92       	push	r4
    325e:	5f 92       	push	r5
    3260:	6f 92       	push	r6
    3262:	7f 92       	push	r7
    3264:	8f 92       	push	r8
    3266:	9f 92       	push	r9
    3268:	af 92       	push	r10
    326a:	bf 92       	push	r11
    326c:	cf 92       	push	r12
    326e:	df 92       	push	r13
    3270:	ef 92       	push	r14
    3272:	ff 92       	push	r15
    3274:	0f 93       	push	r16
    3276:	1f 93       	push	r17
    3278:	cf 93       	push	r28
    327a:	df 93       	push	r29
    327c:	5c 01       	movw	r10, r24
    327e:	3b 01       	movw	r6, r22
    3280:	db 01       	movw	r26, r22
    3282:	0d 91       	ld	r16, X+
    3284:	1c 91       	ld	r17, X
    3286:	02 c0       	rjmp	.+4      	; 0x328c <create_name+0x30>
    3288:	0f 5f       	subi	r16, 0xFF	; 255
    328a:	1f 4f       	sbci	r17, 0xFF	; 255
    328c:	f8 01       	movw	r30, r16
    328e:	80 81       	ld	r24, Z
    3290:	8f 32       	cpi	r24, 0x2F	; 47
    3292:	d1 f3       	breq	.-12     	; 0x3288 <create_name+0x2c>
    3294:	8c 35       	cpi	r24, 0x5C	; 92
    3296:	c1 f3       	breq	.-16     	; 0x3288 <create_name+0x2c>
    3298:	d5 01       	movw	r26, r10
    329a:	56 96       	adiw	r26, 0x16	; 22
    329c:	cd 90       	ld	r12, X+
    329e:	dc 90       	ld	r13, X
    32a0:	57 97       	sbiw	r26, 0x17	; 23
    32a2:	c0 e0       	ldi	r28, 0x00	; 0
    32a4:	d0 e0       	ldi	r29, 0x00	; 0
    32a6:	80 e0       	ldi	r24, 0x00	; 0
    32a8:	90 e0       	ldi	r25, 0x00	; 0
    32aa:	7c 01       	movw	r14, r24
    32ac:	bf ef       	ldi	r27, 0xFF	; 255
    32ae:	eb 1a       	sub	r14, r27
    32b0:	fb 0a       	sbc	r15, r27
    32b2:	f8 01       	movw	r30, r16
    32b4:	e8 0f       	add	r30, r24
    32b6:	f9 1f       	adc	r31, r25
    32b8:	80 81       	ld	r24, Z
    32ba:	90 e0       	ldi	r25, 0x00	; 0
    32bc:	80 32       	cpi	r24, 0x20	; 32
    32be:	91 05       	cpc	r25, r1
    32c0:	38 f1       	brcs	.+78     	; 0x3310 <create_name+0xb4>
    32c2:	8f 32       	cpi	r24, 0x2F	; 47
    32c4:	91 05       	cpc	r25, r1
    32c6:	21 f1       	breq	.+72     	; 0x3310 <create_name+0xb4>
    32c8:	8c 35       	cpi	r24, 0x5C	; 92
    32ca:	91 05       	cpc	r25, r1
    32cc:	09 f1       	breq	.+66     	; 0x3310 <create_name+0xb4>
    32ce:	c0 38       	cpi	r28, 0x80	; 128
    32d0:	d1 05       	cpc	r29, r1
    32d2:	08 f0       	brcs	.+2      	; 0x32d6 <create_name+0x7a>
    32d4:	8a c1       	rjmp	.+788    	; 0x35ea <create_name+0x38e>
    32d6:	61 e0       	ldi	r22, 0x01	; 1
    32d8:	70 e0       	ldi	r23, 0x00	; 0
    32da:	0e 94 a4 13 	call	0x2748	; 0x2748 <ff_convert>
    32de:	4c 01       	movw	r8, r24
    32e0:	00 97       	sbiw	r24, 0x00	; 0
    32e2:	09 f4       	brne	.+2      	; 0x32e6 <create_name+0x8a>
    32e4:	84 c1       	rjmp	.+776    	; 0x35ee <create_name+0x392>
    32e6:	80 38       	cpi	r24, 0x80	; 128
    32e8:	91 05       	cpc	r25, r1
    32ea:	40 f4       	brcc	.+16     	; 0x32fc <create_name+0xa0>
    32ec:	bc 01       	movw	r22, r24
    32ee:	81 e0       	ldi	r24, 0x01	; 1
    32f0:	91 e0       	ldi	r25, 0x01	; 1
    32f2:	0e 94 2e 14 	call	0x285c	; 0x285c <chk_chr>
    32f6:	89 2b       	or	r24, r25
    32f8:	09 f0       	breq	.+2      	; 0x32fc <create_name+0xa0>
    32fa:	7b c1       	rjmp	.+758    	; 0x35f2 <create_name+0x396>
    32fc:	fe 01       	movw	r30, r28
    32fe:	ee 0f       	add	r30, r30
    3300:	ff 1f       	adc	r31, r31
    3302:	ec 0d       	add	r30, r12
    3304:	fd 1d       	adc	r31, r13
    3306:	91 82       	std	Z+1, r9	; 0x01
    3308:	80 82       	st	Z, r8
    330a:	c7 01       	movw	r24, r14
    330c:	21 96       	adiw	r28, 0x01	; 1
    330e:	cd cf       	rjmp	.-102    	; 0x32aa <create_name+0x4e>
    3310:	0e 0d       	add	r16, r14
    3312:	1f 1d       	adc	r17, r15
    3314:	d3 01       	movw	r26, r6
    3316:	0d 93       	st	X+, r16
    3318:	1c 93       	st	X, r17
    331a:	80 97       	sbiw	r24, 0x20	; 32
    331c:	20 f4       	brcc	.+8      	; 0x3326 <create_name+0xca>
    331e:	68 94       	set
    3320:	55 24       	eor	r5, r5
    3322:	52 f8       	bld	r5, 2
    3324:	01 c0       	rjmp	.+2      	; 0x3328 <create_name+0xcc>
    3326:	51 2c       	mov	r5, r1
    3328:	c1 30       	cpi	r28, 0x01	; 1
    332a:	d1 05       	cpc	r29, r1
    332c:	59 f4       	brne	.+22     	; 0x3344 <create_name+0xe8>
    332e:	fe 01       	movw	r30, r28
    3330:	e1 50       	subi	r30, 0x01	; 1
    3332:	f0 48       	sbci	r31, 0x80	; 128
    3334:	ee 0f       	add	r30, r30
    3336:	ff 1f       	adc	r31, r31
    3338:	ec 0d       	add	r30, r12
    333a:	fd 1d       	adc	r31, r13
    333c:	80 81       	ld	r24, Z
    333e:	91 81       	ldd	r25, Z+1	; 0x01
    3340:	8e 97       	sbiw	r24, 0x2e	; 46
    3342:	d9 f0       	breq	.+54     	; 0x337a <create_name+0x11e>
    3344:	c2 30       	cpi	r28, 0x02	; 2
    3346:	d1 05       	cpc	r29, r1
    3348:	09 f0       	breq	.+2      	; 0x334c <create_name+0xf0>
    334a:	4d c0       	rjmp	.+154    	; 0x33e6 <create_name+0x18a>
    334c:	fe 01       	movw	r30, r28
    334e:	e1 50       	subi	r30, 0x01	; 1
    3350:	f0 48       	sbci	r31, 0x80	; 128
    3352:	ee 0f       	add	r30, r30
    3354:	ff 1f       	adc	r31, r31
    3356:	ec 0d       	add	r30, r12
    3358:	fd 1d       	adc	r31, r13
    335a:	80 81       	ld	r24, Z
    335c:	91 81       	ldd	r25, Z+1	; 0x01
    335e:	8e 97       	sbiw	r24, 0x2e	; 46
    3360:	09 f0       	breq	.+2      	; 0x3364 <create_name+0x108>
    3362:	41 c0       	rjmp	.+130    	; 0x33e6 <create_name+0x18a>
    3364:	fe 01       	movw	r30, r28
    3366:	e2 50       	subi	r30, 0x02	; 2
    3368:	f0 48       	sbci	r31, 0x80	; 128
    336a:	ee 0f       	add	r30, r30
    336c:	ff 1f       	adc	r31, r31
    336e:	ec 0d       	add	r30, r12
    3370:	fd 1d       	adc	r31, r13
    3372:	80 81       	ld	r24, Z
    3374:	91 81       	ldd	r25, Z+1	; 0x01
    3376:	8e 97       	sbiw	r24, 0x2e	; 46
    3378:	b1 f5       	brne	.+108    	; 0x33e6 <create_name+0x18a>
    337a:	fe 01       	movw	r30, r28
    337c:	ee 0f       	add	r30, r30
    337e:	ff 1f       	adc	r31, r31
    3380:	ec 0d       	add	r30, r12
    3382:	fd 1d       	adc	r31, r13
    3384:	11 82       	std	Z+1, r1	; 0x01
    3386:	10 82       	st	Z, r1
    3388:	80 e0       	ldi	r24, 0x00	; 0
    338a:	90 e0       	ldi	r25, 0x00	; 0
    338c:	0f c0       	rjmp	.+30     	; 0x33ac <create_name+0x150>
    338e:	d5 01       	movw	r26, r10
    3390:	54 96       	adiw	r26, 0x14	; 20
    3392:	ed 91       	ld	r30, X+
    3394:	fc 91       	ld	r31, X
    3396:	55 97       	sbiw	r26, 0x15	; 21
    3398:	e8 0f       	add	r30, r24
    339a:	f9 1f       	adc	r31, r25
    339c:	8c 17       	cp	r24, r28
    339e:	9d 07       	cpc	r25, r29
    33a0:	10 f4       	brcc	.+4      	; 0x33a6 <create_name+0x14a>
    33a2:	2e e2       	ldi	r18, 0x2E	; 46
    33a4:	01 c0       	rjmp	.+2      	; 0x33a8 <create_name+0x14c>
    33a6:	20 e2       	ldi	r18, 0x20	; 32
    33a8:	20 83       	st	Z, r18
    33aa:	01 96       	adiw	r24, 0x01	; 1
    33ac:	8b 30       	cpi	r24, 0x0B	; 11
    33ae:	91 05       	cpc	r25, r1
    33b0:	70 f3       	brcs	.-36     	; 0x338e <create_name+0x132>
    33b2:	f5 01       	movw	r30, r10
    33b4:	24 89       	ldd	r18, Z+20	; 0x14
    33b6:	35 89       	ldd	r19, Z+21	; 0x15
    33b8:	f9 01       	movw	r30, r18
    33ba:	e8 0f       	add	r30, r24
    33bc:	f9 1f       	adc	r31, r25
    33be:	25 2d       	mov	r18, r5
    33c0:	20 62       	ori	r18, 0x20	; 32
    33c2:	20 83       	st	Z, r18
    33c4:	80 e0       	ldi	r24, 0x00	; 0
    33c6:	18 c1       	rjmp	.+560    	; 0x35f8 <create_name+0x39c>
    33c8:	fe 01       	movw	r30, r28
    33ca:	e1 50       	subi	r30, 0x01	; 1
    33cc:	f0 48       	sbci	r31, 0x80	; 128
    33ce:	ee 0f       	add	r30, r30
    33d0:	ff 1f       	adc	r31, r31
    33d2:	ec 0d       	add	r30, r12
    33d4:	fd 1d       	adc	r31, r13
    33d6:	80 81       	ld	r24, Z
    33d8:	91 81       	ldd	r25, Z+1	; 0x01
    33da:	80 32       	cpi	r24, 0x20	; 32
    33dc:	91 05       	cpc	r25, r1
    33de:	11 f0       	breq	.+4      	; 0x33e4 <create_name+0x188>
    33e0:	8e 97       	sbiw	r24, 0x2e	; 46
    33e2:	19 f4       	brne	.+6      	; 0x33ea <create_name+0x18e>
    33e4:	21 97       	sbiw	r28, 0x01	; 1
    33e6:	20 97       	sbiw	r28, 0x00	; 0
    33e8:	79 f7       	brne	.-34     	; 0x33c8 <create_name+0x16c>
    33ea:	20 97       	sbiw	r28, 0x00	; 0
    33ec:	09 f4       	brne	.+2      	; 0x33f0 <create_name+0x194>
    33ee:	03 c1       	rjmp	.+518    	; 0x35f6 <create_name+0x39a>
    33f0:	fe 01       	movw	r30, r28
    33f2:	ee 0f       	add	r30, r30
    33f4:	ff 1f       	adc	r31, r31
    33f6:	ec 0d       	add	r30, r12
    33f8:	fd 1d       	adc	r31, r13
    33fa:	11 82       	std	Z+1, r1	; 0x01
    33fc:	10 82       	st	Z, r1
    33fe:	4b e0       	ldi	r20, 0x0B	; 11
    3400:	50 e0       	ldi	r21, 0x00	; 0
    3402:	60 e2       	ldi	r22, 0x20	; 32
    3404:	70 e0       	ldi	r23, 0x00	; 0
    3406:	d5 01       	movw	r26, r10
    3408:	54 96       	adiw	r26, 0x14	; 20
    340a:	8d 91       	ld	r24, X+
    340c:	9c 91       	ld	r25, X
    340e:	55 97       	sbiw	r26, 0x15	; 21
    3410:	0e 94 07 14 	call	0x280e	; 0x280e <mem_set>
    3414:	80 e0       	ldi	r24, 0x00	; 0
    3416:	90 e0       	ldi	r25, 0x00	; 0
    3418:	01 c0       	rjmp	.+2      	; 0x341c <create_name+0x1c0>
    341a:	01 96       	adiw	r24, 0x01	; 1
    341c:	fc 01       	movw	r30, r24
    341e:	ee 0f       	add	r30, r30
    3420:	ff 1f       	adc	r31, r31
    3422:	ec 0d       	add	r30, r12
    3424:	fd 1d       	adc	r31, r13
    3426:	20 81       	ld	r18, Z
    3428:	31 81       	ldd	r19, Z+1	; 0x01
    342a:	20 32       	cpi	r18, 0x20	; 32
    342c:	31 05       	cpc	r19, r1
    342e:	a9 f3       	breq	.-22     	; 0x341a <create_name+0x1be>
    3430:	2e 32       	cpi	r18, 0x2E	; 46
    3432:	31 05       	cpc	r19, r1
    3434:	91 f3       	breq	.-28     	; 0x341a <create_name+0x1be>
    3436:	00 97       	sbiw	r24, 0x00	; 0
    3438:	29 f0       	breq	.+10     	; 0x3444 <create_name+0x1e8>
    343a:	b5 2d       	mov	r27, r5
    343c:	b3 60       	ori	r27, 0x03	; 3
    343e:	5b 2e       	mov	r5, r27
    3440:	01 c0       	rjmp	.+2      	; 0x3444 <create_name+0x1e8>
    3442:	21 97       	sbiw	r28, 0x01	; 1
    3444:	20 97       	sbiw	r28, 0x00	; 0
    3446:	a1 f0       	breq	.+40     	; 0x3470 <create_name+0x214>
    3448:	fe 01       	movw	r30, r28
    344a:	e1 50       	subi	r30, 0x01	; 1
    344c:	f0 48       	sbci	r31, 0x80	; 128
    344e:	ee 0f       	add	r30, r30
    3450:	ff 1f       	adc	r31, r31
    3452:	ec 0d       	add	r30, r12
    3454:	fd 1d       	adc	r31, r13
    3456:	20 81       	ld	r18, Z
    3458:	31 81       	ldd	r19, Z+1	; 0x01
    345a:	2e 32       	cpi	r18, 0x2E	; 46
    345c:	31 05       	cpc	r19, r1
    345e:	89 f7       	brne	.-30     	; 0x3442 <create_name+0x1e6>
    3460:	68 94       	set
    3462:	88 24       	eor	r8, r8
    3464:	83 f8       	bld	r8, 3
    3466:	91 2c       	mov	r9, r1
    3468:	61 2c       	mov	r6, r1
    346a:	71 2c       	mov	r7, r1
    346c:	41 2c       	mov	r4, r1
    346e:	07 c0       	rjmp	.+14     	; 0x347e <create_name+0x222>
    3470:	68 94       	set
    3472:	88 24       	eor	r8, r8
    3474:	83 f8       	bld	r8, 3
    3476:	91 2c       	mov	r9, r1
    3478:	61 2c       	mov	r6, r1
    347a:	71 2c       	mov	r7, r1
    347c:	41 2c       	mov	r4, r1
    347e:	7c 01       	movw	r14, r24
    3480:	ef ef       	ldi	r30, 0xFF	; 255
    3482:	ee 1a       	sub	r14, r30
    3484:	fe 0a       	sbc	r15, r30
    3486:	88 0f       	add	r24, r24
    3488:	99 1f       	adc	r25, r25
    348a:	f6 01       	movw	r30, r12
    348c:	e8 0f       	add	r30, r24
    348e:	f9 1f       	adc	r31, r25
    3490:	00 81       	ld	r16, Z
    3492:	11 81       	ldd	r17, Z+1	; 0x01
    3494:	01 15       	cp	r16, r1
    3496:	11 05       	cpc	r17, r1
    3498:	09 f4       	brne	.+2      	; 0x349c <create_name+0x240>
    349a:	76 c0       	rjmp	.+236    	; 0x3588 <create_name+0x32c>
    349c:	00 32       	cpi	r16, 0x20	; 32
    349e:	11 05       	cpc	r17, r1
    34a0:	31 f0       	breq	.+12     	; 0x34ae <create_name+0x252>
    34a2:	0e 32       	cpi	r16, 0x2E	; 46
    34a4:	11 05       	cpc	r17, r1
    34a6:	41 f4       	brne	.+16     	; 0x34b8 <create_name+0x25c>
    34a8:	ce 15       	cp	r28, r14
    34aa:	df 05       	cpc	r29, r15
    34ac:	29 f0       	breq	.+10     	; 0x34b8 <create_name+0x25c>
    34ae:	f5 2d       	mov	r31, r5
    34b0:	f3 60       	ori	r31, 0x03	; 3
    34b2:	5f 2e       	mov	r5, r31
    34b4:	c7 01       	movw	r24, r14
    34b6:	e3 cf       	rjmp	.-58     	; 0x347e <create_name+0x222>
    34b8:	68 14       	cp	r6, r8
    34ba:	79 04       	cpc	r7, r9
    34bc:	18 f4       	brcc	.+6      	; 0x34c4 <create_name+0x268>
    34be:	ce 15       	cp	r28, r14
    34c0:	df 05       	cpc	r29, r15
    34c2:	f9 f4       	brne	.+62     	; 0x3502 <create_name+0x2a6>
    34c4:	2b e0       	ldi	r18, 0x0B	; 11
    34c6:	82 16       	cp	r8, r18
    34c8:	91 04       	cpc	r9, r1
    34ca:	21 f4       	brne	.+8      	; 0x34d4 <create_name+0x278>
    34cc:	35 2d       	mov	r19, r5
    34ce:	33 60       	ori	r19, 0x03	; 3
    34d0:	53 2e       	mov	r5, r19
    34d2:	5a c0       	rjmp	.+180    	; 0x3588 <create_name+0x32c>
    34d4:	ce 15       	cp	r28, r14
    34d6:	df 05       	cpc	r29, r15
    34d8:	19 f0       	breq	.+6      	; 0x34e0 <create_name+0x284>
    34da:	85 2d       	mov	r24, r5
    34dc:	83 60       	ori	r24, 0x03	; 3
    34de:	58 2e       	mov	r5, r24
    34e0:	ce 15       	cp	r28, r14
    34e2:	df 05       	cpc	r29, r15
    34e4:	08 f4       	brcc	.+2      	; 0x34e8 <create_name+0x28c>
    34e6:	50 c0       	rjmp	.+160    	; 0x3588 <create_name+0x32c>
    34e8:	44 0c       	add	r4, r4
    34ea:	44 0c       	add	r4, r4
    34ec:	ce 01       	movw	r24, r28
    34ee:	0f 2e       	mov	r0, r31
    34f0:	fb e0       	ldi	r31, 0x0B	; 11
    34f2:	8f 2e       	mov	r8, r31
    34f4:	91 2c       	mov	r9, r1
    34f6:	f0 2d       	mov	r31, r0
    34f8:	68 94       	set
    34fa:	66 24       	eor	r6, r6
    34fc:	63 f8       	bld	r6, 3
    34fe:	71 2c       	mov	r7, r1
    3500:	be cf       	rjmp	.-132    	; 0x347e <create_name+0x222>
    3502:	00 38       	cpi	r16, 0x80	; 128
    3504:	11 05       	cpc	r17, r1
    3506:	80 f0       	brcs	.+32     	; 0x3528 <create_name+0x2cc>
    3508:	60 e0       	ldi	r22, 0x00	; 0
    350a:	70 e0       	ldi	r23, 0x00	; 0
    350c:	c8 01       	movw	r24, r16
    350e:	0e 94 a4 13 	call	0x2748	; 0x2748 <ff_convert>
    3512:	8c 01       	movw	r16, r24
    3514:	00 97       	sbiw	r24, 0x00	; 0
    3516:	29 f0       	breq	.+10     	; 0x3522 <create_name+0x2c6>
    3518:	fc 01       	movw	r30, r24
    351a:	ee 51       	subi	r30, 0x1E	; 30
    351c:	ff 4f       	sbci	r31, 0xFF	; 255
    351e:	00 81       	ld	r16, Z
    3520:	10 e0       	ldi	r17, 0x00	; 0
    3522:	a5 2d       	mov	r26, r5
    3524:	a2 60       	ori	r26, 0x02	; 2
    3526:	5a 2e       	mov	r5, r26
    3528:	01 15       	cp	r16, r1
    352a:	11 05       	cpc	r17, r1
    352c:	39 f0       	breq	.+14     	; 0x353c <create_name+0x2e0>
    352e:	b8 01       	movw	r22, r16
    3530:	8a e0       	ldi	r24, 0x0A	; 10
    3532:	91 e0       	ldi	r25, 0x01	; 1
    3534:	0e 94 2e 14 	call	0x285c	; 0x285c <chk_chr>
    3538:	89 2b       	or	r24, r25
    353a:	31 f0       	breq	.+12     	; 0x3548 <create_name+0x2ec>
    353c:	b5 2d       	mov	r27, r5
    353e:	b3 60       	ori	r27, 0x03	; 3
    3540:	5b 2e       	mov	r5, r27
    3542:	0f e5       	ldi	r16, 0x5F	; 95
    3544:	10 e0       	ldi	r17, 0x00	; 0
    3546:	13 c0       	rjmp	.+38     	; 0x356e <create_name+0x312>
    3548:	c8 01       	movw	r24, r16
    354a:	81 54       	subi	r24, 0x41	; 65
    354c:	91 09       	sbc	r25, r1
    354e:	4a 97       	sbiw	r24, 0x1a	; 26
    3550:	20 f4       	brcc	.+8      	; 0x355a <create_name+0x2fe>
    3552:	e4 2d       	mov	r30, r4
    3554:	e2 60       	ori	r30, 0x02	; 2
    3556:	4e 2e       	mov	r4, r30
    3558:	0a c0       	rjmp	.+20     	; 0x356e <create_name+0x312>
    355a:	c8 01       	movw	r24, r16
    355c:	81 56       	subi	r24, 0x61	; 97
    355e:	91 09       	sbc	r25, r1
    3560:	4a 97       	sbiw	r24, 0x1a	; 26
    3562:	28 f4       	brcc	.+10     	; 0x356e <create_name+0x312>
    3564:	f4 2d       	mov	r31, r4
    3566:	f1 60       	ori	r31, 0x01	; 1
    3568:	4f 2e       	mov	r4, r31
    356a:	00 52       	subi	r16, 0x20	; 32
    356c:	11 09       	sbc	r17, r1
    356e:	d5 01       	movw	r26, r10
    3570:	54 96       	adiw	r26, 0x14	; 20
    3572:	ed 91       	ld	r30, X+
    3574:	fc 91       	ld	r31, X
    3576:	55 97       	sbiw	r26, 0x15	; 21
    3578:	e6 0d       	add	r30, r6
    357a:	f7 1d       	adc	r31, r7
    357c:	00 83       	st	Z, r16
    357e:	c7 01       	movw	r24, r14
    3580:	f3 01       	movw	r30, r6
    3582:	31 96       	adiw	r30, 0x01	; 1
    3584:	3f 01       	movw	r6, r30
    3586:	7b cf       	rjmp	.-266    	; 0x347e <create_name+0x222>
    3588:	d5 01       	movw	r26, r10
    358a:	54 96       	adiw	r26, 0x14	; 20
    358c:	ed 91       	ld	r30, X+
    358e:	fc 91       	ld	r31, X
    3590:	55 97       	sbiw	r26, 0x15	; 21
    3592:	80 81       	ld	r24, Z
    3594:	85 3e       	cpi	r24, 0xE5	; 229
    3596:	11 f4       	brne	.+4      	; 0x359c <create_name+0x340>
    3598:	85 e0       	ldi	r24, 0x05	; 5
    359a:	80 83       	st	Z, r24
    359c:	b8 e0       	ldi	r27, 0x08	; 8
    359e:	8b 16       	cp	r8, r27
    35a0:	91 04       	cpc	r9, r1
    35a2:	11 f4       	brne	.+4      	; 0x35a8 <create_name+0x34c>
    35a4:	44 0c       	add	r4, r4
    35a6:	44 0c       	add	r4, r4
    35a8:	94 2d       	mov	r25, r4
    35aa:	9c 70       	andi	r25, 0x0C	; 12
    35ac:	9c 30       	cpi	r25, 0x0C	; 12
    35ae:	21 f0       	breq	.+8      	; 0x35b8 <create_name+0x35c>
    35b0:	84 2d       	mov	r24, r4
    35b2:	83 70       	andi	r24, 0x03	; 3
    35b4:	83 30       	cpi	r24, 0x03	; 3
    35b6:	19 f4       	brne	.+6      	; 0x35be <create_name+0x362>
    35b8:	e5 2d       	mov	r30, r5
    35ba:	e2 60       	ori	r30, 0x02	; 2
    35bc:	5e 2e       	mov	r5, r30
    35be:	51 fc       	sbrc	r5, 1
    35c0:	0c c0       	rjmp	.+24     	; 0x35da <create_name+0x37e>
    35c2:	84 2d       	mov	r24, r4
    35c4:	83 70       	andi	r24, 0x03	; 3
    35c6:	81 30       	cpi	r24, 0x01	; 1
    35c8:	19 f4       	brne	.+6      	; 0x35d0 <create_name+0x374>
    35ca:	f5 2d       	mov	r31, r5
    35cc:	f0 61       	ori	r31, 0x10	; 16
    35ce:	5f 2e       	mov	r5, r31
    35d0:	94 30       	cpi	r25, 0x04	; 4
    35d2:	19 f4       	brne	.+6      	; 0x35da <create_name+0x37e>
    35d4:	25 2d       	mov	r18, r5
    35d6:	28 60       	ori	r18, 0x08	; 8
    35d8:	52 2e       	mov	r5, r18
    35da:	d5 01       	movw	r26, r10
    35dc:	54 96       	adiw	r26, 0x14	; 20
    35de:	ed 91       	ld	r30, X+
    35e0:	fc 91       	ld	r31, X
    35e2:	55 97       	sbiw	r26, 0x15	; 21
    35e4:	53 86       	std	Z+11, r5	; 0x0b
    35e6:	80 e0       	ldi	r24, 0x00	; 0
    35e8:	07 c0       	rjmp	.+14     	; 0x35f8 <create_name+0x39c>
    35ea:	86 e0       	ldi	r24, 0x06	; 6
    35ec:	05 c0       	rjmp	.+10     	; 0x35f8 <create_name+0x39c>
    35ee:	86 e0       	ldi	r24, 0x06	; 6
    35f0:	03 c0       	rjmp	.+6      	; 0x35f8 <create_name+0x39c>
    35f2:	86 e0       	ldi	r24, 0x06	; 6
    35f4:	01 c0       	rjmp	.+2      	; 0x35f8 <create_name+0x39c>
    35f6:	86 e0       	ldi	r24, 0x06	; 6
    35f8:	df 91       	pop	r29
    35fa:	cf 91       	pop	r28
    35fc:	1f 91       	pop	r17
    35fe:	0f 91       	pop	r16
    3600:	ff 90       	pop	r15
    3602:	ef 90       	pop	r14
    3604:	df 90       	pop	r13
    3606:	cf 90       	pop	r12
    3608:	bf 90       	pop	r11
    360a:	af 90       	pop	r10
    360c:	9f 90       	pop	r9
    360e:	8f 90       	pop	r8
    3610:	7f 90       	pop	r7
    3612:	6f 90       	pop	r6
    3614:	5f 90       	pop	r5
    3616:	4f 90       	pop	r4
    3618:	08 95       	ret

0000361a <cmp_lfn>:
    361a:	8f 92       	push	r8
    361c:	9f 92       	push	r9
    361e:	af 92       	push	r10
    3620:	bf 92       	push	r11
    3622:	cf 92       	push	r12
    3624:	df 92       	push	r13
    3626:	ef 92       	push	r14
    3628:	ff 92       	push	r15
    362a:	0f 93       	push	r16
    362c:	1f 93       	push	r17
    362e:	cf 93       	push	r28
    3630:	df 93       	push	r29
    3632:	5c 01       	movw	r10, r24
    3634:	4b 01       	movw	r8, r22
    3636:	fb 01       	movw	r30, r22
    3638:	80 81       	ld	r24, Z
    363a:	90 e0       	ldi	r25, 0x00	; 0
    363c:	8f 7b       	andi	r24, 0xBF	; 191
    363e:	01 97       	sbiw	r24, 0x01	; 1
    3640:	2d e0       	ldi	r18, 0x0D	; 13
    3642:	28 9f       	mul	r18, r24
    3644:	80 01       	movw	r16, r0
    3646:	29 9f       	mul	r18, r25
    3648:	10 0d       	add	r17, r0
    364a:	11 24       	eor	r1, r1
    364c:	ee 24       	eor	r14, r14
    364e:	e3 94       	inc	r14
    3650:	f1 2c       	mov	r15, r1
    3652:	c0 e0       	ldi	r28, 0x00	; 0
    3654:	d0 e0       	ldi	r29, 0x00	; 0
    3656:	fe 01       	movw	r30, r28
    3658:	eb 5a       	subi	r30, 0xAB	; 171
    365a:	fe 4f       	sbci	r31, 0xFE	; 254
    365c:	80 81       	ld	r24, Z
    365e:	f4 01       	movw	r30, r8
    3660:	e8 0f       	add	r30, r24
    3662:	f1 1d       	adc	r31, r1
    3664:	80 81       	ld	r24, Z
    3666:	91 81       	ldd	r25, Z+1	; 0x01
    3668:	e1 14       	cp	r14, r1
    366a:	f1 04       	cpc	r15, r1
    366c:	c1 f0       	breq	.+48     	; 0x369e <cmp_lfn+0x84>
    366e:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <ff_wtoupper>
    3672:	7c 01       	movw	r14, r24
    3674:	00 38       	cpi	r16, 0x80	; 128
    3676:	11 05       	cpc	r17, r1
    3678:	50 f5       	brcc	.+84     	; 0x36ce <cmp_lfn+0xb4>
    367a:	68 01       	movw	r12, r16
    367c:	ff ef       	ldi	r31, 0xFF	; 255
    367e:	cf 1a       	sub	r12, r31
    3680:	df 0a       	sbc	r13, r31
    3682:	00 0f       	add	r16, r16
    3684:	11 1f       	adc	r17, r17
    3686:	f5 01       	movw	r30, r10
    3688:	e0 0f       	add	r30, r16
    368a:	f1 1f       	adc	r31, r17
    368c:	80 81       	ld	r24, Z
    368e:	91 81       	ldd	r25, Z+1	; 0x01
    3690:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <ff_wtoupper>
    3694:	e8 16       	cp	r14, r24
    3696:	f9 06       	cpc	r15, r25
    3698:	e9 f4       	brne	.+58     	; 0x36d4 <cmp_lfn+0xba>
    369a:	86 01       	movw	r16, r12
    369c:	02 c0       	rjmp	.+4      	; 0x36a2 <cmp_lfn+0x88>
    369e:	01 96       	adiw	r24, 0x01	; 1
    36a0:	e1 f4       	brne	.+56     	; 0x36da <cmp_lfn+0xc0>
    36a2:	21 96       	adiw	r28, 0x01	; 1
    36a4:	cd 30       	cpi	r28, 0x0D	; 13
    36a6:	d1 05       	cpc	r29, r1
    36a8:	b0 f2       	brcs	.-84     	; 0x3656 <cmp_lfn+0x3c>
    36aa:	f4 01       	movw	r30, r8
    36ac:	80 81       	ld	r24, Z
    36ae:	86 ff       	sbrs	r24, 6
    36b0:	17 c0       	rjmp	.+46     	; 0x36e0 <cmp_lfn+0xc6>
    36b2:	ef 28       	or	r14, r15
    36b4:	c1 f0       	breq	.+48     	; 0x36e6 <cmp_lfn+0xcc>
    36b6:	00 0f       	add	r16, r16
    36b8:	11 1f       	adc	r17, r17
    36ba:	f5 01       	movw	r30, r10
    36bc:	e0 0f       	add	r30, r16
    36be:	f1 1f       	adc	r31, r17
    36c0:	80 81       	ld	r24, Z
    36c2:	91 81       	ldd	r25, Z+1	; 0x01
    36c4:	89 2b       	or	r24, r25
    36c6:	91 f4       	brne	.+36     	; 0x36ec <cmp_lfn+0xd2>
    36c8:	81 e0       	ldi	r24, 0x01	; 1
    36ca:	90 e0       	ldi	r25, 0x00	; 0
    36cc:	11 c0       	rjmp	.+34     	; 0x36f0 <cmp_lfn+0xd6>
    36ce:	80 e0       	ldi	r24, 0x00	; 0
    36d0:	90 e0       	ldi	r25, 0x00	; 0
    36d2:	0e c0       	rjmp	.+28     	; 0x36f0 <cmp_lfn+0xd6>
    36d4:	80 e0       	ldi	r24, 0x00	; 0
    36d6:	90 e0       	ldi	r25, 0x00	; 0
    36d8:	0b c0       	rjmp	.+22     	; 0x36f0 <cmp_lfn+0xd6>
    36da:	80 e0       	ldi	r24, 0x00	; 0
    36dc:	90 e0       	ldi	r25, 0x00	; 0
    36de:	08 c0       	rjmp	.+16     	; 0x36f0 <cmp_lfn+0xd6>
    36e0:	81 e0       	ldi	r24, 0x01	; 1
    36e2:	90 e0       	ldi	r25, 0x00	; 0
    36e4:	05 c0       	rjmp	.+10     	; 0x36f0 <cmp_lfn+0xd6>
    36e6:	81 e0       	ldi	r24, 0x01	; 1
    36e8:	90 e0       	ldi	r25, 0x00	; 0
    36ea:	02 c0       	rjmp	.+4      	; 0x36f0 <cmp_lfn+0xd6>
    36ec:	80 e0       	ldi	r24, 0x00	; 0
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	df 91       	pop	r29
    36f2:	cf 91       	pop	r28
    36f4:	1f 91       	pop	r17
    36f6:	0f 91       	pop	r16
    36f8:	ff 90       	pop	r15
    36fa:	ef 90       	pop	r14
    36fc:	df 90       	pop	r13
    36fe:	cf 90       	pop	r12
    3700:	bf 90       	pop	r11
    3702:	af 90       	pop	r10
    3704:	9f 90       	pop	r9
    3706:	8f 90       	pop	r8
    3708:	08 95       	ret

0000370a <sync_fs>:
    370a:	cf 92       	push	r12
    370c:	df 92       	push	r13
    370e:	ff 92       	push	r15
    3710:	0f 93       	push	r16
    3712:	1f 93       	push	r17
    3714:	cf 93       	push	r28
    3716:	df 93       	push	r29
    3718:	ec 01       	movw	r28, r24
    371a:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <sync_window>
    371e:	f8 2e       	mov	r15, r24
    3720:	81 11       	cpse	r24, r1
    3722:	5c c0       	rjmp	.+184    	; 0x37dc <sync_fs+0xd2>
    3724:	88 81       	ld	r24, Y
    3726:	83 30       	cpi	r24, 0x03	; 3
    3728:	09 f0       	breq	.+2      	; 0x372c <sync_fs+0x22>
    372a:	4e c0       	rjmp	.+156    	; 0x37c8 <sync_fs+0xbe>
    372c:	8d 81       	ldd	r24, Y+5	; 0x05
    372e:	81 30       	cpi	r24, 0x01	; 1
    3730:	09 f0       	breq	.+2      	; 0x3734 <sync_fs+0x2a>
    3732:	4a c0       	rjmp	.+148    	; 0x37c8 <sync_fs+0xbe>
    3734:	40 e0       	ldi	r20, 0x00	; 0
    3736:	52 e0       	ldi	r21, 0x02	; 2
    3738:	60 e0       	ldi	r22, 0x00	; 0
    373a:	70 e0       	ldi	r23, 0x00	; 0
    373c:	6e 01       	movw	r12, r28
    373e:	82 e3       	ldi	r24, 0x32	; 50
    3740:	c8 0e       	add	r12, r24
    3742:	d1 1c       	adc	r13, r1
    3744:	c6 01       	movw	r24, r12
    3746:	0e 94 07 14 	call	0x280e	; 0x280e <mem_set>
    374a:	85 e5       	ldi	r24, 0x55	; 85
    374c:	9a ea       	ldi	r25, 0xAA	; 170
    374e:	fe 01       	movw	r30, r28
    3750:	e0 5d       	subi	r30, 0xD0	; 208
    3752:	fd 4f       	sbci	r31, 0xFD	; 253
    3754:	91 83       	std	Z+1, r25	; 0x01
    3756:	80 83       	st	Z, r24
    3758:	82 e5       	ldi	r24, 0x52	; 82
    375a:	92 e5       	ldi	r25, 0x52	; 82
    375c:	a1 e6       	ldi	r26, 0x61	; 97
    375e:	b1 e4       	ldi	r27, 0x41	; 65
    3760:	8a ab       	std	Y+50, r24	; 0x32
    3762:	9b ab       	std	Y+51, r25	; 0x33
    3764:	ac ab       	std	Y+52, r26	; 0x34
    3766:	bd ab       	std	Y+53, r27	; 0x35
    3768:	82 e7       	ldi	r24, 0x72	; 114
    376a:	92 e7       	ldi	r25, 0x72	; 114
    376c:	a1 e4       	ldi	r26, 0x41	; 65
    376e:	b1 e6       	ldi	r27, 0x61	; 97
    3770:	7a 97       	sbiw	r30, 0x1a	; 26
    3772:	80 83       	st	Z, r24
    3774:	91 83       	std	Z+1, r25	; 0x01
    3776:	a2 83       	std	Z+2, r26	; 0x02
    3778:	b3 83       	std	Z+3, r27	; 0x03
    377a:	8e 85       	ldd	r24, Y+14	; 0x0e
    377c:	9f 85       	ldd	r25, Y+15	; 0x0f
    377e:	a8 89       	ldd	r26, Y+16	; 0x10
    3780:	b9 89       	ldd	r27, Y+17	; 0x11
    3782:	34 96       	adiw	r30, 0x04	; 4
    3784:	80 83       	st	Z, r24
    3786:	91 83       	std	Z+1, r25	; 0x01
    3788:	a2 83       	std	Z+2, r26	; 0x02
    378a:	b3 83       	std	Z+3, r27	; 0x03
    378c:	8a 85       	ldd	r24, Y+10	; 0x0a
    378e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3790:	ac 85       	ldd	r26, Y+12	; 0x0c
    3792:	bd 85       	ldd	r27, Y+13	; 0x0d
    3794:	34 96       	adiw	r30, 0x04	; 4
    3796:	80 83       	st	Z, r24
    3798:	91 83       	std	Z+1, r25	; 0x01
    379a:	a2 83       	std	Z+2, r26	; 0x02
    379c:	b3 83       	std	Z+3, r27	; 0x03
    379e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    37a0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    37a2:	a8 a1       	ldd	r26, Y+32	; 0x20
    37a4:	b9 a1       	ldd	r27, Y+33	; 0x21
    37a6:	9c 01       	movw	r18, r24
    37a8:	ad 01       	movw	r20, r26
    37aa:	2f 5f       	subi	r18, 0xFF	; 255
    37ac:	3f 4f       	sbci	r19, 0xFF	; 255
    37ae:	4f 4f       	sbci	r20, 0xFF	; 255
    37b0:	5f 4f       	sbci	r21, 0xFF	; 255
    37b2:	2e a7       	std	Y+46, r18	; 0x2e
    37b4:	3f a7       	std	Y+47, r19	; 0x2f
    37b6:	48 ab       	std	Y+48, r20	; 0x30
    37b8:	59 ab       	std	Y+49, r21	; 0x31
    37ba:	01 e0       	ldi	r16, 0x01	; 1
    37bc:	10 e0       	ldi	r17, 0x00	; 0
    37be:	b6 01       	movw	r22, r12
    37c0:	89 81       	ldd	r24, Y+1	; 0x01
    37c2:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <disk_write>
    37c6:	1d 82       	std	Y+5, r1	; 0x05
    37c8:	40 e0       	ldi	r20, 0x00	; 0
    37ca:	50 e0       	ldi	r21, 0x00	; 0
    37cc:	60 e0       	ldi	r22, 0x00	; 0
    37ce:	89 81       	ldd	r24, Y+1	; 0x01
    37d0:	0e 94 cf 2c 	call	0x599e	; 0x599e <disk_ioctl>
    37d4:	88 23       	and	r24, r24
    37d6:	11 f0       	breq	.+4      	; 0x37dc <sync_fs+0xd2>
    37d8:	ff 24       	eor	r15, r15
    37da:	f3 94       	inc	r15
    37dc:	8f 2d       	mov	r24, r15
    37de:	df 91       	pop	r29
    37e0:	cf 91       	pop	r28
    37e2:	1f 91       	pop	r17
    37e4:	0f 91       	pop	r16
    37e6:	ff 90       	pop	r15
    37e8:	df 90       	pop	r13
    37ea:	cf 90       	pop	r12
    37ec:	08 95       	ret

000037ee <clust2sect>:
    37ee:	0f 93       	push	r16
    37f0:	1f 93       	push	r17
    37f2:	fc 01       	movw	r30, r24
    37f4:	9a 01       	movw	r18, r20
    37f6:	ab 01       	movw	r20, r22
    37f8:	22 50       	subi	r18, 0x02	; 2
    37fa:	31 09       	sbc	r19, r1
    37fc:	41 09       	sbc	r20, r1
    37fe:	51 09       	sbc	r21, r1
    3800:	86 89       	ldd	r24, Z+22	; 0x16
    3802:	97 89       	ldd	r25, Z+23	; 0x17
    3804:	a0 8d       	ldd	r26, Z+24	; 0x18
    3806:	b1 8d       	ldd	r27, Z+25	; 0x19
    3808:	02 97       	sbiw	r24, 0x02	; 2
    380a:	a1 09       	sbc	r26, r1
    380c:	b1 09       	sbc	r27, r1
    380e:	28 17       	cp	r18, r24
    3810:	39 07       	cpc	r19, r25
    3812:	4a 07       	cpc	r20, r26
    3814:	5b 07       	cpc	r21, r27
    3816:	68 f4       	brcc	.+26     	; 0x3832 <clust2sect+0x44>
    3818:	a2 81       	ldd	r26, Z+2	; 0x02
    381a:	b0 e0       	ldi	r27, 0x00	; 0
    381c:	0e 94 04 30 	call	0x6008	; 0x6008 <__muluhisi3>
    3820:	02 a5       	ldd	r16, Z+42	; 0x2a
    3822:	13 a5       	ldd	r17, Z+43	; 0x2b
    3824:	24 a5       	ldd	r18, Z+44	; 0x2c
    3826:	35 a5       	ldd	r19, Z+45	; 0x2d
    3828:	60 0f       	add	r22, r16
    382a:	71 1f       	adc	r23, r17
    382c:	82 1f       	adc	r24, r18
    382e:	93 1f       	adc	r25, r19
    3830:	03 c0       	rjmp	.+6      	; 0x3838 <clust2sect+0x4a>
    3832:	60 e0       	ldi	r22, 0x00	; 0
    3834:	70 e0       	ldi	r23, 0x00	; 0
    3836:	cb 01       	movw	r24, r22
    3838:	1f 91       	pop	r17
    383a:	0f 91       	pop	r16
    383c:	08 95       	ret

0000383e <get_fat>:
    383e:	af 92       	push	r10
    3840:	bf 92       	push	r11
    3842:	cf 92       	push	r12
    3844:	df 92       	push	r13
    3846:	ef 92       	push	r14
    3848:	ff 92       	push	r15
    384a:	0f 93       	push	r16
    384c:	1f 93       	push	r17
    384e:	cf 93       	push	r28
    3850:	df 93       	push	r29
    3852:	42 30       	cpi	r20, 0x02	; 2
    3854:	51 05       	cpc	r21, r1
    3856:	61 05       	cpc	r22, r1
    3858:	71 05       	cpc	r23, r1
    385a:	08 f4       	brcc	.+2      	; 0x385e <get_fat+0x20>
    385c:	b7 c0       	rjmp	.+366    	; 0x39cc <get_fat+0x18e>
    385e:	fc 01       	movw	r30, r24
    3860:	06 89       	ldd	r16, Z+22	; 0x16
    3862:	17 89       	ldd	r17, Z+23	; 0x17
    3864:	20 8d       	ldd	r18, Z+24	; 0x18
    3866:	31 8d       	ldd	r19, Z+25	; 0x19
    3868:	40 17       	cp	r20, r16
    386a:	51 07       	cpc	r21, r17
    386c:	62 07       	cpc	r22, r18
    386e:	73 07       	cpc	r23, r19
    3870:	08 f0       	brcs	.+2      	; 0x3874 <get_fat+0x36>
    3872:	b1 c0       	rjmp	.+354    	; 0x39d6 <get_fat+0x198>
    3874:	6a 01       	movw	r12, r20
    3876:	7b 01       	movw	r14, r22
    3878:	ec 01       	movw	r28, r24
    387a:	80 81       	ld	r24, Z
    387c:	82 30       	cpi	r24, 0x02	; 2
    387e:	09 f4       	brne	.+2      	; 0x3882 <get_fat+0x44>
    3880:	50 c0       	rjmp	.+160    	; 0x3922 <get_fat+0xe4>
    3882:	83 30       	cpi	r24, 0x03	; 3
    3884:	09 f4       	brne	.+2      	; 0x3888 <get_fat+0x4a>
    3886:	71 c0       	rjmp	.+226    	; 0x396a <get_fat+0x12c>
    3888:	81 30       	cpi	r24, 0x01	; 1
    388a:	09 f0       	breq	.+2      	; 0x388e <get_fat+0x50>
    388c:	a9 c0       	rjmp	.+338    	; 0x39e0 <get_fat+0x1a2>
    388e:	8a 01       	movw	r16, r20
    3890:	16 95       	lsr	r17
    3892:	07 95       	ror	r16
    3894:	04 0f       	add	r16, r20
    3896:	15 1f       	adc	r17, r21
    3898:	42 a1       	ldd	r20, Z+34	; 0x22
    389a:	53 a1       	ldd	r21, Z+35	; 0x23
    389c:	64 a1       	ldd	r22, Z+36	; 0x24
    389e:	75 a1       	ldd	r23, Z+37	; 0x25
    38a0:	c8 01       	movw	r24, r16
    38a2:	89 2f       	mov	r24, r25
    38a4:	99 27       	eor	r25, r25
    38a6:	86 95       	lsr	r24
    38a8:	48 0f       	add	r20, r24
    38aa:	59 1f       	adc	r21, r25
    38ac:	61 1d       	adc	r22, r1
    38ae:	71 1d       	adc	r23, r1
    38b0:	cf 01       	movw	r24, r30
    38b2:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    38b6:	81 11       	cpse	r24, r1
    38b8:	98 c0       	rjmp	.+304    	; 0x39ea <get_fat+0x1ac>
    38ba:	58 01       	movw	r10, r16
    38bc:	ff ef       	ldi	r31, 0xFF	; 255
    38be:	af 1a       	sub	r10, r31
    38c0:	bf 0a       	sbc	r11, r31
    38c2:	11 70       	andi	r17, 0x01	; 1
    38c4:	fe 01       	movw	r30, r28
    38c6:	e0 0f       	add	r30, r16
    38c8:	f1 1f       	adc	r31, r17
    38ca:	02 a9       	ldd	r16, Z+50	; 0x32
    38cc:	10 e0       	ldi	r17, 0x00	; 0
    38ce:	4a a1       	ldd	r20, Y+34	; 0x22
    38d0:	5b a1       	ldd	r21, Y+35	; 0x23
    38d2:	6c a1       	ldd	r22, Y+36	; 0x24
    38d4:	7d a1       	ldd	r23, Y+37	; 0x25
    38d6:	c5 01       	movw	r24, r10
    38d8:	89 2f       	mov	r24, r25
    38da:	99 27       	eor	r25, r25
    38dc:	86 95       	lsr	r24
    38de:	48 0f       	add	r20, r24
    38e0:	59 1f       	adc	r21, r25
    38e2:	61 1d       	adc	r22, r1
    38e4:	71 1d       	adc	r23, r1
    38e6:	ce 01       	movw	r24, r28
    38e8:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    38ec:	81 11       	cpse	r24, r1
    38ee:	81 c0       	rjmp	.+258    	; 0x39f2 <get_fat+0x1b4>
    38f0:	81 e0       	ldi	r24, 0x01	; 1
    38f2:	b8 22       	and	r11, r24
    38f4:	ca 0d       	add	r28, r10
    38f6:	db 1d       	adc	r29, r11
    38f8:	6a a9       	ldd	r22, Y+50	; 0x32
    38fa:	70 e0       	ldi	r23, 0x00	; 0
    38fc:	76 2f       	mov	r23, r22
    38fe:	66 27       	eor	r22, r22
    3900:	60 2b       	or	r22, r16
    3902:	71 2b       	or	r23, r17
    3904:	c0 fe       	sbrs	r12, 0
    3906:	09 c0       	rjmp	.+18     	; 0x391a <get_fat+0xdc>
    3908:	72 95       	swap	r23
    390a:	62 95       	swap	r22
    390c:	6f 70       	andi	r22, 0x0F	; 15
    390e:	67 27       	eor	r22, r23
    3910:	7f 70       	andi	r23, 0x0F	; 15
    3912:	67 27       	eor	r22, r23
    3914:	80 e0       	ldi	r24, 0x00	; 0
    3916:	90 e0       	ldi	r25, 0x00	; 0
    3918:	77 c0       	rjmp	.+238    	; 0x3a08 <get_fat+0x1ca>
    391a:	7f 70       	andi	r23, 0x0F	; 15
    391c:	80 e0       	ldi	r24, 0x00	; 0
    391e:	90 e0       	ldi	r25, 0x00	; 0
    3920:	73 c0       	rjmp	.+230    	; 0x3a08 <get_fat+0x1ca>
    3922:	42 a1       	ldd	r20, Z+34	; 0x22
    3924:	53 a1       	ldd	r21, Z+35	; 0x23
    3926:	64 a1       	ldd	r22, Z+36	; 0x24
    3928:	75 a1       	ldd	r23, Z+37	; 0x25
    392a:	bb 27       	eor	r27, r27
    392c:	af 2d       	mov	r26, r15
    392e:	9e 2d       	mov	r25, r14
    3930:	8d 2d       	mov	r24, r13
    3932:	48 0f       	add	r20, r24
    3934:	59 1f       	adc	r21, r25
    3936:	6a 1f       	adc	r22, r26
    3938:	7b 1f       	adc	r23, r27
    393a:	cf 01       	movw	r24, r30
    393c:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    3940:	81 11       	cpse	r24, r1
    3942:	5b c0       	rjmp	.+182    	; 0x39fa <get_fat+0x1bc>
    3944:	b7 01       	movw	r22, r14
    3946:	a6 01       	movw	r20, r12
    3948:	44 0f       	add	r20, r20
    394a:	55 1f       	adc	r21, r21
    394c:	66 1f       	adc	r22, r22
    394e:	77 1f       	adc	r23, r23
    3950:	4e 7f       	andi	r20, 0xFE	; 254
    3952:	51 70       	andi	r21, 0x01	; 1
    3954:	66 27       	eor	r22, r22
    3956:	77 27       	eor	r23, r23
    3958:	4e 5c       	subi	r20, 0xCE	; 206
    395a:	5f 4f       	sbci	r21, 0xFF	; 255
    395c:	c4 0f       	add	r28, r20
    395e:	d5 1f       	adc	r29, r21
    3960:	68 81       	ld	r22, Y
    3962:	79 81       	ldd	r23, Y+1	; 0x01
    3964:	80 e0       	ldi	r24, 0x00	; 0
    3966:	90 e0       	ldi	r25, 0x00	; 0
    3968:	4f c0       	rjmp	.+158    	; 0x3a08 <get_fat+0x1ca>
    396a:	42 a1       	ldd	r20, Z+34	; 0x22
    396c:	53 a1       	ldd	r21, Z+35	; 0x23
    396e:	64 a1       	ldd	r22, Z+36	; 0x24
    3970:	75 a1       	ldd	r23, Z+37	; 0x25
    3972:	d7 01       	movw	r26, r14
    3974:	c6 01       	movw	r24, r12
    3976:	68 94       	set
    3978:	16 f8       	bld	r1, 6
    397a:	b6 95       	lsr	r27
    397c:	a7 95       	ror	r26
    397e:	97 95       	ror	r25
    3980:	87 95       	ror	r24
    3982:	16 94       	lsr	r1
    3984:	d1 f7       	brne	.-12     	; 0x397a <get_fat+0x13c>
    3986:	48 0f       	add	r20, r24
    3988:	59 1f       	adc	r21, r25
    398a:	6a 1f       	adc	r22, r26
    398c:	7b 1f       	adc	r23, r27
    398e:	cf 01       	movw	r24, r30
    3990:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    3994:	81 11       	cpse	r24, r1
    3996:	35 c0       	rjmp	.+106    	; 0x3a02 <get_fat+0x1c4>
    3998:	b7 01       	movw	r22, r14
    399a:	a6 01       	movw	r20, r12
    399c:	44 0f       	add	r20, r20
    399e:	55 1f       	adc	r21, r21
    39a0:	66 1f       	adc	r22, r22
    39a2:	77 1f       	adc	r23, r23
    39a4:	44 0f       	add	r20, r20
    39a6:	55 1f       	adc	r21, r21
    39a8:	66 1f       	adc	r22, r22
    39aa:	77 1f       	adc	r23, r23
    39ac:	4c 7f       	andi	r20, 0xFC	; 252
    39ae:	51 70       	andi	r21, 0x01	; 1
    39b0:	66 27       	eor	r22, r22
    39b2:	77 27       	eor	r23, r23
    39b4:	4e 5c       	subi	r20, 0xCE	; 206
    39b6:	5f 4f       	sbci	r21, 0xFF	; 255
    39b8:	c4 0f       	add	r28, r20
    39ba:	d5 1f       	adc	r29, r21
    39bc:	88 81       	ld	r24, Y
    39be:	99 81       	ldd	r25, Y+1	; 0x01
    39c0:	aa 81       	ldd	r26, Y+2	; 0x02
    39c2:	bb 81       	ldd	r27, Y+3	; 0x03
    39c4:	bc 01       	movw	r22, r24
    39c6:	cd 01       	movw	r24, r26
    39c8:	9f 70       	andi	r25, 0x0F	; 15
    39ca:	1e c0       	rjmp	.+60     	; 0x3a08 <get_fat+0x1ca>
    39cc:	61 e0       	ldi	r22, 0x01	; 1
    39ce:	70 e0       	ldi	r23, 0x00	; 0
    39d0:	80 e0       	ldi	r24, 0x00	; 0
    39d2:	90 e0       	ldi	r25, 0x00	; 0
    39d4:	19 c0       	rjmp	.+50     	; 0x3a08 <get_fat+0x1ca>
    39d6:	61 e0       	ldi	r22, 0x01	; 1
    39d8:	70 e0       	ldi	r23, 0x00	; 0
    39da:	80 e0       	ldi	r24, 0x00	; 0
    39dc:	90 e0       	ldi	r25, 0x00	; 0
    39de:	14 c0       	rjmp	.+40     	; 0x3a08 <get_fat+0x1ca>
    39e0:	61 e0       	ldi	r22, 0x01	; 1
    39e2:	70 e0       	ldi	r23, 0x00	; 0
    39e4:	80 e0       	ldi	r24, 0x00	; 0
    39e6:	90 e0       	ldi	r25, 0x00	; 0
    39e8:	0f c0       	rjmp	.+30     	; 0x3a08 <get_fat+0x1ca>
    39ea:	6f ef       	ldi	r22, 0xFF	; 255
    39ec:	7f ef       	ldi	r23, 0xFF	; 255
    39ee:	cb 01       	movw	r24, r22
    39f0:	0b c0       	rjmp	.+22     	; 0x3a08 <get_fat+0x1ca>
    39f2:	6f ef       	ldi	r22, 0xFF	; 255
    39f4:	7f ef       	ldi	r23, 0xFF	; 255
    39f6:	cb 01       	movw	r24, r22
    39f8:	07 c0       	rjmp	.+14     	; 0x3a08 <get_fat+0x1ca>
    39fa:	6f ef       	ldi	r22, 0xFF	; 255
    39fc:	7f ef       	ldi	r23, 0xFF	; 255
    39fe:	cb 01       	movw	r24, r22
    3a00:	03 c0       	rjmp	.+6      	; 0x3a08 <get_fat+0x1ca>
    3a02:	6f ef       	ldi	r22, 0xFF	; 255
    3a04:	7f ef       	ldi	r23, 0xFF	; 255
    3a06:	cb 01       	movw	r24, r22
    3a08:	df 91       	pop	r29
    3a0a:	cf 91       	pop	r28
    3a0c:	1f 91       	pop	r17
    3a0e:	0f 91       	pop	r16
    3a10:	ff 90       	pop	r15
    3a12:	ef 90       	pop	r14
    3a14:	df 90       	pop	r13
    3a16:	cf 90       	pop	r12
    3a18:	bf 90       	pop	r11
    3a1a:	af 90       	pop	r10
    3a1c:	08 95       	ret

00003a1e <dir_sdi>:
    3a1e:	af 92       	push	r10
    3a20:	bf 92       	push	r11
    3a22:	cf 92       	push	r12
    3a24:	df 92       	push	r13
    3a26:	ef 92       	push	r14
    3a28:	ff 92       	push	r15
    3a2a:	0f 93       	push	r16
    3a2c:	1f 93       	push	r17
    3a2e:	cf 93       	push	r28
    3a30:	df 93       	push	r29
    3a32:	ec 01       	movw	r28, r24
    3a34:	8b 01       	movw	r16, r22
    3a36:	7d 83       	std	Y+5, r23	; 0x05
    3a38:	6c 83       	std	Y+4, r22	; 0x04
    3a3a:	ce 80       	ldd	r12, Y+6	; 0x06
    3a3c:	df 80       	ldd	r13, Y+7	; 0x07
    3a3e:	e8 84       	ldd	r14, Y+8	; 0x08
    3a40:	f9 84       	ldd	r15, Y+9	; 0x09
    3a42:	81 e0       	ldi	r24, 0x01	; 1
    3a44:	c8 16       	cp	r12, r24
    3a46:	d1 04       	cpc	r13, r1
    3a48:	e1 04       	cpc	r14, r1
    3a4a:	f1 04       	cpc	r15, r1
    3a4c:	09 f4       	brne	.+2      	; 0x3a50 <dir_sdi+0x32>
    3a4e:	88 c0       	rjmp	.+272    	; 0x3b60 <dir_sdi+0x142>
    3a50:	e8 81       	ld	r30, Y
    3a52:	f9 81       	ldd	r31, Y+1	; 0x01
    3a54:	86 89       	ldd	r24, Z+22	; 0x16
    3a56:	97 89       	ldd	r25, Z+23	; 0x17
    3a58:	a0 8d       	ldd	r26, Z+24	; 0x18
    3a5a:	b1 8d       	ldd	r27, Z+25	; 0x19
    3a5c:	c8 16       	cp	r12, r24
    3a5e:	d9 06       	cpc	r13, r25
    3a60:	ea 06       	cpc	r14, r26
    3a62:	fb 06       	cpc	r15, r27
    3a64:	08 f0       	brcs	.+2      	; 0x3a68 <dir_sdi+0x4a>
    3a66:	7e c0       	rjmp	.+252    	; 0x3b64 <dir_sdi+0x146>
    3a68:	c1 14       	cp	r12, r1
    3a6a:	d1 04       	cpc	r13, r1
    3a6c:	e1 04       	cpc	r14, r1
    3a6e:	f1 04       	cpc	r15, r1
    3a70:	39 f4       	brne	.+14     	; 0x3a80 <dir_sdi+0x62>
    3a72:	80 81       	ld	r24, Z
    3a74:	83 30       	cpi	r24, 0x03	; 3
    3a76:	21 f4       	brne	.+8      	; 0x3a80 <dir_sdi+0x62>
    3a78:	c6 a0       	ldd	r12, Z+38	; 0x26
    3a7a:	d7 a0       	ldd	r13, Z+39	; 0x27
    3a7c:	e0 a4       	ldd	r14, Z+40	; 0x28
    3a7e:	f1 a4       	ldd	r15, Z+41	; 0x29
    3a80:	c1 14       	cp	r12, r1
    3a82:	d1 04       	cpc	r13, r1
    3a84:	e1 04       	cpc	r14, r1
    3a86:	f1 04       	cpc	r15, r1
    3a88:	59 f4       	brne	.+22     	; 0x3aa0 <dir_sdi+0x82>
    3a8a:	80 85       	ldd	r24, Z+8	; 0x08
    3a8c:	91 85       	ldd	r25, Z+9	; 0x09
    3a8e:	08 17       	cp	r16, r24
    3a90:	19 07       	cpc	r17, r25
    3a92:	08 f0       	brcs	.+2      	; 0x3a96 <dir_sdi+0x78>
    3a94:	69 c0       	rjmp	.+210    	; 0x3b68 <dir_sdi+0x14a>
    3a96:	66 a1       	ldd	r22, Z+38	; 0x26
    3a98:	77 a1       	ldd	r23, Z+39	; 0x27
    3a9a:	80 a5       	ldd	r24, Z+40	; 0x28
    3a9c:	91 a5       	ldd	r25, Z+41	; 0x29
    3a9e:	33 c0       	rjmp	.+102    	; 0x3b06 <dir_sdi+0xe8>
    3aa0:	a2 80       	ldd	r10, Z+2	; 0x02
    3aa2:	80 e1       	ldi	r24, 0x10	; 16
    3aa4:	a8 9e       	mul	r10, r24
    3aa6:	50 01       	movw	r10, r0
    3aa8:	11 24       	eor	r1, r1
    3aaa:	24 c0       	rjmp	.+72     	; 0x3af4 <dir_sdi+0xd6>
    3aac:	b7 01       	movw	r22, r14
    3aae:	a6 01       	movw	r20, r12
    3ab0:	88 81       	ld	r24, Y
    3ab2:	99 81       	ldd	r25, Y+1	; 0x01
    3ab4:	0e 94 1f 1c 	call	0x383e	; 0x383e <get_fat>
    3ab8:	6b 01       	movw	r12, r22
    3aba:	7c 01       	movw	r14, r24
    3abc:	8f ef       	ldi	r24, 0xFF	; 255
    3abe:	c8 16       	cp	r12, r24
    3ac0:	d8 06       	cpc	r13, r24
    3ac2:	e8 06       	cpc	r14, r24
    3ac4:	f8 06       	cpc	r15, r24
    3ac6:	09 f4       	brne	.+2      	; 0x3aca <dir_sdi+0xac>
    3ac8:	51 c0       	rjmp	.+162    	; 0x3b6c <dir_sdi+0x14e>
    3aca:	82 e0       	ldi	r24, 0x02	; 2
    3acc:	c8 16       	cp	r12, r24
    3ace:	d1 04       	cpc	r13, r1
    3ad0:	e1 04       	cpc	r14, r1
    3ad2:	f1 04       	cpc	r15, r1
    3ad4:	08 f4       	brcc	.+2      	; 0x3ad8 <dir_sdi+0xba>
    3ad6:	4c c0       	rjmp	.+152    	; 0x3b70 <dir_sdi+0x152>
    3ad8:	e8 81       	ld	r30, Y
    3ada:	f9 81       	ldd	r31, Y+1	; 0x01
    3adc:	86 89       	ldd	r24, Z+22	; 0x16
    3ade:	97 89       	ldd	r25, Z+23	; 0x17
    3ae0:	a0 8d       	ldd	r26, Z+24	; 0x18
    3ae2:	b1 8d       	ldd	r27, Z+25	; 0x19
    3ae4:	c8 16       	cp	r12, r24
    3ae6:	d9 06       	cpc	r13, r25
    3ae8:	ea 06       	cpc	r14, r26
    3aea:	fb 06       	cpc	r15, r27
    3aec:	08 f0       	brcs	.+2      	; 0x3af0 <dir_sdi+0xd2>
    3aee:	42 c0       	rjmp	.+132    	; 0x3b74 <dir_sdi+0x156>
    3af0:	0a 19       	sub	r16, r10
    3af2:	1b 09       	sbc	r17, r11
    3af4:	0a 15       	cp	r16, r10
    3af6:	1b 05       	cpc	r17, r11
    3af8:	c8 f6       	brcc	.-78     	; 0x3aac <dir_sdi+0x8e>
    3afa:	b7 01       	movw	r22, r14
    3afc:	a6 01       	movw	r20, r12
    3afe:	88 81       	ld	r24, Y
    3b00:	99 81       	ldd	r25, Y+1	; 0x01
    3b02:	0e 94 f7 1b 	call	0x37ee	; 0x37ee <clust2sect>
    3b06:	ca 86       	std	Y+10, r12	; 0x0a
    3b08:	db 86       	std	Y+11, r13	; 0x0b
    3b0a:	ec 86       	std	Y+12, r14	; 0x0c
    3b0c:	fd 86       	std	Y+13, r15	; 0x0d
    3b0e:	61 15       	cp	r22, r1
    3b10:	71 05       	cpc	r23, r1
    3b12:	81 05       	cpc	r24, r1
    3b14:	91 05       	cpc	r25, r1
    3b16:	81 f1       	breq	.+96     	; 0x3b78 <dir_sdi+0x15a>
    3b18:	98 01       	movw	r18, r16
    3b1a:	32 95       	swap	r19
    3b1c:	22 95       	swap	r18
    3b1e:	2f 70       	andi	r18, 0x0F	; 15
    3b20:	23 27       	eor	r18, r19
    3b22:	3f 70       	andi	r19, 0x0F	; 15
    3b24:	23 27       	eor	r18, r19
    3b26:	dc 01       	movw	r26, r24
    3b28:	cb 01       	movw	r24, r22
    3b2a:	82 0f       	add	r24, r18
    3b2c:	93 1f       	adc	r25, r19
    3b2e:	a1 1d       	adc	r26, r1
    3b30:	b1 1d       	adc	r27, r1
    3b32:	8e 87       	std	Y+14, r24	; 0x0e
    3b34:	9f 87       	std	Y+15, r25	; 0x0f
    3b36:	a8 8b       	std	Y+16, r26	; 0x10
    3b38:	b9 8b       	std	Y+17, r27	; 0x11
    3b3a:	88 81       	ld	r24, Y
    3b3c:	99 81       	ldd	r25, Y+1	; 0x01
    3b3e:	c2 96       	adiw	r24, 0x32	; 50
    3b40:	0f 70       	andi	r16, 0x0F	; 15
    3b42:	11 27       	eor	r17, r17
    3b44:	00 0f       	add	r16, r16
    3b46:	11 1f       	adc	r17, r17
    3b48:	02 95       	swap	r16
    3b4a:	12 95       	swap	r17
    3b4c:	10 7f       	andi	r17, 0xF0	; 240
    3b4e:	10 27       	eor	r17, r16
    3b50:	00 7f       	andi	r16, 0xF0	; 240
    3b52:	10 27       	eor	r17, r16
    3b54:	08 0f       	add	r16, r24
    3b56:	19 1f       	adc	r17, r25
    3b58:	1b 8b       	std	Y+19, r17	; 0x13
    3b5a:	0a 8b       	std	Y+18, r16	; 0x12
    3b5c:	80 e0       	ldi	r24, 0x00	; 0
    3b5e:	0d c0       	rjmp	.+26     	; 0x3b7a <dir_sdi+0x15c>
    3b60:	82 e0       	ldi	r24, 0x02	; 2
    3b62:	0b c0       	rjmp	.+22     	; 0x3b7a <dir_sdi+0x15c>
    3b64:	82 e0       	ldi	r24, 0x02	; 2
    3b66:	09 c0       	rjmp	.+18     	; 0x3b7a <dir_sdi+0x15c>
    3b68:	82 e0       	ldi	r24, 0x02	; 2
    3b6a:	07 c0       	rjmp	.+14     	; 0x3b7a <dir_sdi+0x15c>
    3b6c:	81 e0       	ldi	r24, 0x01	; 1
    3b6e:	05 c0       	rjmp	.+10     	; 0x3b7a <dir_sdi+0x15c>
    3b70:	82 e0       	ldi	r24, 0x02	; 2
    3b72:	03 c0       	rjmp	.+6      	; 0x3b7a <dir_sdi+0x15c>
    3b74:	82 e0       	ldi	r24, 0x02	; 2
    3b76:	01 c0       	rjmp	.+2      	; 0x3b7a <dir_sdi+0x15c>
    3b78:	82 e0       	ldi	r24, 0x02	; 2
    3b7a:	df 91       	pop	r29
    3b7c:	cf 91       	pop	r28
    3b7e:	1f 91       	pop	r17
    3b80:	0f 91       	pop	r16
    3b82:	ff 90       	pop	r15
    3b84:	ef 90       	pop	r14
    3b86:	df 90       	pop	r13
    3b88:	cf 90       	pop	r12
    3b8a:	bf 90       	pop	r11
    3b8c:	af 90       	pop	r10
    3b8e:	08 95       	ret

00003b90 <put_fat>:
    3b90:	4f 92       	push	r4
    3b92:	5f 92       	push	r5
    3b94:	6f 92       	push	r6
    3b96:	7f 92       	push	r7
    3b98:	8f 92       	push	r8
    3b9a:	9f 92       	push	r9
    3b9c:	af 92       	push	r10
    3b9e:	bf 92       	push	r11
    3ba0:	cf 92       	push	r12
    3ba2:	df 92       	push	r13
    3ba4:	ef 92       	push	r14
    3ba6:	ff 92       	push	r15
    3ba8:	0f 93       	push	r16
    3baa:	1f 93       	push	r17
    3bac:	cf 93       	push	r28
    3bae:	df 93       	push	r29
    3bb0:	42 30       	cpi	r20, 0x02	; 2
    3bb2:	51 05       	cpc	r21, r1
    3bb4:	61 05       	cpc	r22, r1
    3bb6:	71 05       	cpc	r23, r1
    3bb8:	08 f4       	brcc	.+2      	; 0x3bbc <put_fat+0x2c>
    3bba:	e4 c0       	rjmp	.+456    	; 0x3d84 <put_fat+0x1f4>
    3bbc:	fc 01       	movw	r30, r24
    3bbe:	c6 88       	ldd	r12, Z+22	; 0x16
    3bc0:	d7 88       	ldd	r13, Z+23	; 0x17
    3bc2:	e0 8c       	ldd	r14, Z+24	; 0x18
    3bc4:	f1 8c       	ldd	r15, Z+25	; 0x19
    3bc6:	4c 15       	cp	r20, r12
    3bc8:	5d 05       	cpc	r21, r13
    3bca:	6e 05       	cpc	r22, r14
    3bcc:	7f 05       	cpc	r23, r15
    3bce:	08 f0       	brcs	.+2      	; 0x3bd2 <put_fat+0x42>
    3bd0:	db c0       	rjmp	.+438    	; 0x3d88 <put_fat+0x1f8>
    3bd2:	28 01       	movw	r4, r16
    3bd4:	39 01       	movw	r6, r18
    3bd6:	6a 01       	movw	r12, r20
    3bd8:	7b 01       	movw	r14, r22
    3bda:	ec 01       	movw	r28, r24
    3bdc:	80 81       	ld	r24, Z
    3bde:	82 30       	cpi	r24, 0x02	; 2
    3be0:	09 f4       	brne	.+2      	; 0x3be4 <put_fat+0x54>
    3be2:	6c c0       	rjmp	.+216    	; 0x3cbc <put_fat+0x12c>
    3be4:	83 30       	cpi	r24, 0x03	; 3
    3be6:	09 f4       	brne	.+2      	; 0x3bea <put_fat+0x5a>
    3be8:	8f c0       	rjmp	.+286    	; 0x3d08 <put_fat+0x178>
    3bea:	81 30       	cpi	r24, 0x01	; 1
    3bec:	09 f0       	breq	.+2      	; 0x3bf0 <put_fat+0x60>
    3bee:	ce c0       	rjmp	.+412    	; 0x3d8c <put_fat+0x1fc>
    3bf0:	5a 01       	movw	r10, r20
    3bf2:	b6 94       	lsr	r11
    3bf4:	a7 94       	ror	r10
    3bf6:	a4 0e       	add	r10, r20
    3bf8:	b5 1e       	adc	r11, r21
    3bfa:	42 a1       	ldd	r20, Z+34	; 0x22
    3bfc:	53 a1       	ldd	r21, Z+35	; 0x23
    3bfe:	64 a1       	ldd	r22, Z+36	; 0x24
    3c00:	75 a1       	ldd	r23, Z+37	; 0x25
    3c02:	c5 01       	movw	r24, r10
    3c04:	89 2f       	mov	r24, r25
    3c06:	99 27       	eor	r25, r25
    3c08:	86 95       	lsr	r24
    3c0a:	48 0f       	add	r20, r24
    3c0c:	59 1f       	adc	r21, r25
    3c0e:	61 1d       	adc	r22, r1
    3c10:	71 1d       	adc	r23, r1
    3c12:	cf 01       	movw	r24, r30
    3c14:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    3c18:	81 11       	cpse	r24, r1
    3c1a:	b9 c0       	rjmp	.+370    	; 0x3d8e <put_fat+0x1fe>
    3c1c:	85 01       	movw	r16, r10
    3c1e:	0f 5f       	subi	r16, 0xFF	; 255
    3c20:	1f 4f       	sbci	r17, 0xFF	; 255
    3c22:	c5 01       	movw	r24, r10
    3c24:	91 70       	andi	r25, 0x01	; 1
    3c26:	46 01       	movw	r8, r12
    3c28:	57 01       	movw	r10, r14
    3c2a:	f1 e0       	ldi	r31, 0x01	; 1
    3c2c:	8f 22       	and	r8, r31
    3c2e:	99 24       	eor	r9, r9
    3c30:	aa 24       	eor	r10, r10
    3c32:	bb 24       	eor	r11, r11
    3c34:	c0 fe       	sbrs	r12, 0
    3c36:	0b c0       	rjmp	.+22     	; 0x3c4e <put_fat+0xbe>
    3c38:	fe 01       	movw	r30, r28
    3c3a:	e8 0f       	add	r30, r24
    3c3c:	f9 1f       	adc	r31, r25
    3c3e:	42 a9       	ldd	r20, Z+50	; 0x32
    3c40:	50 e1       	ldi	r21, 0x10	; 16
    3c42:	45 9e       	mul	r4, r21
    3c44:	90 01       	movw	r18, r0
    3c46:	11 24       	eor	r1, r1
    3c48:	4f 70       	andi	r20, 0x0F	; 15
    3c4a:	24 2b       	or	r18, r20
    3c4c:	01 c0       	rjmp	.+2      	; 0x3c50 <put_fat+0xc0>
    3c4e:	24 2d       	mov	r18, r4
    3c50:	fe 01       	movw	r30, r28
    3c52:	e8 0f       	add	r30, r24
    3c54:	f9 1f       	adc	r31, r25
    3c56:	22 ab       	std	Z+50, r18	; 0x32
    3c58:	81 e0       	ldi	r24, 0x01	; 1
    3c5a:	8c 83       	std	Y+4, r24	; 0x04
    3c5c:	4a a1       	ldd	r20, Y+34	; 0x22
    3c5e:	5b a1       	ldd	r21, Y+35	; 0x23
    3c60:	6c a1       	ldd	r22, Y+36	; 0x24
    3c62:	7d a1       	ldd	r23, Y+37	; 0x25
    3c64:	c8 01       	movw	r24, r16
    3c66:	89 2f       	mov	r24, r25
    3c68:	99 27       	eor	r25, r25
    3c6a:	86 95       	lsr	r24
    3c6c:	48 0f       	add	r20, r24
    3c6e:	59 1f       	adc	r21, r25
    3c70:	61 1d       	adc	r22, r1
    3c72:	71 1d       	adc	r23, r1
    3c74:	ce 01       	movw	r24, r28
    3c76:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    3c7a:	81 11       	cpse	r24, r1
    3c7c:	88 c0       	rjmp	.+272    	; 0x3d8e <put_fat+0x1fe>
    3c7e:	98 01       	movw	r18, r16
    3c80:	31 70       	andi	r19, 0x01	; 1
    3c82:	89 28       	or	r8, r9
    3c84:	8a 28       	or	r8, r10
    3c86:	8b 28       	or	r8, r11
    3c88:	49 f0       	breq	.+18     	; 0x3c9c <put_fat+0x10c>
    3c8a:	68 94       	set
    3c8c:	13 f8       	bld	r1, 3
    3c8e:	76 94       	lsr	r7
    3c90:	67 94       	ror	r6
    3c92:	57 94       	ror	r5
    3c94:	47 94       	ror	r4
    3c96:	16 94       	lsr	r1
    3c98:	d1 f7       	brne	.-12     	; 0x3c8e <put_fat+0xfe>
    3c9a:	09 c0       	rjmp	.+18     	; 0x3cae <put_fat+0x11e>
    3c9c:	fe 01       	movw	r30, r28
    3c9e:	e2 0f       	add	r30, r18
    3ca0:	f3 1f       	adc	r31, r19
    3ca2:	42 a9       	ldd	r20, Z+50	; 0x32
    3ca4:	40 7f       	andi	r20, 0xF0	; 240
    3ca6:	95 2d       	mov	r25, r5
    3ca8:	9f 70       	andi	r25, 0x0F	; 15
    3caa:	44 2e       	mov	r4, r20
    3cac:	49 2a       	or	r4, r25
    3cae:	fe 01       	movw	r30, r28
    3cb0:	e2 0f       	add	r30, r18
    3cb2:	f3 1f       	adc	r31, r19
    3cb4:	42 aa       	std	Z+50, r4	; 0x32
    3cb6:	91 e0       	ldi	r25, 0x01	; 1
    3cb8:	9c 83       	std	Y+4, r25	; 0x04
    3cba:	69 c0       	rjmp	.+210    	; 0x3d8e <put_fat+0x1fe>
    3cbc:	42 a1       	ldd	r20, Z+34	; 0x22
    3cbe:	53 a1       	ldd	r21, Z+35	; 0x23
    3cc0:	64 a1       	ldd	r22, Z+36	; 0x24
    3cc2:	75 a1       	ldd	r23, Z+37	; 0x25
    3cc4:	bb 27       	eor	r27, r27
    3cc6:	af 2d       	mov	r26, r15
    3cc8:	9e 2d       	mov	r25, r14
    3cca:	8d 2d       	mov	r24, r13
    3ccc:	48 0f       	add	r20, r24
    3cce:	59 1f       	adc	r21, r25
    3cd0:	6a 1f       	adc	r22, r26
    3cd2:	7b 1f       	adc	r23, r27
    3cd4:	cf 01       	movw	r24, r30
    3cd6:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    3cda:	81 11       	cpse	r24, r1
    3cdc:	58 c0       	rjmp	.+176    	; 0x3d8e <put_fat+0x1fe>
    3cde:	cc 0c       	add	r12, r12
    3ce0:	dd 1c       	adc	r13, r13
    3ce2:	ee 1c       	adc	r14, r14
    3ce4:	ff 1c       	adc	r15, r15
    3ce6:	e8 94       	clt
    3ce8:	c0 f8       	bld	r12, 0
    3cea:	91 e0       	ldi	r25, 0x01	; 1
    3cec:	d9 22       	and	r13, r25
    3cee:	ee 24       	eor	r14, r14
    3cf0:	ff 24       	eor	r15, r15
    3cf2:	e2 e3       	ldi	r30, 0x32	; 50
    3cf4:	ce 0e       	add	r12, r30
    3cf6:	d1 1c       	adc	r13, r1
    3cf8:	fe 01       	movw	r30, r28
    3cfa:	ec 0d       	add	r30, r12
    3cfc:	fd 1d       	adc	r31, r13
    3cfe:	51 82       	std	Z+1, r5	; 0x01
    3d00:	40 82       	st	Z, r4
    3d02:	91 e0       	ldi	r25, 0x01	; 1
    3d04:	9c 83       	std	Y+4, r25	; 0x04
    3d06:	43 c0       	rjmp	.+134    	; 0x3d8e <put_fat+0x1fe>
    3d08:	42 a1       	ldd	r20, Z+34	; 0x22
    3d0a:	53 a1       	ldd	r21, Z+35	; 0x23
    3d0c:	64 a1       	ldd	r22, Z+36	; 0x24
    3d0e:	75 a1       	ldd	r23, Z+37	; 0x25
    3d10:	d7 01       	movw	r26, r14
    3d12:	c6 01       	movw	r24, r12
    3d14:	68 94       	set
    3d16:	16 f8       	bld	r1, 6
    3d18:	b6 95       	lsr	r27
    3d1a:	a7 95       	ror	r26
    3d1c:	97 95       	ror	r25
    3d1e:	87 95       	ror	r24
    3d20:	16 94       	lsr	r1
    3d22:	d1 f7       	brne	.-12     	; 0x3d18 <put_fat+0x188>
    3d24:	48 0f       	add	r20, r24
    3d26:	59 1f       	adc	r21, r25
    3d28:	6a 1f       	adc	r22, r26
    3d2a:	7b 1f       	adc	r23, r27
    3d2c:	cf 01       	movw	r24, r30
    3d2e:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    3d32:	81 11       	cpse	r24, r1
    3d34:	2c c0       	rjmp	.+88     	; 0x3d8e <put_fat+0x1fe>
    3d36:	cc 0c       	add	r12, r12
    3d38:	dd 1c       	adc	r13, r13
    3d3a:	ee 1c       	adc	r14, r14
    3d3c:	ff 1c       	adc	r15, r15
    3d3e:	cc 0c       	add	r12, r12
    3d40:	dd 1c       	adc	r13, r13
    3d42:	ee 1c       	adc	r14, r14
    3d44:	ff 1c       	adc	r15, r15
    3d46:	fc ef       	ldi	r31, 0xFC	; 252
    3d48:	cf 22       	and	r12, r31
    3d4a:	f1 e0       	ldi	r31, 0x01	; 1
    3d4c:	df 22       	and	r13, r31
    3d4e:	ee 24       	eor	r14, r14
    3d50:	ff 24       	eor	r15, r15
    3d52:	22 e3       	ldi	r18, 0x32	; 50
    3d54:	c2 0e       	add	r12, r18
    3d56:	d1 1c       	adc	r13, r1
    3d58:	fe 01       	movw	r30, r28
    3d5a:	ec 0d       	add	r30, r12
    3d5c:	fd 1d       	adc	r31, r13
    3d5e:	00 81       	ld	r16, Z
    3d60:	11 81       	ldd	r17, Z+1	; 0x01
    3d62:	22 81       	ldd	r18, Z+2	; 0x02
    3d64:	33 81       	ldd	r19, Z+3	; 0x03
    3d66:	00 27       	eor	r16, r16
    3d68:	11 27       	eor	r17, r17
    3d6a:	22 27       	eor	r18, r18
    3d6c:	30 7f       	andi	r19, 0xF0	; 240
    3d6e:	40 2a       	or	r4, r16
    3d70:	51 2a       	or	r5, r17
    3d72:	62 2a       	or	r6, r18
    3d74:	73 2a       	or	r7, r19
    3d76:	40 82       	st	Z, r4
    3d78:	51 82       	std	Z+1, r5	; 0x01
    3d7a:	62 82       	std	Z+2, r6	; 0x02
    3d7c:	73 82       	std	Z+3, r7	; 0x03
    3d7e:	91 e0       	ldi	r25, 0x01	; 1
    3d80:	9c 83       	std	Y+4, r25	; 0x04
    3d82:	05 c0       	rjmp	.+10     	; 0x3d8e <put_fat+0x1fe>
    3d84:	82 e0       	ldi	r24, 0x02	; 2
    3d86:	03 c0       	rjmp	.+6      	; 0x3d8e <put_fat+0x1fe>
    3d88:	82 e0       	ldi	r24, 0x02	; 2
    3d8a:	01 c0       	rjmp	.+2      	; 0x3d8e <put_fat+0x1fe>
    3d8c:	82 e0       	ldi	r24, 0x02	; 2
    3d8e:	df 91       	pop	r29
    3d90:	cf 91       	pop	r28
    3d92:	1f 91       	pop	r17
    3d94:	0f 91       	pop	r16
    3d96:	ff 90       	pop	r15
    3d98:	ef 90       	pop	r14
    3d9a:	df 90       	pop	r13
    3d9c:	cf 90       	pop	r12
    3d9e:	bf 90       	pop	r11
    3da0:	af 90       	pop	r10
    3da2:	9f 90       	pop	r9
    3da4:	8f 90       	pop	r8
    3da6:	7f 90       	pop	r7
    3da8:	6f 90       	pop	r6
    3daa:	5f 90       	pop	r5
    3dac:	4f 90       	pop	r4
    3dae:	08 95       	ret

00003db0 <create_chain>:
    3db0:	4f 92       	push	r4
    3db2:	5f 92       	push	r5
    3db4:	6f 92       	push	r6
    3db6:	7f 92       	push	r7
    3db8:	8f 92       	push	r8
    3dba:	9f 92       	push	r9
    3dbc:	af 92       	push	r10
    3dbe:	bf 92       	push	r11
    3dc0:	cf 92       	push	r12
    3dc2:	df 92       	push	r13
    3dc4:	ef 92       	push	r14
    3dc6:	ff 92       	push	r15
    3dc8:	0f 93       	push	r16
    3dca:	1f 93       	push	r17
    3dcc:	cf 93       	push	r28
    3dce:	df 93       	push	r29
    3dd0:	ec 01       	movw	r28, r24
    3dd2:	2a 01       	movw	r4, r20
    3dd4:	3b 01       	movw	r6, r22
    3dd6:	41 15       	cp	r20, r1
    3dd8:	51 05       	cpc	r21, r1
    3dda:	61 05       	cpc	r22, r1
    3ddc:	71 05       	cpc	r23, r1
    3dde:	99 f4       	brne	.+38     	; 0x3e06 <create_chain+0x56>
    3de0:	8a 84       	ldd	r8, Y+10	; 0x0a
    3de2:	9b 84       	ldd	r9, Y+11	; 0x0b
    3de4:	ac 84       	ldd	r10, Y+12	; 0x0c
    3de6:	bd 84       	ldd	r11, Y+13	; 0x0d
    3de8:	81 14       	cp	r8, r1
    3dea:	91 04       	cpc	r9, r1
    3dec:	a1 04       	cpc	r10, r1
    3dee:	b1 04       	cpc	r11, r1
    3df0:	31 f1       	breq	.+76     	; 0x3e3e <create_chain+0x8e>
    3df2:	8e 89       	ldd	r24, Y+22	; 0x16
    3df4:	9f 89       	ldd	r25, Y+23	; 0x17
    3df6:	a8 8d       	ldd	r26, Y+24	; 0x18
    3df8:	b9 8d       	ldd	r27, Y+25	; 0x19
    3dfa:	88 16       	cp	r8, r24
    3dfc:	99 06       	cpc	r9, r25
    3dfe:	aa 06       	cpc	r10, r26
    3e00:	bb 06       	cpc	r11, r27
    3e02:	10 f5       	brcc	.+68     	; 0x3e48 <create_chain+0x98>
    3e04:	25 c0       	rjmp	.+74     	; 0x3e50 <create_chain+0xa0>
    3e06:	0e 94 1f 1c 	call	0x383e	; 0x383e <get_fat>
    3e0a:	62 30       	cpi	r22, 0x02	; 2
    3e0c:	71 05       	cpc	r23, r1
    3e0e:	81 05       	cpc	r24, r1
    3e10:	91 05       	cpc	r25, r1
    3e12:	08 f4       	brcc	.+2      	; 0x3e16 <create_chain+0x66>
    3e14:	93 c0       	rjmp	.+294    	; 0x3f3c <create_chain+0x18c>
    3e16:	6f 3f       	cpi	r22, 0xFF	; 255
    3e18:	2f ef       	ldi	r18, 0xFF	; 255
    3e1a:	72 07       	cpc	r23, r18
    3e1c:	82 07       	cpc	r24, r18
    3e1e:	92 07       	cpc	r25, r18
    3e20:	09 f4       	brne	.+2      	; 0x3e24 <create_chain+0x74>
    3e22:	91 c0       	rjmp	.+290    	; 0x3f46 <create_chain+0x196>
    3e24:	ce 88       	ldd	r12, Y+22	; 0x16
    3e26:	df 88       	ldd	r13, Y+23	; 0x17
    3e28:	e8 8c       	ldd	r14, Y+24	; 0x18
    3e2a:	f9 8c       	ldd	r15, Y+25	; 0x19
    3e2c:	6c 15       	cp	r22, r12
    3e2e:	7d 05       	cpc	r23, r13
    3e30:	8e 05       	cpc	r24, r14
    3e32:	9f 05       	cpc	r25, r15
    3e34:	08 f4       	brcc	.+2      	; 0x3e38 <create_chain+0x88>
    3e36:	8b c0       	rjmp	.+278    	; 0x3f4e <create_chain+0x19e>
    3e38:	53 01       	movw	r10, r6
    3e3a:	42 01       	movw	r8, r4
    3e3c:	09 c0       	rjmp	.+18     	; 0x3e50 <create_chain+0xa0>
    3e3e:	81 2c       	mov	r8, r1
    3e40:	91 2c       	mov	r9, r1
    3e42:	54 01       	movw	r10, r8
    3e44:	83 94       	inc	r8
    3e46:	04 c0       	rjmp	.+8      	; 0x3e50 <create_chain+0xa0>
    3e48:	81 2c       	mov	r8, r1
    3e4a:	91 2c       	mov	r9, r1
    3e4c:	54 01       	movw	r10, r8
    3e4e:	83 94       	inc	r8
    3e50:	75 01       	movw	r14, r10
    3e52:	64 01       	movw	r12, r8
    3e54:	8f ef       	ldi	r24, 0xFF	; 255
    3e56:	c8 1a       	sub	r12, r24
    3e58:	d8 0a       	sbc	r13, r24
    3e5a:	e8 0a       	sbc	r14, r24
    3e5c:	f8 0a       	sbc	r15, r24
    3e5e:	8e 89       	ldd	r24, Y+22	; 0x16
    3e60:	9f 89       	ldd	r25, Y+23	; 0x17
    3e62:	a8 8d       	ldd	r26, Y+24	; 0x18
    3e64:	b9 8d       	ldd	r27, Y+25	; 0x19
    3e66:	c8 16       	cp	r12, r24
    3e68:	d9 06       	cpc	r13, r25
    3e6a:	ea 06       	cpc	r14, r26
    3e6c:	fb 06       	cpc	r15, r27
    3e6e:	60 f0       	brcs	.+24     	; 0x3e88 <create_chain+0xd8>
    3e70:	22 e0       	ldi	r18, 0x02	; 2
    3e72:	82 16       	cp	r8, r18
    3e74:	91 04       	cpc	r9, r1
    3e76:	a1 04       	cpc	r10, r1
    3e78:	b1 04       	cpc	r11, r1
    3e7a:	08 f4       	brcc	.+2      	; 0x3e7e <create_chain+0xce>
    3e7c:	6c c0       	rjmp	.+216    	; 0x3f56 <create_chain+0x1a6>
    3e7e:	c1 2c       	mov	r12, r1
    3e80:	d1 2c       	mov	r13, r1
    3e82:	76 01       	movw	r14, r12
    3e84:	68 94       	set
    3e86:	c1 f8       	bld	r12, 1
    3e88:	b7 01       	movw	r22, r14
    3e8a:	a6 01       	movw	r20, r12
    3e8c:	ce 01       	movw	r24, r28
    3e8e:	0e 94 1f 1c 	call	0x383e	; 0x383e <get_fat>
    3e92:	61 15       	cp	r22, r1
    3e94:	71 05       	cpc	r23, r1
    3e96:	81 05       	cpc	r24, r1
    3e98:	91 05       	cpc	r25, r1
    3e9a:	99 f0       	breq	.+38     	; 0x3ec2 <create_chain+0x112>
    3e9c:	6f 3f       	cpi	r22, 0xFF	; 255
    3e9e:	2f ef       	ldi	r18, 0xFF	; 255
    3ea0:	72 07       	cpc	r23, r18
    3ea2:	82 07       	cpc	r24, r18
    3ea4:	92 07       	cpc	r25, r18
    3ea6:	09 f4       	brne	.+2      	; 0x3eaa <create_chain+0xfa>
    3ea8:	5b c0       	rjmp	.+182    	; 0x3f60 <create_chain+0x1b0>
    3eaa:	61 30       	cpi	r22, 0x01	; 1
    3eac:	71 05       	cpc	r23, r1
    3eae:	81 05       	cpc	r24, r1
    3eb0:	91 05       	cpc	r25, r1
    3eb2:	09 f4       	brne	.+2      	; 0x3eb6 <create_chain+0x106>
    3eb4:	59 c0       	rjmp	.+178    	; 0x3f68 <create_chain+0x1b8>
    3eb6:	c8 14       	cp	r12, r8
    3eb8:	d9 04       	cpc	r13, r9
    3eba:	ea 04       	cpc	r14, r10
    3ebc:	fb 04       	cpc	r15, r11
    3ebe:	51 f6       	brne	.-108    	; 0x3e54 <create_chain+0xa4>
    3ec0:	57 c0       	rjmp	.+174    	; 0x3f70 <create_chain+0x1c0>
    3ec2:	0f ef       	ldi	r16, 0xFF	; 255
    3ec4:	1f ef       	ldi	r17, 0xFF	; 255
    3ec6:	2f ef       	ldi	r18, 0xFF	; 255
    3ec8:	3f e0       	ldi	r19, 0x0F	; 15
    3eca:	b7 01       	movw	r22, r14
    3ecc:	a6 01       	movw	r20, r12
    3ece:	ce 01       	movw	r24, r28
    3ed0:	0e 94 c8 1d 	call	0x3b90	; 0x3b90 <put_fat>
    3ed4:	81 11       	cpse	r24, r1
    3ed6:	0c c0       	rjmp	.+24     	; 0x3ef0 <create_chain+0x140>
    3ed8:	41 14       	cp	r4, r1
    3eda:	51 04       	cpc	r5, r1
    3edc:	61 04       	cpc	r6, r1
    3ede:	71 04       	cpc	r7, r1
    3ee0:	39 f0       	breq	.+14     	; 0x3ef0 <create_chain+0x140>
    3ee2:	97 01       	movw	r18, r14
    3ee4:	86 01       	movw	r16, r12
    3ee6:	b3 01       	movw	r22, r6
    3ee8:	a2 01       	movw	r20, r4
    3eea:	ce 01       	movw	r24, r28
    3eec:	0e 94 c8 1d 	call	0x3b90	; 0x3b90 <put_fat>
    3ef0:	81 11       	cpse	r24, r1
    3ef2:	1d c0       	rjmp	.+58     	; 0x3f2e <create_chain+0x17e>
    3ef4:	ca 86       	std	Y+10, r12	; 0x0a
    3ef6:	db 86       	std	Y+11, r13	; 0x0b
    3ef8:	ec 86       	std	Y+12, r14	; 0x0c
    3efa:	fd 86       	std	Y+13, r15	; 0x0d
    3efc:	8e 85       	ldd	r24, Y+14	; 0x0e
    3efe:	9f 85       	ldd	r25, Y+15	; 0x0f
    3f00:	a8 89       	ldd	r26, Y+16	; 0x10
    3f02:	b9 89       	ldd	r27, Y+17	; 0x11
    3f04:	8f 3f       	cpi	r24, 0xFF	; 255
    3f06:	2f ef       	ldi	r18, 0xFF	; 255
    3f08:	92 07       	cpc	r25, r18
    3f0a:	a2 07       	cpc	r26, r18
    3f0c:	b2 07       	cpc	r27, r18
    3f0e:	a9 f1       	breq	.+106    	; 0x3f7a <create_chain+0x1ca>
    3f10:	01 97       	sbiw	r24, 0x01	; 1
    3f12:	a1 09       	sbc	r26, r1
    3f14:	b1 09       	sbc	r27, r1
    3f16:	8e 87       	std	Y+14, r24	; 0x0e
    3f18:	9f 87       	std	Y+15, r25	; 0x0f
    3f1a:	a8 8b       	std	Y+16, r26	; 0x10
    3f1c:	b9 8b       	std	Y+17, r27	; 0x11
    3f1e:	8d 81       	ldd	r24, Y+5	; 0x05
    3f20:	81 60       	ori	r24, 0x01	; 1
    3f22:	8d 83       	std	Y+5, r24	; 0x05
    3f24:	4c 2d       	mov	r20, r12
    3f26:	3d 2d       	mov	r19, r13
    3f28:	2e 2d       	mov	r18, r14
    3f2a:	9f 2d       	mov	r25, r15
    3f2c:	2f c0       	rjmp	.+94     	; 0x3f8c <create_chain+0x1dc>
    3f2e:	81 30       	cpi	r24, 0x01	; 1
    3f30:	49 f5       	brne	.+82     	; 0x3f84 <create_chain+0x1d4>
    3f32:	4f ef       	ldi	r20, 0xFF	; 255
    3f34:	3f ef       	ldi	r19, 0xFF	; 255
    3f36:	2f ef       	ldi	r18, 0xFF	; 255
    3f38:	9f ef       	ldi	r25, 0xFF	; 255
    3f3a:	28 c0       	rjmp	.+80     	; 0x3f8c <create_chain+0x1dc>
    3f3c:	41 e0       	ldi	r20, 0x01	; 1
    3f3e:	30 e0       	ldi	r19, 0x00	; 0
    3f40:	20 e0       	ldi	r18, 0x00	; 0
    3f42:	90 e0       	ldi	r25, 0x00	; 0
    3f44:	23 c0       	rjmp	.+70     	; 0x3f8c <create_chain+0x1dc>
    3f46:	46 2f       	mov	r20, r22
    3f48:	37 2f       	mov	r19, r23
    3f4a:	28 2f       	mov	r18, r24
    3f4c:	1f c0       	rjmp	.+62     	; 0x3f8c <create_chain+0x1dc>
    3f4e:	46 2f       	mov	r20, r22
    3f50:	37 2f       	mov	r19, r23
    3f52:	28 2f       	mov	r18, r24
    3f54:	1b c0       	rjmp	.+54     	; 0x3f8c <create_chain+0x1dc>
    3f56:	40 e0       	ldi	r20, 0x00	; 0
    3f58:	30 e0       	ldi	r19, 0x00	; 0
    3f5a:	20 e0       	ldi	r18, 0x00	; 0
    3f5c:	90 e0       	ldi	r25, 0x00	; 0
    3f5e:	16 c0       	rjmp	.+44     	; 0x3f8c <create_chain+0x1dc>
    3f60:	46 2f       	mov	r20, r22
    3f62:	37 2f       	mov	r19, r23
    3f64:	28 2f       	mov	r18, r24
    3f66:	12 c0       	rjmp	.+36     	; 0x3f8c <create_chain+0x1dc>
    3f68:	46 2f       	mov	r20, r22
    3f6a:	37 2f       	mov	r19, r23
    3f6c:	28 2f       	mov	r18, r24
    3f6e:	0e c0       	rjmp	.+28     	; 0x3f8c <create_chain+0x1dc>
    3f70:	40 e0       	ldi	r20, 0x00	; 0
    3f72:	30 e0       	ldi	r19, 0x00	; 0
    3f74:	20 e0       	ldi	r18, 0x00	; 0
    3f76:	90 e0       	ldi	r25, 0x00	; 0
    3f78:	09 c0       	rjmp	.+18     	; 0x3f8c <create_chain+0x1dc>
    3f7a:	4c 2d       	mov	r20, r12
    3f7c:	3d 2d       	mov	r19, r13
    3f7e:	2e 2d       	mov	r18, r14
    3f80:	9f 2d       	mov	r25, r15
    3f82:	04 c0       	rjmp	.+8      	; 0x3f8c <create_chain+0x1dc>
    3f84:	41 e0       	ldi	r20, 0x01	; 1
    3f86:	30 e0       	ldi	r19, 0x00	; 0
    3f88:	20 e0       	ldi	r18, 0x00	; 0
    3f8a:	90 e0       	ldi	r25, 0x00	; 0
    3f8c:	64 2f       	mov	r22, r20
    3f8e:	73 2f       	mov	r23, r19
    3f90:	82 2f       	mov	r24, r18
    3f92:	df 91       	pop	r29
    3f94:	cf 91       	pop	r28
    3f96:	1f 91       	pop	r17
    3f98:	0f 91       	pop	r16
    3f9a:	ff 90       	pop	r15
    3f9c:	ef 90       	pop	r14
    3f9e:	df 90       	pop	r13
    3fa0:	cf 90       	pop	r12
    3fa2:	bf 90       	pop	r11
    3fa4:	af 90       	pop	r10
    3fa6:	9f 90       	pop	r9
    3fa8:	8f 90       	pop	r8
    3faa:	7f 90       	pop	r7
    3fac:	6f 90       	pop	r6
    3fae:	5f 90       	pop	r5
    3fb0:	4f 90       	pop	r4
    3fb2:	08 95       	ret

00003fb4 <dir_next>:
    3fb4:	8f 92       	push	r8
    3fb6:	9f 92       	push	r9
    3fb8:	af 92       	push	r10
    3fba:	bf 92       	push	r11
    3fbc:	cf 92       	push	r12
    3fbe:	df 92       	push	r13
    3fc0:	ef 92       	push	r14
    3fc2:	ff 92       	push	r15
    3fc4:	0f 93       	push	r16
    3fc6:	1f 93       	push	r17
    3fc8:	cf 93       	push	r28
    3fca:	df 93       	push	r29
    3fcc:	dc 01       	movw	r26, r24
    3fce:	14 96       	adiw	r26, 0x04	; 4
    3fd0:	cd 91       	ld	r28, X+
    3fd2:	dc 91       	ld	r29, X
    3fd4:	15 97       	sbiw	r26, 0x05	; 5
    3fd6:	21 96       	adiw	r28, 0x01	; 1
    3fd8:	09 f4       	brne	.+2      	; 0x3fdc <dir_next+0x28>
    3fda:	ff c0       	rjmp	.+510    	; 0x41da <dir_next+0x226>
    3fdc:	1e 96       	adiw	r26, 0x0e	; 14
    3fde:	8d 90       	ld	r8, X+
    3fe0:	9d 90       	ld	r9, X+
    3fe2:	ad 90       	ld	r10, X+
    3fe4:	bc 90       	ld	r11, X
    3fe6:	51 97       	sbiw	r26, 0x11	; 17
    3fe8:	81 14       	cp	r8, r1
    3fea:	91 04       	cpc	r9, r1
    3fec:	a1 04       	cpc	r10, r1
    3fee:	b1 04       	cpc	r11, r1
    3ff0:	09 f4       	brne	.+2      	; 0x3ff4 <dir_next+0x40>
    3ff2:	f5 c0       	rjmp	.+490    	; 0x41de <dir_next+0x22a>
    3ff4:	7b 01       	movw	r14, r22
    3ff6:	8c 01       	movw	r16, r24
    3ff8:	6e 01       	movw	r12, r28
    3ffa:	bf e0       	ldi	r27, 0x0F	; 15
    3ffc:	cb 22       	and	r12, r27
    3ffe:	dd 24       	eor	r13, r13
    4000:	c1 14       	cp	r12, r1
    4002:	d1 04       	cpc	r13, r1
    4004:	09 f0       	breq	.+2      	; 0x4008 <dir_next+0x54>
    4006:	d3 c0       	rjmp	.+422    	; 0x41ae <dir_next+0x1fa>
    4008:	ef ef       	ldi	r30, 0xFF	; 255
    400a:	8e 1a       	sub	r8, r30
    400c:	9e 0a       	sbc	r9, r30
    400e:	ae 0a       	sbc	r10, r30
    4010:	be 0a       	sbc	r11, r30
    4012:	dc 01       	movw	r26, r24
    4014:	1e 96       	adiw	r26, 0x0e	; 14
    4016:	8d 92       	st	X+, r8
    4018:	9d 92       	st	X+, r9
    401a:	ad 92       	st	X+, r10
    401c:	bc 92       	st	X, r11
    401e:	51 97       	sbiw	r26, 0x11	; 17
    4020:	1a 96       	adiw	r26, 0x0a	; 10
    4022:	4d 91       	ld	r20, X+
    4024:	5d 91       	ld	r21, X+
    4026:	6d 91       	ld	r22, X+
    4028:	7c 91       	ld	r23, X
    402a:	1d 97       	sbiw	r26, 0x0d	; 13
    402c:	41 15       	cp	r20, r1
    402e:	51 05       	cpc	r21, r1
    4030:	61 05       	cpc	r22, r1
    4032:	71 05       	cpc	r23, r1
    4034:	49 f4       	brne	.+18     	; 0x4048 <dir_next+0x94>
    4036:	ed 91       	ld	r30, X+
    4038:	fc 91       	ld	r31, X
    403a:	80 85       	ldd	r24, Z+8	; 0x08
    403c:	91 85       	ldd	r25, Z+9	; 0x09
    403e:	c8 17       	cp	r28, r24
    4040:	d9 07       	cpc	r29, r25
    4042:	08 f0       	brcs	.+2      	; 0x4046 <dir_next+0x92>
    4044:	ce c0       	rjmp	.+412    	; 0x41e2 <dir_next+0x22e>
    4046:	b3 c0       	rjmp	.+358    	; 0x41ae <dir_next+0x1fa>
    4048:	dc 01       	movw	r26, r24
    404a:	ed 91       	ld	r30, X+
    404c:	fc 91       	ld	r31, X
    404e:	22 81       	ldd	r18, Z+2	; 0x02
    4050:	30 e0       	ldi	r19, 0x00	; 0
    4052:	21 50       	subi	r18, 0x01	; 1
    4054:	31 09       	sbc	r19, r1
    4056:	ce 01       	movw	r24, r28
    4058:	92 95       	swap	r25
    405a:	82 95       	swap	r24
    405c:	8f 70       	andi	r24, 0x0F	; 15
    405e:	89 27       	eor	r24, r25
    4060:	9f 70       	andi	r25, 0x0F	; 15
    4062:	89 27       	eor	r24, r25
    4064:	28 23       	and	r18, r24
    4066:	39 23       	and	r19, r25
    4068:	23 2b       	or	r18, r19
    406a:	09 f0       	breq	.+2      	; 0x406e <dir_next+0xba>
    406c:	a0 c0       	rjmp	.+320    	; 0x41ae <dir_next+0x1fa>
    406e:	cf 01       	movw	r24, r30
    4070:	0e 94 1f 1c 	call	0x383e	; 0x383e <get_fat>
    4074:	4b 01       	movw	r8, r22
    4076:	5c 01       	movw	r10, r24
    4078:	62 30       	cpi	r22, 0x02	; 2
    407a:	71 05       	cpc	r23, r1
    407c:	81 05       	cpc	r24, r1
    407e:	91 05       	cpc	r25, r1
    4080:	08 f4       	brcc	.+2      	; 0x4084 <dir_next+0xd0>
    4082:	b1 c0       	rjmp	.+354    	; 0x41e6 <dir_next+0x232>
    4084:	6f 3f       	cpi	r22, 0xFF	; 255
    4086:	7f 4f       	sbci	r23, 0xFF	; 255
    4088:	8f 4f       	sbci	r24, 0xFF	; 255
    408a:	9f 4f       	sbci	r25, 0xFF	; 255
    408c:	09 f4       	brne	.+2      	; 0x4090 <dir_next+0xdc>
    408e:	ad c0       	rjmp	.+346    	; 0x41ea <dir_next+0x236>
    4090:	d8 01       	movw	r26, r16
    4092:	ed 91       	ld	r30, X+
    4094:	fc 91       	ld	r31, X
    4096:	86 89       	ldd	r24, Z+22	; 0x16
    4098:	97 89       	ldd	r25, Z+23	; 0x17
    409a:	a0 8d       	ldd	r26, Z+24	; 0x18
    409c:	b1 8d       	ldd	r27, Z+25	; 0x19
    409e:	88 16       	cp	r8, r24
    40a0:	99 06       	cpc	r9, r25
    40a2:	aa 06       	cpc	r10, r26
    40a4:	bb 06       	cpc	r11, r27
    40a6:	08 f4       	brcc	.+2      	; 0x40aa <dir_next+0xf6>
    40a8:	70 c0       	rjmp	.+224    	; 0x418a <dir_next+0x1d6>
    40aa:	ef 28       	or	r14, r15
    40ac:	09 f4       	brne	.+2      	; 0x40b0 <dir_next+0xfc>
    40ae:	9f c0       	rjmp	.+318    	; 0x41ee <dir_next+0x23a>
    40b0:	d8 01       	movw	r26, r16
    40b2:	1a 96       	adiw	r26, 0x0a	; 10
    40b4:	4d 91       	ld	r20, X+
    40b6:	5d 91       	ld	r21, X+
    40b8:	6d 91       	ld	r22, X+
    40ba:	7c 91       	ld	r23, X
    40bc:	1d 97       	sbiw	r26, 0x0d	; 13
    40be:	cf 01       	movw	r24, r30
    40c0:	0e 94 d8 1e 	call	0x3db0	; 0x3db0 <create_chain>
    40c4:	4b 01       	movw	r8, r22
    40c6:	5c 01       	movw	r10, r24
    40c8:	61 15       	cp	r22, r1
    40ca:	71 05       	cpc	r23, r1
    40cc:	81 05       	cpc	r24, r1
    40ce:	91 05       	cpc	r25, r1
    40d0:	09 f4       	brne	.+2      	; 0x40d4 <dir_next+0x120>
    40d2:	8f c0       	rjmp	.+286    	; 0x41f2 <dir_next+0x23e>
    40d4:	61 30       	cpi	r22, 0x01	; 1
    40d6:	71 05       	cpc	r23, r1
    40d8:	81 05       	cpc	r24, r1
    40da:	91 05       	cpc	r25, r1
    40dc:	09 f4       	brne	.+2      	; 0x40e0 <dir_next+0x12c>
    40de:	8b c0       	rjmp	.+278    	; 0x41f6 <dir_next+0x242>
    40e0:	6f 3f       	cpi	r22, 0xFF	; 255
    40e2:	7f 4f       	sbci	r23, 0xFF	; 255
    40e4:	8f 4f       	sbci	r24, 0xFF	; 255
    40e6:	9f 4f       	sbci	r25, 0xFF	; 255
    40e8:	09 f4       	brne	.+2      	; 0x40ec <dir_next+0x138>
    40ea:	87 c0       	rjmp	.+270    	; 0x41fa <dir_next+0x246>
    40ec:	d8 01       	movw	r26, r16
    40ee:	8d 91       	ld	r24, X+
    40f0:	9c 91       	ld	r25, X
    40f2:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <sync_window>
    40f6:	81 11       	cpse	r24, r1
    40f8:	82 c0       	rjmp	.+260    	; 0x41fe <dir_next+0x24a>
    40fa:	f8 01       	movw	r30, r16
    40fc:	80 81       	ld	r24, Z
    40fe:	91 81       	ldd	r25, Z+1	; 0x01
    4100:	40 e0       	ldi	r20, 0x00	; 0
    4102:	52 e0       	ldi	r21, 0x02	; 2
    4104:	60 e0       	ldi	r22, 0x00	; 0
    4106:	70 e0       	ldi	r23, 0x00	; 0
    4108:	c2 96       	adiw	r24, 0x32	; 50
    410a:	0e 94 07 14 	call	0x280e	; 0x280e <mem_set>
    410e:	d8 01       	movw	r26, r16
    4110:	ed 90       	ld	r14, X+
    4112:	fc 90       	ld	r15, X
    4114:	b5 01       	movw	r22, r10
    4116:	a4 01       	movw	r20, r8
    4118:	c7 01       	movw	r24, r14
    411a:	0e 94 f7 1b 	call	0x37ee	; 0x37ee <clust2sect>
    411e:	f7 01       	movw	r30, r14
    4120:	66 a7       	std	Z+46, r22	; 0x2e
    4122:	77 a7       	std	Z+47, r23	; 0x2f
    4124:	80 ab       	std	Z+48, r24	; 0x30
    4126:	91 ab       	std	Z+49, r25	; 0x31
    4128:	e1 2c       	mov	r14, r1
    412a:	f1 2c       	mov	r15, r1
    412c:	1a c0       	rjmp	.+52     	; 0x4162 <dir_next+0x1ae>
    412e:	81 e0       	ldi	r24, 0x01	; 1
    4130:	84 83       	std	Z+4, r24	; 0x04
    4132:	d8 01       	movw	r26, r16
    4134:	8d 91       	ld	r24, X+
    4136:	9c 91       	ld	r25, X
    4138:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <sync_window>
    413c:	81 11       	cpse	r24, r1
    413e:	61 c0       	rjmp	.+194    	; 0x4202 <dir_next+0x24e>
    4140:	d8 01       	movw	r26, r16
    4142:	ed 91       	ld	r30, X+
    4144:	fc 91       	ld	r31, X
    4146:	86 a5       	ldd	r24, Z+46	; 0x2e
    4148:	97 a5       	ldd	r25, Z+47	; 0x2f
    414a:	a0 a9       	ldd	r26, Z+48	; 0x30
    414c:	b1 a9       	ldd	r27, Z+49	; 0x31
    414e:	01 96       	adiw	r24, 0x01	; 1
    4150:	a1 1d       	adc	r26, r1
    4152:	b1 1d       	adc	r27, r1
    4154:	86 a7       	std	Z+46, r24	; 0x2e
    4156:	97 a7       	std	Z+47, r25	; 0x2f
    4158:	a0 ab       	std	Z+48, r26	; 0x30
    415a:	b1 ab       	std	Z+49, r27	; 0x31
    415c:	bf ef       	ldi	r27, 0xFF	; 255
    415e:	eb 1a       	sub	r14, r27
    4160:	fb 0a       	sbc	r15, r27
    4162:	d8 01       	movw	r26, r16
    4164:	ed 91       	ld	r30, X+
    4166:	fc 91       	ld	r31, X
    4168:	82 81       	ldd	r24, Z+2	; 0x02
    416a:	90 e0       	ldi	r25, 0x00	; 0
    416c:	e8 16       	cp	r14, r24
    416e:	f9 06       	cpc	r15, r25
    4170:	f0 f2       	brcs	.-68     	; 0x412e <dir_next+0x17a>
    4172:	86 a5       	ldd	r24, Z+46	; 0x2e
    4174:	97 a5       	ldd	r25, Z+47	; 0x2f
    4176:	a0 a9       	ldd	r26, Z+48	; 0x30
    4178:	b1 a9       	ldd	r27, Z+49	; 0x31
    417a:	8e 19       	sub	r24, r14
    417c:	9f 09       	sbc	r25, r15
    417e:	a1 09       	sbc	r26, r1
    4180:	b1 09       	sbc	r27, r1
    4182:	86 a7       	std	Z+46, r24	; 0x2e
    4184:	97 a7       	std	Z+47, r25	; 0x2f
    4186:	a0 ab       	std	Z+48, r26	; 0x30
    4188:	b1 ab       	std	Z+49, r27	; 0x31
    418a:	f8 01       	movw	r30, r16
    418c:	82 86       	std	Z+10, r8	; 0x0a
    418e:	93 86       	std	Z+11, r9	; 0x0b
    4190:	a4 86       	std	Z+12, r10	; 0x0c
    4192:	b5 86       	std	Z+13, r11	; 0x0d
    4194:	b5 01       	movw	r22, r10
    4196:	a4 01       	movw	r20, r8
    4198:	80 81       	ld	r24, Z
    419a:	91 81       	ldd	r25, Z+1	; 0x01
    419c:	0e 94 f7 1b 	call	0x37ee	; 0x37ee <clust2sect>
    41a0:	d8 01       	movw	r26, r16
    41a2:	1e 96       	adiw	r26, 0x0e	; 14
    41a4:	6d 93       	st	X+, r22
    41a6:	7d 93       	st	X+, r23
    41a8:	8d 93       	st	X+, r24
    41aa:	9c 93       	st	X, r25
    41ac:	51 97       	sbiw	r26, 0x11	; 17
    41ae:	f8 01       	movw	r30, r16
    41b0:	d5 83       	std	Z+5, r29	; 0x05
    41b2:	c4 83       	std	Z+4, r28	; 0x04
    41b4:	80 81       	ld	r24, Z
    41b6:	91 81       	ldd	r25, Z+1	; 0x01
    41b8:	c2 96       	adiw	r24, 0x32	; 50
    41ba:	cc 0c       	add	r12, r12
    41bc:	dd 1c       	adc	r13, r13
    41be:	cc 0c       	add	r12, r12
    41c0:	dd 1c       	adc	r13, r13
    41c2:	cc 0c       	add	r12, r12
    41c4:	dd 1c       	adc	r13, r13
    41c6:	cc 0c       	add	r12, r12
    41c8:	dd 1c       	adc	r13, r13
    41ca:	cc 0c       	add	r12, r12
    41cc:	dd 1c       	adc	r13, r13
    41ce:	c8 0e       	add	r12, r24
    41d0:	d9 1e       	adc	r13, r25
    41d2:	d3 8a       	std	Z+19, r13	; 0x13
    41d4:	c2 8a       	std	Z+18, r12	; 0x12
    41d6:	80 e0       	ldi	r24, 0x00	; 0
    41d8:	15 c0       	rjmp	.+42     	; 0x4204 <dir_next+0x250>
    41da:	84 e0       	ldi	r24, 0x04	; 4
    41dc:	13 c0       	rjmp	.+38     	; 0x4204 <dir_next+0x250>
    41de:	84 e0       	ldi	r24, 0x04	; 4
    41e0:	11 c0       	rjmp	.+34     	; 0x4204 <dir_next+0x250>
    41e2:	84 e0       	ldi	r24, 0x04	; 4
    41e4:	0f c0       	rjmp	.+30     	; 0x4204 <dir_next+0x250>
    41e6:	82 e0       	ldi	r24, 0x02	; 2
    41e8:	0d c0       	rjmp	.+26     	; 0x4204 <dir_next+0x250>
    41ea:	81 e0       	ldi	r24, 0x01	; 1
    41ec:	0b c0       	rjmp	.+22     	; 0x4204 <dir_next+0x250>
    41ee:	84 e0       	ldi	r24, 0x04	; 4
    41f0:	09 c0       	rjmp	.+18     	; 0x4204 <dir_next+0x250>
    41f2:	87 e0       	ldi	r24, 0x07	; 7
    41f4:	07 c0       	rjmp	.+14     	; 0x4204 <dir_next+0x250>
    41f6:	82 e0       	ldi	r24, 0x02	; 2
    41f8:	05 c0       	rjmp	.+10     	; 0x4204 <dir_next+0x250>
    41fa:	81 e0       	ldi	r24, 0x01	; 1
    41fc:	03 c0       	rjmp	.+6      	; 0x4204 <dir_next+0x250>
    41fe:	81 e0       	ldi	r24, 0x01	; 1
    4200:	01 c0       	rjmp	.+2      	; 0x4204 <dir_next+0x250>
    4202:	81 e0       	ldi	r24, 0x01	; 1
    4204:	df 91       	pop	r29
    4206:	cf 91       	pop	r28
    4208:	1f 91       	pop	r17
    420a:	0f 91       	pop	r16
    420c:	ff 90       	pop	r15
    420e:	ef 90       	pop	r14
    4210:	df 90       	pop	r13
    4212:	cf 90       	pop	r12
    4214:	bf 90       	pop	r11
    4216:	af 90       	pop	r10
    4218:	9f 90       	pop	r9
    421a:	8f 90       	pop	r8
    421c:	08 95       	ret

0000421e <dir_find>:
    421e:	df 92       	push	r13
    4220:	ef 92       	push	r14
    4222:	ff 92       	push	r15
    4224:	0f 93       	push	r16
    4226:	1f 93       	push	r17
    4228:	cf 93       	push	r28
    422a:	df 93       	push	r29
    422c:	ec 01       	movw	r28, r24
    422e:	60 e0       	ldi	r22, 0x00	; 0
    4230:	70 e0       	ldi	r23, 0x00	; 0
    4232:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <dir_sdi>
    4236:	81 11       	cpse	r24, r1
    4238:	75 c0       	rjmp	.+234    	; 0x4324 <dir_find+0x106>
    423a:	8f ef       	ldi	r24, 0xFF	; 255
    423c:	9f ef       	ldi	r25, 0xFF	; 255
    423e:	99 8f       	std	Y+25, r25	; 0x19
    4240:	88 8f       	std	Y+24, r24	; 0x18
    4242:	dd 24       	eor	r13, r13
    4244:	da 94       	dec	r13
    4246:	0f ef       	ldi	r16, 0xFF	; 255
    4248:	4e 85       	ldd	r20, Y+14	; 0x0e
    424a:	5f 85       	ldd	r21, Y+15	; 0x0f
    424c:	68 89       	ldd	r22, Y+16	; 0x10
    424e:	79 89       	ldd	r23, Y+17	; 0x11
    4250:	88 81       	ld	r24, Y
    4252:	99 81       	ldd	r25, Y+1	; 0x01
    4254:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    4258:	18 2f       	mov	r17, r24
    425a:	81 11       	cpse	r24, r1
    425c:	5d c0       	rjmp	.+186    	; 0x4318 <dir_find+0xfa>
    425e:	ea 88       	ldd	r14, Y+18	; 0x12
    4260:	fb 88       	ldd	r15, Y+19	; 0x13
    4262:	f7 01       	movw	r30, r14
    4264:	90 81       	ld	r25, Z
    4266:	99 23       	and	r25, r25
    4268:	09 f4       	brne	.+2      	; 0x426c <dir_find+0x4e>
    426a:	57 c0       	rjmp	.+174    	; 0x431a <dir_find+0xfc>
    426c:	83 85       	ldd	r24, Z+11	; 0x0b
    426e:	28 2f       	mov	r18, r24
    4270:	2f 73       	andi	r18, 0x3F	; 63
    4272:	95 3e       	cpi	r25, 0xE5	; 229
    4274:	21 f0       	breq	.+8      	; 0x427e <dir_find+0x60>
    4276:	83 ff       	sbrs	r24, 3
    4278:	08 c0       	rjmp	.+16     	; 0x428a <dir_find+0x6c>
    427a:	2f 30       	cpi	r18, 0x0F	; 15
    427c:	31 f0       	breq	.+12     	; 0x428a <dir_find+0x6c>
    427e:	8f ef       	ldi	r24, 0xFF	; 255
    4280:	9f ef       	ldi	r25, 0xFF	; 255
    4282:	99 8f       	std	Y+25, r25	; 0x19
    4284:	88 8f       	std	Y+24, r24	; 0x18
    4286:	0f ef       	ldi	r16, 0xFF	; 255
    4288:	3e c0       	rjmp	.+124    	; 0x4306 <dir_find+0xe8>
    428a:	2f 30       	cpi	r18, 0x0F	; 15
    428c:	e9 f4       	brne	.+58     	; 0x42c8 <dir_find+0xaa>
    428e:	2e 89       	ldd	r18, Y+22	; 0x16
    4290:	3f 89       	ldd	r19, Y+23	; 0x17
    4292:	21 15       	cp	r18, r1
    4294:	31 05       	cpc	r19, r1
    4296:	b9 f1       	breq	.+110    	; 0x4306 <dir_find+0xe8>
    4298:	96 ff       	sbrs	r25, 6
    429a:	08 c0       	rjmp	.+16     	; 0x42ac <dir_find+0x8e>
    429c:	f7 01       	movw	r30, r14
    429e:	d5 84       	ldd	r13, Z+13	; 0x0d
    42a0:	9f 7b       	andi	r25, 0xBF	; 191
    42a2:	4c 81       	ldd	r20, Y+4	; 0x04
    42a4:	5d 81       	ldd	r21, Y+5	; 0x05
    42a6:	59 8f       	std	Y+25, r21	; 0x19
    42a8:	48 8f       	std	Y+24, r20	; 0x18
    42aa:	09 2f       	mov	r16, r25
    42ac:	90 13       	cpse	r25, r16
    42ae:	26 c0       	rjmp	.+76     	; 0x42fc <dir_find+0xde>
    42b0:	f7 01       	movw	r30, r14
    42b2:	85 85       	ldd	r24, Z+13	; 0x0d
    42b4:	d8 12       	cpse	r13, r24
    42b6:	24 c0       	rjmp	.+72     	; 0x4300 <dir_find+0xe2>
    42b8:	b7 01       	movw	r22, r14
    42ba:	c9 01       	movw	r24, r18
    42bc:	0e 94 0d 1b 	call	0x361a	; 0x361a <cmp_lfn>
    42c0:	89 2b       	or	r24, r25
    42c2:	01 f1       	breq	.+64     	; 0x4304 <dir_find+0xe6>
    42c4:	01 50       	subi	r16, 0x01	; 1
    42c6:	1f c0       	rjmp	.+62     	; 0x4306 <dir_find+0xe8>
    42c8:	01 11       	cpse	r16, r1
    42ca:	05 c0       	rjmp	.+10     	; 0x42d6 <dir_find+0xb8>
    42cc:	c7 01       	movw	r24, r14
    42ce:	0e 94 44 15 	call	0x2a88	; 0x2a88 <sum_sfn>
    42d2:	d8 16       	cp	r13, r24
    42d4:	21 f1       	breq	.+72     	; 0x431e <dir_find+0x100>
    42d6:	ec 89       	ldd	r30, Y+20	; 0x14
    42d8:	fd 89       	ldd	r31, Y+21	; 0x15
    42da:	83 85       	ldd	r24, Z+11	; 0x0b
    42dc:	80 fd       	sbrc	r24, 0
    42de:	08 c0       	rjmp	.+16     	; 0x42f0 <dir_find+0xd2>
    42e0:	4b e0       	ldi	r20, 0x0B	; 11
    42e2:	50 e0       	ldi	r21, 0x00	; 0
    42e4:	bf 01       	movw	r22, r30
    42e6:	c7 01       	movw	r24, r14
    42e8:	0e 94 11 14 	call	0x2822	; 0x2822 <mem_cmp>
    42ec:	89 2b       	or	r24, r25
    42ee:	c9 f0       	breq	.+50     	; 0x4322 <dir_find+0x104>
    42f0:	8f ef       	ldi	r24, 0xFF	; 255
    42f2:	9f ef       	ldi	r25, 0xFF	; 255
    42f4:	99 8f       	std	Y+25, r25	; 0x19
    42f6:	88 8f       	std	Y+24, r24	; 0x18
    42f8:	0f ef       	ldi	r16, 0xFF	; 255
    42fa:	05 c0       	rjmp	.+10     	; 0x4306 <dir_find+0xe8>
    42fc:	0f ef       	ldi	r16, 0xFF	; 255
    42fe:	03 c0       	rjmp	.+6      	; 0x4306 <dir_find+0xe8>
    4300:	0f ef       	ldi	r16, 0xFF	; 255
    4302:	01 c0       	rjmp	.+2      	; 0x4306 <dir_find+0xe8>
    4304:	0f ef       	ldi	r16, 0xFF	; 255
    4306:	60 e0       	ldi	r22, 0x00	; 0
    4308:	70 e0       	ldi	r23, 0x00	; 0
    430a:	ce 01       	movw	r24, r28
    430c:	0e 94 da 1f 	call	0x3fb4	; 0x3fb4 <dir_next>
    4310:	88 23       	and	r24, r24
    4312:	09 f4       	brne	.+2      	; 0x4316 <dir_find+0xf8>
    4314:	99 cf       	rjmp	.-206    	; 0x4248 <dir_find+0x2a>
    4316:	06 c0       	rjmp	.+12     	; 0x4324 <dir_find+0x106>
    4318:	05 c0       	rjmp	.+10     	; 0x4324 <dir_find+0x106>
    431a:	84 e0       	ldi	r24, 0x04	; 4
    431c:	03 c0       	rjmp	.+6      	; 0x4324 <dir_find+0x106>
    431e:	81 2f       	mov	r24, r17
    4320:	01 c0       	rjmp	.+2      	; 0x4324 <dir_find+0x106>
    4322:	81 2f       	mov	r24, r17
    4324:	df 91       	pop	r29
    4326:	cf 91       	pop	r28
    4328:	1f 91       	pop	r17
    432a:	0f 91       	pop	r16
    432c:	ff 90       	pop	r15
    432e:	ef 90       	pop	r14
    4330:	df 90       	pop	r13
    4332:	08 95       	ret

00004334 <follow_path>:
    4334:	ff 92       	push	r15
    4336:	0f 93       	push	r16
    4338:	1f 93       	push	r17
    433a:	cf 93       	push	r28
    433c:	df 93       	push	r29
    433e:	00 d0       	rcall	.+0      	; 0x4340 <follow_path+0xc>
    4340:	cd b7       	in	r28, 0x3d	; 61
    4342:	de b7       	in	r29, 0x3e	; 62
    4344:	8c 01       	movw	r16, r24
    4346:	7a 83       	std	Y+2, r23	; 0x02
    4348:	69 83       	std	Y+1, r22	; 0x01
    434a:	e6 2f       	mov	r30, r22
    434c:	f7 2f       	mov	r31, r23
    434e:	80 81       	ld	r24, Z
    4350:	8f 32       	cpi	r24, 0x2F	; 47
    4352:	11 f0       	breq	.+4      	; 0x4358 <follow_path+0x24>
    4354:	8c 35       	cpi	r24, 0x5C	; 92
    4356:	59 f4       	brne	.+22     	; 0x436e <follow_path+0x3a>
    4358:	31 96       	adiw	r30, 0x01	; 1
    435a:	fa 83       	std	Y+2, r31	; 0x02
    435c:	e9 83       	std	Y+1, r30	; 0x01
    435e:	d8 01       	movw	r26, r16
    4360:	16 96       	adiw	r26, 0x06	; 6
    4362:	1d 92       	st	X+, r1
    4364:	1d 92       	st	X+, r1
    4366:	1d 92       	st	X+, r1
    4368:	1c 92       	st	X, r1
    436a:	19 97       	sbiw	r26, 0x09	; 9
    436c:	0c c0       	rjmp	.+24     	; 0x4386 <follow_path+0x52>
    436e:	d8 01       	movw	r26, r16
    4370:	ed 91       	ld	r30, X+
    4372:	fc 91       	ld	r31, X
    4374:	82 89       	ldd	r24, Z+18	; 0x12
    4376:	93 89       	ldd	r25, Z+19	; 0x13
    4378:	a4 89       	ldd	r26, Z+20	; 0x14
    437a:	b5 89       	ldd	r27, Z+21	; 0x15
    437c:	f8 01       	movw	r30, r16
    437e:	86 83       	std	Z+6, r24	; 0x06
    4380:	97 83       	std	Z+7, r25	; 0x07
    4382:	a0 87       	std	Z+8, r26	; 0x08
    4384:	b1 87       	std	Z+9, r27	; 0x09
    4386:	e9 81       	ldd	r30, Y+1	; 0x01
    4388:	fa 81       	ldd	r31, Y+2	; 0x02
    438a:	80 81       	ld	r24, Z
    438c:	80 32       	cpi	r24, 0x20	; 32
    438e:	60 f4       	brcc	.+24     	; 0x43a8 <follow_path+0x74>
    4390:	60 e0       	ldi	r22, 0x00	; 0
    4392:	70 e0       	ldi	r23, 0x00	; 0
    4394:	c8 01       	movw	r24, r16
    4396:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <dir_sdi>
    439a:	f8 2e       	mov	r15, r24
    439c:	d8 01       	movw	r26, r16
    439e:	53 96       	adiw	r26, 0x13	; 19
    43a0:	1c 92       	st	X, r1
    43a2:	1e 92       	st	-X, r1
    43a4:	52 97       	sbiw	r26, 0x12	; 18
    43a6:	4a c0       	rjmp	.+148    	; 0x443c <follow_path+0x108>
    43a8:	be 01       	movw	r22, r28
    43aa:	6f 5f       	subi	r22, 0xFF	; 255
    43ac:	7f 4f       	sbci	r23, 0xFF	; 255
    43ae:	c8 01       	movw	r24, r16
    43b0:	0e 94 2e 19 	call	0x325c	; 0x325c <create_name>
    43b4:	f8 2e       	mov	r15, r24
    43b6:	81 11       	cpse	r24, r1
    43b8:	41 c0       	rjmp	.+130    	; 0x443c <follow_path+0x108>
    43ba:	c8 01       	movw	r24, r16
    43bc:	0e 94 0f 21 	call	0x421e	; 0x421e <dir_find>
    43c0:	d8 01       	movw	r26, r16
    43c2:	54 96       	adiw	r26, 0x14	; 20
    43c4:	ed 91       	ld	r30, X+
    43c6:	fc 91       	ld	r31, X
    43c8:	55 97       	sbiw	r26, 0x15	; 21
    43ca:	93 85       	ldd	r25, Z+11	; 0x0b
    43cc:	88 23       	and	r24, r24
    43ce:	91 f0       	breq	.+36     	; 0x43f4 <follow_path+0xc0>
    43d0:	84 30       	cpi	r24, 0x04	; 4
    43d2:	39 f5       	brne	.+78     	; 0x4422 <follow_path+0xee>
    43d4:	95 ff       	sbrs	r25, 5
    43d6:	0a c0       	rjmp	.+20     	; 0x43ec <follow_path+0xb8>
    43d8:	f8 01       	movw	r30, r16
    43da:	16 82       	std	Z+6, r1	; 0x06
    43dc:	17 82       	std	Z+7, r1	; 0x07
    43de:	10 86       	std	Z+8, r1	; 0x08
    43e0:	11 86       	std	Z+9, r1	; 0x09
    43e2:	13 8a       	std	Z+19, r1	; 0x13
    43e4:	12 8a       	std	Z+18, r1	; 0x12
    43e6:	92 ff       	sbrs	r25, 2
    43e8:	df cf       	rjmp	.-66     	; 0x43a8 <follow_path+0x74>
    43ea:	28 c0       	rjmp	.+80     	; 0x443c <follow_path+0x108>
    43ec:	92 ff       	sbrs	r25, 2
    43ee:	1b c0       	rjmp	.+54     	; 0x4426 <follow_path+0xf2>
    43f0:	f8 2e       	mov	r15, r24
    43f2:	24 c0       	rjmp	.+72     	; 0x443c <follow_path+0x108>
    43f4:	92 fd       	sbrc	r25, 2
    43f6:	1c c0       	rjmp	.+56     	; 0x4430 <follow_path+0xfc>
    43f8:	d8 01       	movw	r26, r16
    43fa:	52 96       	adiw	r26, 0x12	; 18
    43fc:	6d 91       	ld	r22, X+
    43fe:	7c 91       	ld	r23, X
    4400:	53 97       	sbiw	r26, 0x13	; 19
    4402:	fb 01       	movw	r30, r22
    4404:	83 85       	ldd	r24, Z+11	; 0x0b
    4406:	84 ff       	sbrs	r24, 4
    4408:	15 c0       	rjmp	.+42     	; 0x4434 <follow_path+0x100>
    440a:	8d 91       	ld	r24, X+
    440c:	9c 91       	ld	r25, X
    440e:	0e 94 3b 14 	call	0x2876	; 0x2876 <ld_clust>
    4412:	d8 01       	movw	r26, r16
    4414:	16 96       	adiw	r26, 0x06	; 6
    4416:	6d 93       	st	X+, r22
    4418:	7d 93       	st	X+, r23
    441a:	8d 93       	st	X+, r24
    441c:	9c 93       	st	X, r25
    441e:	19 97       	sbiw	r26, 0x09	; 9
    4420:	c3 cf       	rjmp	.-122    	; 0x43a8 <follow_path+0x74>
    4422:	f8 2e       	mov	r15, r24
    4424:	0b c0       	rjmp	.+22     	; 0x443c <follow_path+0x108>
    4426:	0f 2e       	mov	r0, r31
    4428:	f5 e0       	ldi	r31, 0x05	; 5
    442a:	ff 2e       	mov	r15, r31
    442c:	f0 2d       	mov	r31, r0
    442e:	06 c0       	rjmp	.+12     	; 0x443c <follow_path+0x108>
    4430:	f8 2e       	mov	r15, r24
    4432:	04 c0       	rjmp	.+8      	; 0x443c <follow_path+0x108>
    4434:	0f 2e       	mov	r0, r31
    4436:	f5 e0       	ldi	r31, 0x05	; 5
    4438:	ff 2e       	mov	r15, r31
    443a:	f0 2d       	mov	r31, r0
    443c:	8f 2d       	mov	r24, r15
    443e:	0f 90       	pop	r0
    4440:	0f 90       	pop	r0
    4442:	df 91       	pop	r29
    4444:	cf 91       	pop	r28
    4446:	1f 91       	pop	r17
    4448:	0f 91       	pop	r16
    444a:	ff 90       	pop	r15
    444c:	08 95       	ret

0000444e <dir_alloc>:
    444e:	ef 92       	push	r14
    4450:	ff 92       	push	r15
    4452:	0f 93       	push	r16
    4454:	1f 93       	push	r17
    4456:	cf 93       	push	r28
    4458:	df 93       	push	r29
    445a:	ec 01       	movw	r28, r24
    445c:	7b 01       	movw	r14, r22
    445e:	60 e0       	ldi	r22, 0x00	; 0
    4460:	70 e0       	ldi	r23, 0x00	; 0
    4462:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <dir_sdi>
    4466:	81 11       	cpse	r24, r1
    4468:	22 c0       	rjmp	.+68     	; 0x44ae <dir_alloc+0x60>
    446a:	00 e0       	ldi	r16, 0x00	; 0
    446c:	10 e0       	ldi	r17, 0x00	; 0
    446e:	4e 85       	ldd	r20, Y+14	; 0x0e
    4470:	5f 85       	ldd	r21, Y+15	; 0x0f
    4472:	68 89       	ldd	r22, Y+16	; 0x10
    4474:	79 89       	ldd	r23, Y+17	; 0x11
    4476:	88 81       	ld	r24, Y
    4478:	99 81       	ldd	r25, Y+1	; 0x01
    447a:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    447e:	81 11       	cpse	r24, r1
    4480:	16 c0       	rjmp	.+44     	; 0x44ae <dir_alloc+0x60>
    4482:	ea 89       	ldd	r30, Y+18	; 0x12
    4484:	fb 89       	ldd	r31, Y+19	; 0x13
    4486:	90 81       	ld	r25, Z
    4488:	95 3e       	cpi	r25, 0xE5	; 229
    448a:	11 f0       	breq	.+4      	; 0x4490 <dir_alloc+0x42>
    448c:	91 11       	cpse	r25, r1
    448e:	06 c0       	rjmp	.+12     	; 0x449c <dir_alloc+0x4e>
    4490:	0f 5f       	subi	r16, 0xFF	; 255
    4492:	1f 4f       	sbci	r17, 0xFF	; 255
    4494:	0e 15       	cp	r16, r14
    4496:	1f 05       	cpc	r17, r15
    4498:	19 f4       	brne	.+6      	; 0x44a0 <dir_alloc+0x52>
    449a:	09 c0       	rjmp	.+18     	; 0x44ae <dir_alloc+0x60>
    449c:	00 e0       	ldi	r16, 0x00	; 0
    449e:	10 e0       	ldi	r17, 0x00	; 0
    44a0:	61 e0       	ldi	r22, 0x01	; 1
    44a2:	70 e0       	ldi	r23, 0x00	; 0
    44a4:	ce 01       	movw	r24, r28
    44a6:	0e 94 da 1f 	call	0x3fb4	; 0x3fb4 <dir_next>
    44aa:	88 23       	and	r24, r24
    44ac:	01 f3       	breq	.-64     	; 0x446e <dir_alloc+0x20>
    44ae:	84 30       	cpi	r24, 0x04	; 4
    44b0:	09 f4       	brne	.+2      	; 0x44b4 <dir_alloc+0x66>
    44b2:	87 e0       	ldi	r24, 0x07	; 7
    44b4:	df 91       	pop	r29
    44b6:	cf 91       	pop	r28
    44b8:	1f 91       	pop	r17
    44ba:	0f 91       	pop	r16
    44bc:	ff 90       	pop	r15
    44be:	ef 90       	pop	r14
    44c0:	08 95       	ret

000044c2 <dir_register>:
    44c2:	8f 92       	push	r8
    44c4:	9f 92       	push	r9
    44c6:	af 92       	push	r10
    44c8:	bf 92       	push	r11
    44ca:	cf 92       	push	r12
    44cc:	df 92       	push	r13
    44ce:	ff 92       	push	r15
    44d0:	0f 93       	push	r16
    44d2:	1f 93       	push	r17
    44d4:	cf 93       	push	r28
    44d6:	df 93       	push	r29
    44d8:	cd b7       	in	r28, 0x3d	; 61
    44da:	de b7       	in	r29, 0x3e	; 62
    44dc:	2c 97       	sbiw	r28, 0x0c	; 12
    44de:	0f b6       	in	r0, 0x3f	; 63
    44e0:	f8 94       	cli
    44e2:	de bf       	out	0x3e, r29	; 62
    44e4:	0f be       	out	0x3f, r0	; 63
    44e6:	cd bf       	out	0x3d, r28	; 61
    44e8:	6c 01       	movw	r12, r24
    44ea:	dc 01       	movw	r26, r24
    44ec:	54 96       	adiw	r26, 0x14	; 20
    44ee:	ad 90       	ld	r10, X+
    44f0:	bc 90       	ld	r11, X
    44f2:	55 97       	sbiw	r26, 0x15	; 21
    44f4:	56 96       	adiw	r26, 0x16	; 22
    44f6:	8d 90       	ld	r8, X+
    44f8:	9c 90       	ld	r9, X
    44fa:	57 97       	sbiw	r26, 0x17	; 23
    44fc:	4c e0       	ldi	r20, 0x0C	; 12
    44fe:	50 e0       	ldi	r21, 0x00	; 0
    4500:	b5 01       	movw	r22, r10
    4502:	ce 01       	movw	r24, r28
    4504:	01 96       	adiw	r24, 0x01	; 1
    4506:	0e 94 f0 13 	call	0x27e0	; 0x27e0 <mem_cpy>
    450a:	8c 85       	ldd	r24, Y+12	; 0x0c
    450c:	85 fd       	sbrc	r24, 5
    450e:	c6 c0       	rjmp	.+396    	; 0x469c <dir_register+0x1da>
    4510:	80 ff       	sbrs	r24, 0
    4512:	2c c0       	rjmp	.+88     	; 0x456c <dir_register+0xaa>
    4514:	f5 01       	movw	r30, r10
    4516:	13 86       	std	Z+11, r1	; 0x0b
    4518:	d6 01       	movw	r26, r12
    451a:	57 96       	adiw	r26, 0x17	; 23
    451c:	1c 92       	st	X, r1
    451e:	1e 92       	st	-X, r1
    4520:	56 97       	sbiw	r26, 0x16	; 22
    4522:	01 e0       	ldi	r16, 0x01	; 1
    4524:	10 e0       	ldi	r17, 0x00	; 0
    4526:	10 c0       	rjmp	.+32     	; 0x4548 <dir_register+0x86>
    4528:	98 01       	movw	r18, r16
    452a:	a4 01       	movw	r20, r8
    452c:	be 01       	movw	r22, r28
    452e:	6f 5f       	subi	r22, 0xFF	; 255
    4530:	7f 4f       	sbci	r23, 0xFF	; 255
    4532:	c5 01       	movw	r24, r10
    4534:	0e 94 a0 14 	call	0x2940	; 0x2940 <gen_numname>
    4538:	c6 01       	movw	r24, r12
    453a:	0e 94 0f 21 	call	0x421e	; 0x421e <dir_find>
    453e:	f8 2e       	mov	r15, r24
    4540:	81 11       	cpse	r24, r1
    4542:	05 c0       	rjmp	.+10     	; 0x454e <dir_register+0x8c>
    4544:	0f 5f       	subi	r16, 0xFF	; 255
    4546:	1f 4f       	sbci	r17, 0xFF	; 255
    4548:	04 36       	cpi	r16, 0x64	; 100
    454a:	11 05       	cpc	r17, r1
    454c:	68 f3       	brcs	.-38     	; 0x4528 <dir_register+0x66>
    454e:	04 36       	cpi	r16, 0x64	; 100
    4550:	11 05       	cpc	r17, r1
    4552:	09 f4       	brne	.+2      	; 0x4556 <dir_register+0x94>
    4554:	a5 c0       	rjmp	.+330    	; 0x46a0 <dir_register+0x1de>
    4556:	b4 e0       	ldi	r27, 0x04	; 4
    4558:	fb 12       	cpse	r15, r27
    455a:	a4 c0       	rjmp	.+328    	; 0x46a4 <dir_register+0x1e2>
    455c:	8c 85       	ldd	r24, Y+12	; 0x0c
    455e:	f5 01       	movw	r30, r10
    4560:	83 87       	std	Z+11, r24	; 0x0b
    4562:	d6 01       	movw	r26, r12
    4564:	57 96       	adiw	r26, 0x17	; 23
    4566:	9c 92       	st	X, r9
    4568:	8e 92       	st	-X, r8
    456a:	56 97       	sbiw	r26, 0x16	; 22
    456c:	8c 85       	ldd	r24, Y+12	; 0x0c
    456e:	81 fd       	sbrc	r24, 1
    4570:	06 c0       	rjmp	.+12     	; 0x457e <dir_register+0xbc>
    4572:	01 e0       	ldi	r16, 0x01	; 1
    4574:	10 e0       	ldi	r17, 0x00	; 0
    4576:	19 c0       	rjmp	.+50     	; 0x45aa <dir_register+0xe8>
    4578:	2f 5f       	subi	r18, 0xFF	; 255
    457a:	3f 4f       	sbci	r19, 0xFF	; 255
    457c:	02 c0       	rjmp	.+4      	; 0x4582 <dir_register+0xc0>
    457e:	20 e0       	ldi	r18, 0x00	; 0
    4580:	30 e0       	ldi	r19, 0x00	; 0
    4582:	f9 01       	movw	r30, r18
    4584:	ee 0f       	add	r30, r30
    4586:	ff 1f       	adc	r31, r31
    4588:	e8 0d       	add	r30, r8
    458a:	f9 1d       	adc	r31, r9
    458c:	80 81       	ld	r24, Z
    458e:	91 81       	ldd	r25, Z+1	; 0x01
    4590:	89 2b       	or	r24, r25
    4592:	91 f7       	brne	.-28     	; 0x4578 <dir_register+0xb6>
    4594:	27 5e       	subi	r18, 0xE7	; 231
    4596:	3f 4f       	sbci	r19, 0xFF	; 255
    4598:	a5 ec       	ldi	r26, 0xC5	; 197
    459a:	be e4       	ldi	r27, 0x4E	; 78
    459c:	0e 94 f5 2f 	call	0x5fea	; 0x5fea <__umulhisi3>
    45a0:	8c 01       	movw	r16, r24
    45a2:	16 95       	lsr	r17
    45a4:	07 95       	ror	r16
    45a6:	16 95       	lsr	r17
    45a8:	07 95       	ror	r16
    45aa:	b8 01       	movw	r22, r16
    45ac:	c6 01       	movw	r24, r12
    45ae:	0e 94 27 22 	call	0x444e	; 0x444e <dir_alloc>
    45b2:	81 11       	cpse	r24, r1
    45b4:	3c c0       	rjmp	.+120    	; 0x462e <dir_register+0x16c>
    45b6:	01 50       	subi	r16, 0x01	; 1
    45b8:	11 09       	sbc	r17, r1
    45ba:	c9 f1       	breq	.+114    	; 0x462e <dir_register+0x16c>
    45bc:	f6 01       	movw	r30, r12
    45be:	64 81       	ldd	r22, Z+4	; 0x04
    45c0:	75 81       	ldd	r23, Z+5	; 0x05
    45c2:	60 1b       	sub	r22, r16
    45c4:	71 0b       	sbc	r23, r17
    45c6:	c6 01       	movw	r24, r12
    45c8:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <dir_sdi>
    45cc:	81 11       	cpse	r24, r1
    45ce:	2f c0       	rjmp	.+94     	; 0x462e <dir_register+0x16c>
    45d0:	d6 01       	movw	r26, r12
    45d2:	54 96       	adiw	r26, 0x14	; 20
    45d4:	8d 91       	ld	r24, X+
    45d6:	9c 91       	ld	r25, X
    45d8:	55 97       	sbiw	r26, 0x15	; 21
    45da:	0e 94 44 15 	call	0x2a88	; 0x2a88 <sum_sfn>
    45de:	f8 2e       	mov	r15, r24
    45e0:	f6 01       	movw	r30, r12
    45e2:	46 85       	ldd	r20, Z+14	; 0x0e
    45e4:	57 85       	ldd	r21, Z+15	; 0x0f
    45e6:	60 89       	ldd	r22, Z+16	; 0x10
    45e8:	71 89       	ldd	r23, Z+17	; 0x11
    45ea:	80 81       	ld	r24, Z
    45ec:	91 81       	ldd	r25, Z+1	; 0x01
    45ee:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    45f2:	81 11       	cpse	r24, r1
    45f4:	1c c0       	rjmp	.+56     	; 0x462e <dir_register+0x16c>
    45f6:	d6 01       	movw	r26, r12
    45f8:	52 96       	adiw	r26, 0x12	; 18
    45fa:	6d 91       	ld	r22, X+
    45fc:	7c 91       	ld	r23, X
    45fe:	53 97       	sbiw	r26, 0x13	; 19
    4600:	2f 2d       	mov	r18, r15
    4602:	40 2f       	mov	r20, r16
    4604:	56 96       	adiw	r26, 0x16	; 22
    4606:	8d 91       	ld	r24, X+
    4608:	9c 91       	ld	r25, X
    460a:	57 97       	sbiw	r26, 0x17	; 23
    460c:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <fit_lfn>
    4610:	d6 01       	movw	r26, r12
    4612:	ed 91       	ld	r30, X+
    4614:	fc 91       	ld	r31, X
    4616:	81 e0       	ldi	r24, 0x01	; 1
    4618:	84 83       	std	Z+4, r24	; 0x04
    461a:	60 e0       	ldi	r22, 0x00	; 0
    461c:	70 e0       	ldi	r23, 0x00	; 0
    461e:	c6 01       	movw	r24, r12
    4620:	0e 94 da 1f 	call	0x3fb4	; 0x3fb4 <dir_next>
    4624:	81 11       	cpse	r24, r1
    4626:	03 c0       	rjmp	.+6      	; 0x462e <dir_register+0x16c>
    4628:	01 50       	subi	r16, 0x01	; 1
    462a:	11 09       	sbc	r17, r1
    462c:	c9 f6       	brne	.-78     	; 0x45e0 <dir_register+0x11e>
    462e:	81 11       	cpse	r24, r1
    4630:	3b c0       	rjmp	.+118    	; 0x46a8 <dir_register+0x1e6>
    4632:	f6 01       	movw	r30, r12
    4634:	46 85       	ldd	r20, Z+14	; 0x0e
    4636:	57 85       	ldd	r21, Z+15	; 0x0f
    4638:	60 89       	ldd	r22, Z+16	; 0x10
    463a:	71 89       	ldd	r23, Z+17	; 0x11
    463c:	80 81       	ld	r24, Z
    463e:	91 81       	ldd	r25, Z+1	; 0x01
    4640:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    4644:	f8 2e       	mov	r15, r24
    4646:	81 11       	cpse	r24, r1
    4648:	2f c0       	rjmp	.+94     	; 0x46a8 <dir_register+0x1e6>
    464a:	40 e2       	ldi	r20, 0x20	; 32
    464c:	50 e0       	ldi	r21, 0x00	; 0
    464e:	60 e0       	ldi	r22, 0x00	; 0
    4650:	70 e0       	ldi	r23, 0x00	; 0
    4652:	d6 01       	movw	r26, r12
    4654:	52 96       	adiw	r26, 0x12	; 18
    4656:	8d 91       	ld	r24, X+
    4658:	9c 91       	ld	r25, X
    465a:	53 97       	sbiw	r26, 0x13	; 19
    465c:	0e 94 07 14 	call	0x280e	; 0x280e <mem_set>
    4660:	f6 01       	movw	r30, r12
    4662:	64 89       	ldd	r22, Z+20	; 0x14
    4664:	75 89       	ldd	r23, Z+21	; 0x15
    4666:	4b e0       	ldi	r20, 0x0B	; 11
    4668:	50 e0       	ldi	r21, 0x00	; 0
    466a:	82 89       	ldd	r24, Z+18	; 0x12
    466c:	93 89       	ldd	r25, Z+19	; 0x13
    466e:	0e 94 f0 13 	call	0x27e0	; 0x27e0 <mem_cpy>
    4672:	d6 01       	movw	r26, r12
    4674:	52 96       	adiw	r26, 0x12	; 18
    4676:	2d 91       	ld	r18, X+
    4678:	3c 91       	ld	r19, X
    467a:	53 97       	sbiw	r26, 0x13	; 19
    467c:	54 96       	adiw	r26, 0x14	; 20
    467e:	0d 90       	ld	r0, X+
    4680:	bc 91       	ld	r27, X
    4682:	a0 2d       	mov	r26, r0
    4684:	1b 96       	adiw	r26, 0x0b	; 11
    4686:	8c 91       	ld	r24, X
    4688:	88 71       	andi	r24, 0x18	; 24
    468a:	f9 01       	movw	r30, r18
    468c:	84 87       	std	Z+12, r24	; 0x0c
    468e:	d6 01       	movw	r26, r12
    4690:	ed 91       	ld	r30, X+
    4692:	fc 91       	ld	r31, X
    4694:	81 e0       	ldi	r24, 0x01	; 1
    4696:	84 83       	std	Z+4, r24	; 0x04
    4698:	8f 2d       	mov	r24, r15
    469a:	06 c0       	rjmp	.+12     	; 0x46a8 <dir_register+0x1e6>
    469c:	86 e0       	ldi	r24, 0x06	; 6
    469e:	04 c0       	rjmp	.+8      	; 0x46a8 <dir_register+0x1e6>
    46a0:	87 e0       	ldi	r24, 0x07	; 7
    46a2:	02 c0       	rjmp	.+4      	; 0x46a8 <dir_register+0x1e6>
    46a4:	8f 2d       	mov	r24, r15
    46a6:	00 c0       	rjmp	.+0      	; 0x46a8 <dir_register+0x1e6>
    46a8:	2c 96       	adiw	r28, 0x0c	; 12
    46aa:	0f b6       	in	r0, 0x3f	; 63
    46ac:	f8 94       	cli
    46ae:	de bf       	out	0x3e, r29	; 62
    46b0:	0f be       	out	0x3f, r0	; 63
    46b2:	cd bf       	out	0x3d, r28	; 61
    46b4:	df 91       	pop	r29
    46b6:	cf 91       	pop	r28
    46b8:	1f 91       	pop	r17
    46ba:	0f 91       	pop	r16
    46bc:	ff 90       	pop	r15
    46be:	df 90       	pop	r13
    46c0:	cf 90       	pop	r12
    46c2:	bf 90       	pop	r11
    46c4:	af 90       	pop	r10
    46c6:	9f 90       	pop	r9
    46c8:	8f 90       	pop	r8
    46ca:	08 95       	ret

000046cc <remove_chain>:
    46cc:	8f 92       	push	r8
    46ce:	9f 92       	push	r9
    46d0:	af 92       	push	r10
    46d2:	bf 92       	push	r11
    46d4:	cf 92       	push	r12
    46d6:	df 92       	push	r13
    46d8:	ef 92       	push	r14
    46da:	ff 92       	push	r15
    46dc:	0f 93       	push	r16
    46de:	1f 93       	push	r17
    46e0:	cf 93       	push	r28
    46e2:	df 93       	push	r29
    46e4:	ec 01       	movw	r28, r24
    46e6:	6a 01       	movw	r12, r20
    46e8:	7b 01       	movw	r14, r22
    46ea:	42 30       	cpi	r20, 0x02	; 2
    46ec:	51 05       	cpc	r21, r1
    46ee:	61 05       	cpc	r22, r1
    46f0:	71 05       	cpc	r23, r1
    46f2:	08 f4       	brcc	.+2      	; 0x46f6 <remove_chain+0x2a>
    46f4:	50 c0       	rjmp	.+160    	; 0x4796 <remove_chain+0xca>
    46f6:	8e 89       	ldd	r24, Y+22	; 0x16
    46f8:	9f 89       	ldd	r25, Y+23	; 0x17
    46fa:	a8 8d       	ldd	r26, Y+24	; 0x18
    46fc:	b9 8d       	ldd	r27, Y+25	; 0x19
    46fe:	48 17       	cp	r20, r24
    4700:	59 07       	cpc	r21, r25
    4702:	6a 07       	cpc	r22, r26
    4704:	7b 07       	cpc	r23, r27
    4706:	08 f0       	brcs	.+2      	; 0x470a <remove_chain+0x3e>
    4708:	48 c0       	rjmp	.+144    	; 0x479a <remove_chain+0xce>
    470a:	10 e0       	ldi	r17, 0x00	; 0
    470c:	39 c0       	rjmp	.+114    	; 0x4780 <remove_chain+0xb4>
    470e:	b7 01       	movw	r22, r14
    4710:	a6 01       	movw	r20, r12
    4712:	ce 01       	movw	r24, r28
    4714:	0e 94 1f 1c 	call	0x383e	; 0x383e <get_fat>
    4718:	4b 01       	movw	r8, r22
    471a:	5c 01       	movw	r10, r24
    471c:	67 2b       	or	r22, r23
    471e:	68 2b       	or	r22, r24
    4720:	69 2b       	or	r22, r25
    4722:	09 f4       	brne	.+2      	; 0x4726 <remove_chain+0x5a>
    4724:	3f c0       	rjmp	.+126    	; 0x47a4 <remove_chain+0xd8>
    4726:	81 e0       	ldi	r24, 0x01	; 1
    4728:	88 16       	cp	r8, r24
    472a:	91 04       	cpc	r9, r1
    472c:	a1 04       	cpc	r10, r1
    472e:	b1 04       	cpc	r11, r1
    4730:	b1 f1       	breq	.+108    	; 0x479e <remove_chain+0xd2>
    4732:	2f ef       	ldi	r18, 0xFF	; 255
    4734:	82 16       	cp	r8, r18
    4736:	92 06       	cpc	r9, r18
    4738:	a2 06       	cpc	r10, r18
    473a:	b2 06       	cpc	r11, r18
    473c:	91 f1       	breq	.+100    	; 0x47a2 <remove_chain+0xd6>
    473e:	00 e0       	ldi	r16, 0x00	; 0
    4740:	10 e0       	ldi	r17, 0x00	; 0
    4742:	98 01       	movw	r18, r16
    4744:	b7 01       	movw	r22, r14
    4746:	a6 01       	movw	r20, r12
    4748:	ce 01       	movw	r24, r28
    474a:	0e 94 c8 1d 	call	0x3b90	; 0x3b90 <put_fat>
    474e:	18 2f       	mov	r17, r24
    4750:	81 11       	cpse	r24, r1
    4752:	28 c0       	rjmp	.+80     	; 0x47a4 <remove_chain+0xd8>
    4754:	8e 85       	ldd	r24, Y+14	; 0x0e
    4756:	9f 85       	ldd	r25, Y+15	; 0x0f
    4758:	a8 89       	ldd	r26, Y+16	; 0x10
    475a:	b9 89       	ldd	r27, Y+17	; 0x11
    475c:	8f 3f       	cpi	r24, 0xFF	; 255
    475e:	2f ef       	ldi	r18, 0xFF	; 255
    4760:	92 07       	cpc	r25, r18
    4762:	a2 07       	cpc	r26, r18
    4764:	b2 07       	cpc	r27, r18
    4766:	51 f0       	breq	.+20     	; 0x477c <remove_chain+0xb0>
    4768:	01 96       	adiw	r24, 0x01	; 1
    476a:	a1 1d       	adc	r26, r1
    476c:	b1 1d       	adc	r27, r1
    476e:	8e 87       	std	Y+14, r24	; 0x0e
    4770:	9f 87       	std	Y+15, r25	; 0x0f
    4772:	a8 8b       	std	Y+16, r26	; 0x10
    4774:	b9 8b       	std	Y+17, r27	; 0x11
    4776:	8d 81       	ldd	r24, Y+5	; 0x05
    4778:	81 60       	ori	r24, 0x01	; 1
    477a:	8d 83       	std	Y+5, r24	; 0x05
    477c:	75 01       	movw	r14, r10
    477e:	64 01       	movw	r12, r8
    4780:	8e 89       	ldd	r24, Y+22	; 0x16
    4782:	9f 89       	ldd	r25, Y+23	; 0x17
    4784:	a8 8d       	ldd	r26, Y+24	; 0x18
    4786:	b9 8d       	ldd	r27, Y+25	; 0x19
    4788:	c8 16       	cp	r12, r24
    478a:	d9 06       	cpc	r13, r25
    478c:	ea 06       	cpc	r14, r26
    478e:	fb 06       	cpc	r15, r27
    4790:	08 f4       	brcc	.+2      	; 0x4794 <remove_chain+0xc8>
    4792:	bd cf       	rjmp	.-134    	; 0x470e <remove_chain+0x42>
    4794:	07 c0       	rjmp	.+14     	; 0x47a4 <remove_chain+0xd8>
    4796:	12 e0       	ldi	r17, 0x02	; 2
    4798:	05 c0       	rjmp	.+10     	; 0x47a4 <remove_chain+0xd8>
    479a:	12 e0       	ldi	r17, 0x02	; 2
    479c:	03 c0       	rjmp	.+6      	; 0x47a4 <remove_chain+0xd8>
    479e:	12 e0       	ldi	r17, 0x02	; 2
    47a0:	01 c0       	rjmp	.+2      	; 0x47a4 <remove_chain+0xd8>
    47a2:	11 e0       	ldi	r17, 0x01	; 1
    47a4:	81 2f       	mov	r24, r17
    47a6:	df 91       	pop	r29
    47a8:	cf 91       	pop	r28
    47aa:	1f 91       	pop	r17
    47ac:	0f 91       	pop	r16
    47ae:	ff 90       	pop	r15
    47b0:	ef 90       	pop	r14
    47b2:	df 90       	pop	r13
    47b4:	cf 90       	pop	r12
    47b6:	bf 90       	pop	r11
    47b8:	af 90       	pop	r10
    47ba:	9f 90       	pop	r9
    47bc:	8f 90       	pop	r8
    47be:	08 95       	ret

000047c0 <f_mount>:
    47c0:	1f 93       	push	r17
    47c2:	cf 93       	push	r28
    47c4:	df 93       	push	r29
    47c6:	00 d0       	rcall	.+0      	; 0x47c8 <f_mount+0x8>
    47c8:	00 d0       	rcall	.+0      	; 0x47ca <f_mount+0xa>
    47ca:	00 d0       	rcall	.+0      	; 0x47cc <f_mount+0xc>
    47cc:	cd b7       	in	r28, 0x3d	; 61
    47ce:	de b7       	in	r29, 0x3e	; 62
    47d0:	9c 83       	std	Y+4, r25	; 0x04
    47d2:	8b 83       	std	Y+3, r24	; 0x03
    47d4:	7e 83       	std	Y+6, r23	; 0x06
    47d6:	6d 83       	std	Y+5, r22	; 0x05
    47d8:	14 2f       	mov	r17, r20
    47da:	7a 83       	std	Y+2, r23	; 0x02
    47dc:	69 83       	std	Y+1, r22	; 0x01
    47de:	ce 01       	movw	r24, r28
    47e0:	01 96       	adiw	r24, 0x01	; 1
    47e2:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <get_ldnumber>
    47e6:	99 23       	and	r25, r25
    47e8:	34 f1       	brlt	.+76     	; 0x4836 <f_mount+0x76>
    47ea:	fc 01       	movw	r30, r24
    47ec:	ee 0f       	add	r30, r30
    47ee:	ff 1f       	adc	r31, r31
    47f0:	e3 5b       	subi	r30, 0xB3	; 179
    47f2:	fc 4f       	sbci	r31, 0xFC	; 252
    47f4:	01 90       	ld	r0, Z+
    47f6:	f0 81       	ld	r31, Z
    47f8:	e0 2d       	mov	r30, r0
    47fa:	30 97       	sbiw	r30, 0x00	; 0
    47fc:	09 f0       	breq	.+2      	; 0x4800 <f_mount+0x40>
    47fe:	10 82       	st	Z, r1
    4800:	eb 81       	ldd	r30, Y+3	; 0x03
    4802:	fc 81       	ldd	r31, Y+4	; 0x04
    4804:	30 97       	sbiw	r30, 0x00	; 0
    4806:	09 f0       	breq	.+2      	; 0x480a <f_mount+0x4a>
    4808:	10 82       	st	Z, r1
    480a:	2b 81       	ldd	r18, Y+3	; 0x03
    480c:	3c 81       	ldd	r19, Y+4	; 0x04
    480e:	88 0f       	add	r24, r24
    4810:	99 1f       	adc	r25, r25
    4812:	fc 01       	movw	r30, r24
    4814:	e3 5b       	subi	r30, 0xB3	; 179
    4816:	fc 4f       	sbci	r31, 0xFC	; 252
    4818:	31 83       	std	Z+1, r19	; 0x01
    481a:	20 83       	st	Z, r18
    481c:	23 2b       	or	r18, r19
    481e:	69 f0       	breq	.+26     	; 0x483a <f_mount+0x7a>
    4820:	11 30       	cpi	r17, 0x01	; 1
    4822:	69 f4       	brne	.+26     	; 0x483e <f_mount+0x7e>
    4824:	40 e0       	ldi	r20, 0x00	; 0
    4826:	be 01       	movw	r22, r28
    4828:	6b 5f       	subi	r22, 0xFB	; 251
    482a:	7f 4f       	sbci	r23, 0xFF	; 255
    482c:	ce 01       	movw	r24, r28
    482e:	03 96       	adiw	r24, 0x03	; 3
    4830:	0e 94 90 16 	call	0x2d20	; 0x2d20 <find_volume>
    4834:	05 c0       	rjmp	.+10     	; 0x4840 <f_mount+0x80>
    4836:	8b e0       	ldi	r24, 0x0B	; 11
    4838:	03 c0       	rjmp	.+6      	; 0x4840 <f_mount+0x80>
    483a:	80 e0       	ldi	r24, 0x00	; 0
    483c:	01 c0       	rjmp	.+2      	; 0x4840 <f_mount+0x80>
    483e:	80 e0       	ldi	r24, 0x00	; 0
    4840:	26 96       	adiw	r28, 0x06	; 6
    4842:	0f b6       	in	r0, 0x3f	; 63
    4844:	f8 94       	cli
    4846:	de bf       	out	0x3e, r29	; 62
    4848:	0f be       	out	0x3f, r0	; 63
    484a:	cd bf       	out	0x3d, r28	; 61
    484c:	df 91       	pop	r29
    484e:	cf 91       	pop	r28
    4850:	1f 91       	pop	r17
    4852:	08 95       	ret

00004854 <f_open>:
    4854:	4f 92       	push	r4
    4856:	5f 92       	push	r5
    4858:	6f 92       	push	r6
    485a:	7f 92       	push	r7
    485c:	af 92       	push	r10
    485e:	bf 92       	push	r11
    4860:	cf 92       	push	r12
    4862:	df 92       	push	r13
    4864:	ef 92       	push	r14
    4866:	ff 92       	push	r15
    4868:	0f 93       	push	r16
    486a:	1f 93       	push	r17
    486c:	cf 93       	push	r28
    486e:	df 93       	push	r29
    4870:	cd b7       	in	r28, 0x3d	; 61
    4872:	de b7       	in	r29, 0x3e	; 62
    4874:	ac 97       	sbiw	r28, 0x2c	; 44
    4876:	0f b6       	in	r0, 0x3f	; 63
    4878:	f8 94       	cli
    487a:	de bf       	out	0x3e, r29	; 62
    487c:	0f be       	out	0x3f, r0	; 63
    487e:	cd bf       	out	0x3d, r28	; 61
    4880:	78 a7       	std	Y+40, r23	; 0x28
    4882:	6f a3       	std	Y+39, r22	; 0x27
    4884:	00 97       	sbiw	r24, 0x00	; 0
    4886:	09 f4       	brne	.+2      	; 0x488a <f_open+0x36>
    4888:	e4 c0       	rjmp	.+456    	; 0x4a52 <f_open+0x1fe>
    488a:	04 2f       	mov	r16, r20
    488c:	7c 01       	movw	r14, r24
    488e:	dc 01       	movw	r26, r24
    4890:	1d 92       	st	X+, r1
    4892:	1c 92       	st	X, r1
    4894:	b4 2f       	mov	r27, r20
    4896:	bf 71       	andi	r27, 0x1F	; 31
    4898:	db 2e       	mov	r13, r27
    489a:	4e 71       	andi	r20, 0x1E	; 30
    489c:	be 01       	movw	r22, r28
    489e:	69 5d       	subi	r22, 0xD9	; 217
    48a0:	7f 4f       	sbci	r23, 0xFF	; 255
    48a2:	ce 01       	movw	r24, r28
    48a4:	01 96       	adiw	r24, 0x01	; 1
    48a6:	0e 94 90 16 	call	0x2d20	; 0x2d20 <find_volume>
    48aa:	81 11       	cpse	r24, r1
    48ac:	d5 c0       	rjmp	.+426    	; 0x4a58 <f_open+0x204>
    48ae:	ce 01       	movw	r24, r28
    48b0:	4b 96       	adiw	r24, 0x1b	; 27
    48b2:	9e 8b       	std	Y+22, r25	; 0x16
    48b4:	8d 8b       	std	Y+21, r24	; 0x15
    48b6:	88 e4       	ldi	r24, 0x48	; 72
    48b8:	92 e0       	ldi	r25, 0x02	; 2
    48ba:	98 8f       	std	Y+24, r25	; 0x18
    48bc:	8f 8b       	std	Y+23, r24	; 0x17
    48be:	6f a1       	ldd	r22, Y+39	; 0x27
    48c0:	78 a5       	ldd	r23, Y+40	; 0x28
    48c2:	ce 01       	movw	r24, r28
    48c4:	01 96       	adiw	r24, 0x01	; 1
    48c6:	0e 94 9a 21 	call	0x4334	; 0x4334 <follow_path>
    48ca:	18 2f       	mov	r17, r24
    48cc:	ab 88       	ldd	r10, Y+19	; 0x13
    48ce:	bc 88       	ldd	r11, Y+20	; 0x14
    48d0:	81 11       	cpse	r24, r1
    48d2:	04 c0       	rjmp	.+8      	; 0x48dc <f_open+0x88>
    48d4:	a1 14       	cp	r10, r1
    48d6:	b1 04       	cpc	r11, r1
    48d8:	09 f4       	brne	.+2      	; 0x48dc <f_open+0x88>
    48da:	16 e0       	ldi	r17, 0x06	; 6
    48dc:	80 2f       	mov	r24, r16
    48de:	8c 71       	andi	r24, 0x1C	; 28
    48e0:	09 f4       	brne	.+2      	; 0x48e4 <f_open+0x90>
    48e2:	64 c0       	rjmp	.+200    	; 0x49ac <f_open+0x158>
    48e4:	11 23       	and	r17, r17
    48e6:	69 f0       	breq	.+26     	; 0x4902 <f_open+0xae>
    48e8:	14 30       	cpi	r17, 0x04	; 4
    48ea:	29 f4       	brne	.+10     	; 0x48f6 <f_open+0xa2>
    48ec:	ce 01       	movw	r24, r28
    48ee:	01 96       	adiw	r24, 0x01	; 1
    48f0:	0e 94 61 22 	call	0x44c2	; 0x44c2 <dir_register>
    48f4:	18 2f       	mov	r17, r24
    48f6:	ed 2d       	mov	r30, r13
    48f8:	e8 60       	ori	r30, 0x08	; 8
    48fa:	de 2e       	mov	r13, r30
    48fc:	ab 88       	ldd	r10, Y+19	; 0x13
    48fe:	bc 88       	ldd	r11, Y+20	; 0x14
    4900:	0b c0       	rjmp	.+22     	; 0x4918 <f_open+0xc4>
    4902:	d5 01       	movw	r26, r10
    4904:	1b 96       	adiw	r26, 0x0b	; 11
    4906:	8c 91       	ld	r24, X
    4908:	81 71       	andi	r24, 0x11	; 17
    490a:	19 f4       	brne	.+6      	; 0x4912 <f_open+0xbe>
    490c:	02 fd       	sbrc	r16, 2
    490e:	03 c0       	rjmp	.+6      	; 0x4916 <f_open+0xc2>
    4910:	03 c0       	rjmp	.+6      	; 0x4918 <f_open+0xc4>
    4912:	17 e0       	ldi	r17, 0x07	; 7
    4914:	01 c0       	rjmp	.+2      	; 0x4918 <f_open+0xc4>
    4916:	18 e0       	ldi	r17, 0x08	; 8
    4918:	11 11       	cpse	r17, r1
    491a:	57 c0       	rjmp	.+174    	; 0x49ca <f_open+0x176>
    491c:	d3 fe       	sbrs	r13, 3
    491e:	55 c0       	rjmp	.+170    	; 0x49ca <f_open+0x176>
    4920:	0e 94 c9 2f 	call	0x5f92	; 0x5f92 <get_fattime>
    4924:	f5 01       	movw	r30, r10
    4926:	66 87       	std	Z+14, r22	; 0x0e
    4928:	77 87       	std	Z+15, r23	; 0x0f
    492a:	80 8b       	std	Z+16, r24	; 0x10
    492c:	91 8b       	std	Z+17, r25	; 0x11
    492e:	13 86       	std	Z+11, r1	; 0x0b
    4930:	14 8e       	std	Z+28, r1	; 0x1c
    4932:	15 8e       	std	Z+29, r1	; 0x1d
    4934:	16 8e       	std	Z+30, r1	; 0x1e
    4936:	17 8e       	std	Z+31, r1	; 0x1f
    4938:	b5 01       	movw	r22, r10
    493a:	89 81       	ldd	r24, Y+1	; 0x01
    493c:	9a 81       	ldd	r25, Y+2	; 0x02
    493e:	0e 94 3b 14 	call	0x2876	; 0x2876 <ld_clust>
    4942:	2b 01       	movw	r4, r22
    4944:	3c 01       	movw	r6, r24
    4946:	40 e0       	ldi	r20, 0x00	; 0
    4948:	50 e0       	ldi	r21, 0x00	; 0
    494a:	ba 01       	movw	r22, r20
    494c:	c5 01       	movw	r24, r10
    494e:	0e 94 54 14 	call	0x28a8	; 0x28a8 <st_clust>
    4952:	e9 81       	ldd	r30, Y+1	; 0x01
    4954:	fa 81       	ldd	r31, Y+2	; 0x02
    4956:	81 e0       	ldi	r24, 0x01	; 1
    4958:	84 83       	std	Z+4, r24	; 0x04
    495a:	41 14       	cp	r4, r1
    495c:	51 04       	cpc	r5, r1
    495e:	61 04       	cpc	r6, r1
    4960:	71 04       	cpc	r7, r1
    4962:	99 f1       	breq	.+102    	; 0x49ca <f_open+0x176>
    4964:	86 a5       	ldd	r24, Z+46	; 0x2e
    4966:	97 a5       	ldd	r25, Z+47	; 0x2f
    4968:	a0 a9       	ldd	r26, Z+48	; 0x30
    496a:	b1 a9       	ldd	r27, Z+49	; 0x31
    496c:	89 a7       	std	Y+41, r24	; 0x29
    496e:	9a a7       	std	Y+42, r25	; 0x2a
    4970:	ab a7       	std	Y+43, r26	; 0x2b
    4972:	bc a7       	std	Y+44, r27	; 0x2c
    4974:	b3 01       	movw	r22, r6
    4976:	a2 01       	movw	r20, r4
    4978:	cf 01       	movw	r24, r30
    497a:	0e 94 66 23 	call	0x46cc	; 0x46cc <remove_chain>
    497e:	18 2f       	mov	r17, r24
    4980:	81 11       	cpse	r24, r1
    4982:	23 c0       	rjmp	.+70     	; 0x49ca <f_open+0x176>
    4984:	89 81       	ldd	r24, Y+1	; 0x01
    4986:	9a 81       	ldd	r25, Y+2	; 0x02
    4988:	a1 e0       	ldi	r26, 0x01	; 1
    498a:	4a 1a       	sub	r4, r26
    498c:	51 08       	sbc	r5, r1
    498e:	61 08       	sbc	r6, r1
    4990:	71 08       	sbc	r7, r1
    4992:	fc 01       	movw	r30, r24
    4994:	42 86       	std	Z+10, r4	; 0x0a
    4996:	53 86       	std	Z+11, r5	; 0x0b
    4998:	64 86       	std	Z+12, r6	; 0x0c
    499a:	75 86       	std	Z+13, r7	; 0x0d
    499c:	49 a5       	ldd	r20, Y+41	; 0x29
    499e:	5a a5       	ldd	r21, Y+42	; 0x2a
    49a0:	6b a5       	ldd	r22, Y+43	; 0x2b
    49a2:	7c a5       	ldd	r23, Y+44	; 0x2c
    49a4:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    49a8:	18 2f       	mov	r17, r24
    49aa:	0f c0       	rjmp	.+30     	; 0x49ca <f_open+0x176>
    49ac:	11 11       	cpse	r17, r1
    49ae:	0d c0       	rjmp	.+26     	; 0x49ca <f_open+0x176>
    49b0:	d5 01       	movw	r26, r10
    49b2:	1b 96       	adiw	r26, 0x0b	; 11
    49b4:	8c 91       	ld	r24, X
    49b6:	84 fd       	sbrc	r24, 4
    49b8:	05 c0       	rjmp	.+10     	; 0x49c4 <f_open+0x170>
    49ba:	01 ff       	sbrs	r16, 1
    49bc:	06 c0       	rjmp	.+12     	; 0x49ca <f_open+0x176>
    49be:	80 fd       	sbrc	r24, 0
    49c0:	03 c0       	rjmp	.+6      	; 0x49c8 <f_open+0x174>
    49c2:	03 c0       	rjmp	.+6      	; 0x49ca <f_open+0x176>
    49c4:	14 e0       	ldi	r17, 0x04	; 4
    49c6:	01 c0       	rjmp	.+2      	; 0x49ca <f_open+0x176>
    49c8:	17 e0       	ldi	r17, 0x07	; 7
    49ca:	11 11       	cpse	r17, r1
    49cc:	12 c0       	rjmp	.+36     	; 0x49f2 <f_open+0x19e>
    49ce:	d3 fe       	sbrs	r13, 3
    49d0:	03 c0       	rjmp	.+6      	; 0x49d8 <f_open+0x184>
    49d2:	bd 2d       	mov	r27, r13
    49d4:	b0 62       	ori	r27, 0x20	; 32
    49d6:	db 2e       	mov	r13, r27
    49d8:	e9 81       	ldd	r30, Y+1	; 0x01
    49da:	fa 81       	ldd	r31, Y+2	; 0x02
    49dc:	86 a5       	ldd	r24, Z+46	; 0x2e
    49de:	97 a5       	ldd	r25, Z+47	; 0x2f
    49e0:	a0 a9       	ldd	r26, Z+48	; 0x30
    49e2:	b1 a9       	ldd	r27, Z+49	; 0x31
    49e4:	f7 01       	movw	r30, r14
    49e6:	82 8f       	std	Z+26, r24	; 0x1a
    49e8:	93 8f       	std	Z+27, r25	; 0x1b
    49ea:	a4 8f       	std	Z+28, r26	; 0x1c
    49ec:	b5 8f       	std	Z+29, r27	; 0x1d
    49ee:	b7 8e       	std	Z+31, r11	; 0x1f
    49f0:	a6 8e       	std	Z+30, r10	; 0x1e
    49f2:	11 11       	cpse	r17, r1
    49f4:	30 c0       	rjmp	.+96     	; 0x4a56 <f_open+0x202>
    49f6:	d7 01       	movw	r26, r14
    49f8:	14 96       	adiw	r26, 0x04	; 4
    49fa:	dc 92       	st	X, r13
    49fc:	14 97       	sbiw	r26, 0x04	; 4
    49fe:	15 96       	adiw	r26, 0x05	; 5
    4a00:	1c 92       	st	X, r1
    4a02:	c9 80       	ldd	r12, Y+1	; 0x01
    4a04:	da 80       	ldd	r13, Y+2	; 0x02
    4a06:	b5 01       	movw	r22, r10
    4a08:	c6 01       	movw	r24, r12
    4a0a:	0e 94 3b 14 	call	0x2876	; 0x2876 <ld_clust>
    4a0e:	f7 01       	movw	r30, r14
    4a10:	66 87       	std	Z+14, r22	; 0x0e
    4a12:	77 87       	std	Z+15, r23	; 0x0f
    4a14:	80 8b       	std	Z+16, r24	; 0x10
    4a16:	91 8b       	std	Z+17, r25	; 0x11
    4a18:	f5 01       	movw	r30, r10
    4a1a:	84 8d       	ldd	r24, Z+28	; 0x1c
    4a1c:	95 8d       	ldd	r25, Z+29	; 0x1d
    4a1e:	a6 8d       	ldd	r26, Z+30	; 0x1e
    4a20:	b7 8d       	ldd	r27, Z+31	; 0x1f
    4a22:	f7 01       	movw	r30, r14
    4a24:	82 87       	std	Z+10, r24	; 0x0a
    4a26:	93 87       	std	Z+11, r25	; 0x0b
    4a28:	a4 87       	std	Z+12, r26	; 0x0c
    4a2a:	b5 87       	std	Z+13, r27	; 0x0d
    4a2c:	16 82       	std	Z+6, r1	; 0x06
    4a2e:	17 82       	std	Z+7, r1	; 0x07
    4a30:	10 86       	std	Z+8, r1	; 0x08
    4a32:	11 86       	std	Z+9, r1	; 0x09
    4a34:	16 8a       	std	Z+22, r1	; 0x16
    4a36:	17 8a       	std	Z+23, r1	; 0x17
    4a38:	10 8e       	std	Z+24, r1	; 0x18
    4a3a:	11 8e       	std	Z+25, r1	; 0x19
    4a3c:	d1 82       	std	Z+1, r13	; 0x01
    4a3e:	c0 82       	st	Z, r12
    4a40:	d6 01       	movw	r26, r12
    4a42:	16 96       	adiw	r26, 0x06	; 6
    4a44:	8d 91       	ld	r24, X+
    4a46:	9c 91       	ld	r25, X
    4a48:	17 97       	sbiw	r26, 0x07	; 7
    4a4a:	93 83       	std	Z+3, r25	; 0x03
    4a4c:	82 83       	std	Z+2, r24	; 0x02
    4a4e:	81 2f       	mov	r24, r17
    4a50:	03 c0       	rjmp	.+6      	; 0x4a58 <f_open+0x204>
    4a52:	89 e0       	ldi	r24, 0x09	; 9
    4a54:	01 c0       	rjmp	.+2      	; 0x4a58 <f_open+0x204>
    4a56:	81 2f       	mov	r24, r17
    4a58:	ac 96       	adiw	r28, 0x2c	; 44
    4a5a:	0f b6       	in	r0, 0x3f	; 63
    4a5c:	f8 94       	cli
    4a5e:	de bf       	out	0x3e, r29	; 62
    4a60:	0f be       	out	0x3f, r0	; 63
    4a62:	cd bf       	out	0x3d, r28	; 61
    4a64:	df 91       	pop	r29
    4a66:	cf 91       	pop	r28
    4a68:	1f 91       	pop	r17
    4a6a:	0f 91       	pop	r16
    4a6c:	ff 90       	pop	r15
    4a6e:	ef 90       	pop	r14
    4a70:	df 90       	pop	r13
    4a72:	cf 90       	pop	r12
    4a74:	bf 90       	pop	r11
    4a76:	af 90       	pop	r10
    4a78:	7f 90       	pop	r7
    4a7a:	6f 90       	pop	r6
    4a7c:	5f 90       	pop	r5
    4a7e:	4f 90       	pop	r4
    4a80:	08 95       	ret

00004a82 <f_write>:
    4a82:	2f 92       	push	r2
    4a84:	3f 92       	push	r3
    4a86:	4f 92       	push	r4
    4a88:	5f 92       	push	r5
    4a8a:	6f 92       	push	r6
    4a8c:	7f 92       	push	r7
    4a8e:	8f 92       	push	r8
    4a90:	9f 92       	push	r9
    4a92:	af 92       	push	r10
    4a94:	bf 92       	push	r11
    4a96:	cf 92       	push	r12
    4a98:	df 92       	push	r13
    4a9a:	ef 92       	push	r14
    4a9c:	ff 92       	push	r15
    4a9e:	0f 93       	push	r16
    4aa0:	1f 93       	push	r17
    4aa2:	cf 93       	push	r28
    4aa4:	df 93       	push	r29
    4aa6:	00 d0       	rcall	.+0      	; 0x4aa8 <f_write+0x26>
    4aa8:	00 d0       	rcall	.+0      	; 0x4aaa <f_write+0x28>
    4aaa:	cd b7       	in	r28, 0x3d	; 61
    4aac:	de b7       	in	r29, 0x3e	; 62
    4aae:	9c 83       	std	Y+4, r25	; 0x04
    4ab0:	8b 83       	std	Y+3, r24	; 0x03
    4ab2:	4b 01       	movw	r8, r22
    4ab4:	6a 01       	movw	r12, r20
    4ab6:	59 01       	movw	r10, r18
    4ab8:	d9 01       	movw	r26, r18
    4aba:	1d 92       	st	X+, r1
    4abc:	1c 92       	st	X, r1
    4abe:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <validate>
    4ac2:	81 11       	cpse	r24, r1
    4ac4:	c0 c1       	rjmp	.+896    	; 0x4e46 <f_write+0x3c4>
    4ac6:	eb 81       	ldd	r30, Y+3	; 0x03
    4ac8:	fc 81       	ldd	r31, Y+4	; 0x04
    4aca:	85 81       	ldd	r24, Z+5	; 0x05
    4acc:	81 11       	cpse	r24, r1
    4ace:	bb c1       	rjmp	.+886    	; 0x4e46 <f_write+0x3c4>
    4ad0:	84 81       	ldd	r24, Z+4	; 0x04
    4ad2:	81 ff       	sbrs	r24, 1
    4ad4:	b7 c1       	rjmp	.+878    	; 0x4e44 <f_write+0x3c2>
    4ad6:	86 81       	ldd	r24, Z+6	; 0x06
    4ad8:	97 81       	ldd	r25, Z+7	; 0x07
    4ada:	a0 85       	ldd	r26, Z+8	; 0x08
    4adc:	b1 85       	ldd	r27, Z+9	; 0x09
    4ade:	ac 01       	movw	r20, r24
    4ae0:	bd 01       	movw	r22, r26
    4ae2:	4c 0d       	add	r20, r12
    4ae4:	5d 1d       	adc	r21, r13
    4ae6:	61 1d       	adc	r22, r1
    4ae8:	71 1d       	adc	r23, r1
    4aea:	48 17       	cp	r20, r24
    4aec:	59 07       	cpc	r21, r25
    4aee:	6a 07       	cpc	r22, r26
    4af0:	7b 07       	cpc	r23, r27
    4af2:	08 f0       	brcs	.+2      	; 0x4af6 <f_write+0x74>
    4af4:	86 c1       	rjmp	.+780    	; 0x4e02 <f_write+0x380>
    4af6:	c1 2c       	mov	r12, r1
    4af8:	d1 2c       	mov	r13, r1
    4afa:	83 c1       	rjmp	.+774    	; 0x4e02 <f_write+0x380>
    4afc:	eb 81       	ldd	r30, Y+3	; 0x03
    4afe:	fc 81       	ldd	r31, Y+4	; 0x04
    4b00:	86 81       	ldd	r24, Z+6	; 0x06
    4b02:	97 81       	ldd	r25, Z+7	; 0x07
    4b04:	a0 85       	ldd	r26, Z+8	; 0x08
    4b06:	b1 85       	ldd	r27, Z+9	; 0x09
    4b08:	ac 01       	movw	r20, r24
    4b0a:	bd 01       	movw	r22, r26
    4b0c:	51 70       	andi	r21, 0x01	; 1
    4b0e:	66 27       	eor	r22, r22
    4b10:	77 27       	eor	r23, r23
    4b12:	45 2b       	or	r20, r21
    4b14:	46 2b       	or	r20, r22
    4b16:	47 2b       	or	r20, r23
    4b18:	09 f0       	breq	.+2      	; 0x4b1c <f_write+0x9a>
    4b1a:	1b c1       	rjmp	.+566    	; 0x4d52 <f_write+0x2d0>
    4b1c:	20 81       	ld	r18, Z
    4b1e:	31 81       	ldd	r19, Z+1	; 0x01
    4b20:	f9 01       	movw	r30, r18
    4b22:	12 81       	ldd	r17, Z+2	; 0x02
    4b24:	11 50       	subi	r17, 0x01	; 1
    4b26:	ac 01       	movw	r20, r24
    4b28:	bd 01       	movw	r22, r26
    4b2a:	03 2e       	mov	r0, r19
    4b2c:	39 e0       	ldi	r19, 0x09	; 9
    4b2e:	76 95       	lsr	r23
    4b30:	67 95       	ror	r22
    4b32:	57 95       	ror	r21
    4b34:	47 95       	ror	r20
    4b36:	3a 95       	dec	r19
    4b38:	d1 f7       	brne	.-12     	; 0x4b2e <f_write+0xac>
    4b3a:	30 2d       	mov	r19, r0
    4b3c:	14 23       	and	r17, r20
    4b3e:	09 f0       	breq	.+2      	; 0x4b42 <f_write+0xc0>
    4b40:	54 c0       	rjmp	.+168    	; 0x4bea <f_write+0x168>
    4b42:	89 2b       	or	r24, r25
    4b44:	8a 2b       	or	r24, r26
    4b46:	8b 2b       	or	r24, r27
    4b48:	a1 f4       	brne	.+40     	; 0x4b72 <f_write+0xf0>
    4b4a:	ab 81       	ldd	r26, Y+3	; 0x03
    4b4c:	bc 81       	ldd	r27, Y+4	; 0x04
    4b4e:	1e 96       	adiw	r26, 0x0e	; 14
    4b50:	6d 91       	ld	r22, X+
    4b52:	7d 91       	ld	r23, X+
    4b54:	8d 91       	ld	r24, X+
    4b56:	9c 91       	ld	r25, X
    4b58:	51 97       	sbiw	r26, 0x11	; 17
    4b5a:	61 15       	cp	r22, r1
    4b5c:	71 05       	cpc	r23, r1
    4b5e:	81 05       	cpc	r24, r1
    4b60:	91 05       	cpc	r25, r1
    4b62:	81 f4       	brne	.+32     	; 0x4b84 <f_write+0x102>
    4b64:	40 e0       	ldi	r20, 0x00	; 0
    4b66:	50 e0       	ldi	r21, 0x00	; 0
    4b68:	ba 01       	movw	r22, r20
    4b6a:	c9 01       	movw	r24, r18
    4b6c:	0e 94 d8 1e 	call	0x3db0	; 0x3db0 <create_chain>
    4b70:	09 c0       	rjmp	.+18     	; 0x4b84 <f_write+0x102>
    4b72:	eb 81       	ldd	r30, Y+3	; 0x03
    4b74:	fc 81       	ldd	r31, Y+4	; 0x04
    4b76:	42 89       	ldd	r20, Z+18	; 0x12
    4b78:	53 89       	ldd	r21, Z+19	; 0x13
    4b7a:	64 89       	ldd	r22, Z+20	; 0x14
    4b7c:	75 89       	ldd	r23, Z+21	; 0x15
    4b7e:	c9 01       	movw	r24, r18
    4b80:	0e 94 d8 1e 	call	0x3db0	; 0x3db0 <create_chain>
    4b84:	61 15       	cp	r22, r1
    4b86:	71 05       	cpc	r23, r1
    4b88:	81 05       	cpc	r24, r1
    4b8a:	91 05       	cpc	r25, r1
    4b8c:	09 f4       	brne	.+2      	; 0x4b90 <f_write+0x10e>
    4b8e:	3d c1       	rjmp	.+634    	; 0x4e0a <f_write+0x388>
    4b90:	61 30       	cpi	r22, 0x01	; 1
    4b92:	71 05       	cpc	r23, r1
    4b94:	81 05       	cpc	r24, r1
    4b96:	91 05       	cpc	r25, r1
    4b98:	31 f4       	brne	.+12     	; 0x4ba6 <f_write+0x124>
    4b9a:	82 e0       	ldi	r24, 0x02	; 2
    4b9c:	ab 81       	ldd	r26, Y+3	; 0x03
    4b9e:	bc 81       	ldd	r27, Y+4	; 0x04
    4ba0:	15 96       	adiw	r26, 0x05	; 5
    4ba2:	8c 93       	st	X, r24
    4ba4:	50 c1       	rjmp	.+672    	; 0x4e46 <f_write+0x3c4>
    4ba6:	6f 3f       	cpi	r22, 0xFF	; 255
    4ba8:	bf ef       	ldi	r27, 0xFF	; 255
    4baa:	7b 07       	cpc	r23, r27
    4bac:	8b 07       	cpc	r24, r27
    4bae:	9b 07       	cpc	r25, r27
    4bb0:	29 f4       	brne	.+10     	; 0x4bbc <f_write+0x13a>
    4bb2:	81 e0       	ldi	r24, 0x01	; 1
    4bb4:	eb 81       	ldd	r30, Y+3	; 0x03
    4bb6:	fc 81       	ldd	r31, Y+4	; 0x04
    4bb8:	85 83       	std	Z+5, r24	; 0x05
    4bba:	45 c1       	rjmp	.+650    	; 0x4e46 <f_write+0x3c4>
    4bbc:	ab 81       	ldd	r26, Y+3	; 0x03
    4bbe:	bc 81       	ldd	r27, Y+4	; 0x04
    4bc0:	52 96       	adiw	r26, 0x12	; 18
    4bc2:	6d 93       	st	X+, r22
    4bc4:	7d 93       	st	X+, r23
    4bc6:	8d 93       	st	X+, r24
    4bc8:	9c 93       	st	X, r25
    4bca:	55 97       	sbiw	r26, 0x15	; 21
    4bcc:	1e 96       	adiw	r26, 0x0e	; 14
    4bce:	4d 90       	ld	r4, X+
    4bd0:	5d 90       	ld	r5, X+
    4bd2:	6d 90       	ld	r6, X+
    4bd4:	7c 90       	ld	r7, X
    4bd6:	51 97       	sbiw	r26, 0x11	; 17
    4bd8:	45 28       	or	r4, r5
    4bda:	46 28       	or	r4, r6
    4bdc:	47 28       	or	r4, r7
    4bde:	29 f4       	brne	.+10     	; 0x4bea <f_write+0x168>
    4be0:	fd 01       	movw	r30, r26
    4be2:	66 87       	std	Z+14, r22	; 0x0e
    4be4:	77 87       	std	Z+15, r23	; 0x0f
    4be6:	80 8b       	std	Z+16, r24	; 0x10
    4be8:	91 8b       	std	Z+17, r25	; 0x11
    4bea:	ab 81       	ldd	r26, Y+3	; 0x03
    4bec:	bc 81       	ldd	r27, Y+4	; 0x04
    4bee:	2d 91       	ld	r18, X+
    4bf0:	3c 91       	ld	r19, X
    4bf2:	11 97       	sbiw	r26, 0x01	; 1
    4bf4:	f9 01       	movw	r30, r18
    4bf6:	46 a5       	ldd	r20, Z+46	; 0x2e
    4bf8:	57 a5       	ldd	r21, Z+47	; 0x2f
    4bfa:	60 a9       	ldd	r22, Z+48	; 0x30
    4bfc:	71 a9       	ldd	r23, Z+49	; 0x31
    4bfe:	56 96       	adiw	r26, 0x16	; 22
    4c00:	8d 91       	ld	r24, X+
    4c02:	9d 91       	ld	r25, X+
    4c04:	0d 90       	ld	r0, X+
    4c06:	bc 91       	ld	r27, X
    4c08:	a0 2d       	mov	r26, r0
    4c0a:	48 17       	cp	r20, r24
    4c0c:	59 07       	cpc	r21, r25
    4c0e:	6a 07       	cpc	r22, r26
    4c10:	7b 07       	cpc	r23, r27
    4c12:	59 f4       	brne	.+22     	; 0x4c2a <f_write+0x1a8>
    4c14:	c9 01       	movw	r24, r18
    4c16:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <sync_window>
    4c1a:	88 23       	and	r24, r24
    4c1c:	31 f0       	breq	.+12     	; 0x4c2a <f_write+0x1a8>
    4c1e:	81 e0       	ldi	r24, 0x01	; 1
    4c20:	ab 81       	ldd	r26, Y+3	; 0x03
    4c22:	bc 81       	ldd	r27, Y+4	; 0x04
    4c24:	15 96       	adiw	r26, 0x05	; 5
    4c26:	8c 93       	st	X, r24
    4c28:	0e c1       	rjmp	.+540    	; 0x4e46 <f_write+0x3c4>
    4c2a:	eb 81       	ldd	r30, Y+3	; 0x03
    4c2c:	fc 81       	ldd	r31, Y+4	; 0x04
    4c2e:	42 89       	ldd	r20, Z+18	; 0x12
    4c30:	53 89       	ldd	r21, Z+19	; 0x13
    4c32:	64 89       	ldd	r22, Z+20	; 0x14
    4c34:	75 89       	ldd	r23, Z+21	; 0x15
    4c36:	20 80       	ld	r2, Z
    4c38:	31 80       	ldd	r3, Z+1	; 0x01
    4c3a:	c1 01       	movw	r24, r2
    4c3c:	0e 94 f7 1b 	call	0x37ee	; 0x37ee <clust2sect>
    4c40:	61 15       	cp	r22, r1
    4c42:	71 05       	cpc	r23, r1
    4c44:	81 05       	cpc	r24, r1
    4c46:	91 05       	cpc	r25, r1
    4c48:	31 f4       	brne	.+12     	; 0x4c56 <f_write+0x1d4>
    4c4a:	82 e0       	ldi	r24, 0x02	; 2
    4c4c:	ab 81       	ldd	r26, Y+3	; 0x03
    4c4e:	bc 81       	ldd	r27, Y+4	; 0x04
    4c50:	15 96       	adiw	r26, 0x05	; 5
    4c52:	8c 93       	st	X, r24
    4c54:	f8 c0       	rjmp	.+496    	; 0x4e46 <f_write+0x3c4>
    4c56:	2b 01       	movw	r4, r22
    4c58:	3c 01       	movw	r6, r24
    4c5a:	41 0e       	add	r4, r17
    4c5c:	51 1c       	adc	r5, r1
    4c5e:	61 1c       	adc	r6, r1
    4c60:	71 1c       	adc	r7, r1
    4c62:	76 01       	movw	r14, r12
    4c64:	ef 2c       	mov	r14, r15
    4c66:	ff 24       	eor	r15, r15
    4c68:	e6 94       	lsr	r14
    4c6a:	e1 14       	cp	r14, r1
    4c6c:	f1 04       	cpc	r15, r1
    4c6e:	09 f4       	brne	.+2      	; 0x4c72 <f_write+0x1f0>
    4c70:	48 c0       	rjmp	.+144    	; 0x4d02 <f_write+0x280>
    4c72:	f1 01       	movw	r30, r2
    4c74:	42 81       	ldd	r20, Z+2	; 0x02
    4c76:	24 2f       	mov	r18, r20
    4c78:	30 e0       	ldi	r19, 0x00	; 0
    4c7a:	c7 01       	movw	r24, r14
    4c7c:	81 0f       	add	r24, r17
    4c7e:	91 1d       	adc	r25, r1
    4c80:	28 17       	cp	r18, r24
    4c82:	39 07       	cpc	r19, r25
    4c84:	18 f4       	brcc	.+6      	; 0x4c8c <f_write+0x20a>
    4c86:	79 01       	movw	r14, r18
    4c88:	e1 1a       	sub	r14, r17
    4c8a:	f1 08       	sbc	r15, r1
    4c8c:	87 01       	movw	r16, r14
    4c8e:	a3 01       	movw	r20, r6
    4c90:	92 01       	movw	r18, r4
    4c92:	b4 01       	movw	r22, r8
    4c94:	d1 01       	movw	r26, r2
    4c96:	11 96       	adiw	r26, 0x01	; 1
    4c98:	8c 91       	ld	r24, X
    4c9a:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <disk_write>
    4c9e:	88 23       	and	r24, r24
    4ca0:	29 f0       	breq	.+10     	; 0x4cac <f_write+0x22a>
    4ca2:	81 e0       	ldi	r24, 0x01	; 1
    4ca4:	eb 81       	ldd	r30, Y+3	; 0x03
    4ca6:	fc 81       	ldd	r31, Y+4	; 0x04
    4ca8:	85 83       	std	Z+5, r24	; 0x05
    4caa:	cd c0       	rjmp	.+410    	; 0x4e46 <f_write+0x3c4>
    4cac:	ab 81       	ldd	r26, Y+3	; 0x03
    4cae:	bc 81       	ldd	r27, Y+4	; 0x04
    4cb0:	ed 91       	ld	r30, X+
    4cb2:	fc 91       	ld	r31, X
    4cb4:	86 a5       	ldd	r24, Z+46	; 0x2e
    4cb6:	97 a5       	ldd	r25, Z+47	; 0x2f
    4cb8:	a0 a9       	ldd	r26, Z+48	; 0x30
    4cba:	b1 a9       	ldd	r27, Z+49	; 0x31
    4cbc:	84 19       	sub	r24, r4
    4cbe:	95 09       	sbc	r25, r5
    4cc0:	a6 09       	sbc	r26, r6
    4cc2:	b7 09       	sbc	r27, r7
    4cc4:	a7 01       	movw	r20, r14
    4cc6:	60 e0       	ldi	r22, 0x00	; 0
    4cc8:	70 e0       	ldi	r23, 0x00	; 0
    4cca:	84 17       	cp	r24, r20
    4ccc:	95 07       	cpc	r25, r21
    4cce:	a6 07       	cpc	r26, r22
    4cd0:	b7 07       	cpc	r27, r23
    4cd2:	98 f4       	brcc	.+38     	; 0x4cfa <f_write+0x278>
    4cd4:	28 2f       	mov	r18, r24
    4cd6:	22 0f       	add	r18, r18
    4cd8:	2a 83       	std	Y+2, r18	; 0x02
    4cda:	19 82       	std	Y+1, r1	; 0x01
    4cdc:	69 81       	ldd	r22, Y+1	; 0x01
    4cde:	7a 81       	ldd	r23, Y+2	; 0x02
    4ce0:	68 0d       	add	r22, r8
    4ce2:	79 1d       	adc	r23, r9
    4ce4:	40 e0       	ldi	r20, 0x00	; 0
    4ce6:	52 e0       	ldi	r21, 0x02	; 2
    4ce8:	cf 01       	movw	r24, r30
    4cea:	c2 96       	adiw	r24, 0x32	; 50
    4cec:	0e 94 f0 13 	call	0x27e0	; 0x27e0 <mem_cpy>
    4cf0:	ab 81       	ldd	r26, Y+3	; 0x03
    4cf2:	bc 81       	ldd	r27, Y+4	; 0x04
    4cf4:	ed 91       	ld	r30, X+
    4cf6:	fc 91       	ld	r31, X
    4cf8:	14 82       	std	Z+4, r1	; 0x04
    4cfa:	fe 2c       	mov	r15, r14
    4cfc:	ee 24       	eor	r14, r14
    4cfe:	ff 0c       	add	r15, r15
    4d00:	66 c0       	rjmp	.+204    	; 0x4dce <f_write+0x34c>
    4d02:	eb 81       	ldd	r30, Y+3	; 0x03
    4d04:	fc 81       	ldd	r31, Y+4	; 0x04
    4d06:	46 81       	ldd	r20, Z+6	; 0x06
    4d08:	57 81       	ldd	r21, Z+7	; 0x07
    4d0a:	60 85       	ldd	r22, Z+8	; 0x08
    4d0c:	71 85       	ldd	r23, Z+9	; 0x09
    4d0e:	82 85       	ldd	r24, Z+10	; 0x0a
    4d10:	93 85       	ldd	r25, Z+11	; 0x0b
    4d12:	a4 85       	ldd	r26, Z+12	; 0x0c
    4d14:	b5 85       	ldd	r27, Z+13	; 0x0d
    4d16:	48 17       	cp	r20, r24
    4d18:	59 07       	cpc	r21, r25
    4d1a:	6a 07       	cpc	r22, r26
    4d1c:	7b 07       	cpc	r23, r27
    4d1e:	98 f0       	brcs	.+38     	; 0x4d46 <f_write+0x2c4>
    4d20:	c1 01       	movw	r24, r2
    4d22:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <sync_window>
    4d26:	88 23       	and	r24, r24
    4d28:	31 f0       	breq	.+12     	; 0x4d36 <f_write+0x2b4>
    4d2a:	81 e0       	ldi	r24, 0x01	; 1
    4d2c:	ab 81       	ldd	r26, Y+3	; 0x03
    4d2e:	bc 81       	ldd	r27, Y+4	; 0x04
    4d30:	15 96       	adiw	r26, 0x05	; 5
    4d32:	8c 93       	st	X, r24
    4d34:	88 c0       	rjmp	.+272    	; 0x4e46 <f_write+0x3c4>
    4d36:	ab 81       	ldd	r26, Y+3	; 0x03
    4d38:	bc 81       	ldd	r27, Y+4	; 0x04
    4d3a:	ed 91       	ld	r30, X+
    4d3c:	fc 91       	ld	r31, X
    4d3e:	46 a6       	std	Z+46, r4	; 0x2e
    4d40:	57 a6       	std	Z+47, r5	; 0x2f
    4d42:	60 aa       	std	Z+48, r6	; 0x30
    4d44:	71 aa       	std	Z+49, r7	; 0x31
    4d46:	eb 81       	ldd	r30, Y+3	; 0x03
    4d48:	fc 81       	ldd	r31, Y+4	; 0x04
    4d4a:	46 8a       	std	Z+22, r4	; 0x16
    4d4c:	57 8a       	std	Z+23, r5	; 0x17
    4d4e:	60 8e       	std	Z+24, r6	; 0x18
    4d50:	71 8e       	std	Z+25, r7	; 0x19
    4d52:	eb 81       	ldd	r30, Y+3	; 0x03
    4d54:	fc 81       	ldd	r31, Y+4	; 0x04
    4d56:	86 81       	ldd	r24, Z+6	; 0x06
    4d58:	97 81       	ldd	r25, Z+7	; 0x07
    4d5a:	a0 85       	ldd	r26, Z+8	; 0x08
    4d5c:	b1 85       	ldd	r27, Z+9	; 0x09
    4d5e:	91 70       	andi	r25, 0x01	; 1
    4d60:	20 e0       	ldi	r18, 0x00	; 0
    4d62:	32 e0       	ldi	r19, 0x02	; 2
    4d64:	79 01       	movw	r14, r18
    4d66:	e8 1a       	sub	r14, r24
    4d68:	f9 0a       	sbc	r15, r25
    4d6a:	ce 14       	cp	r12, r14
    4d6c:	df 04       	cpc	r13, r15
    4d6e:	08 f4       	brcc	.+2      	; 0x4d72 <f_write+0x2f0>
    4d70:	76 01       	movw	r14, r12
    4d72:	ab 81       	ldd	r26, Y+3	; 0x03
    4d74:	bc 81       	ldd	r27, Y+4	; 0x04
    4d76:	56 96       	adiw	r26, 0x16	; 22
    4d78:	4d 91       	ld	r20, X+
    4d7a:	5d 91       	ld	r21, X+
    4d7c:	6d 91       	ld	r22, X+
    4d7e:	7c 91       	ld	r23, X
    4d80:	59 97       	sbiw	r26, 0x19	; 25
    4d82:	8d 91       	ld	r24, X+
    4d84:	9c 91       	ld	r25, X
    4d86:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    4d8a:	88 23       	and	r24, r24
    4d8c:	29 f0       	breq	.+10     	; 0x4d98 <f_write+0x316>
    4d8e:	81 e0       	ldi	r24, 0x01	; 1
    4d90:	eb 81       	ldd	r30, Y+3	; 0x03
    4d92:	fc 81       	ldd	r31, Y+4	; 0x04
    4d94:	85 83       	std	Z+5, r24	; 0x05
    4d96:	57 c0       	rjmp	.+174    	; 0x4e46 <f_write+0x3c4>
    4d98:	ab 81       	ldd	r26, Y+3	; 0x03
    4d9a:	bc 81       	ldd	r27, Y+4	; 0x04
    4d9c:	2d 91       	ld	r18, X+
    4d9e:	3c 91       	ld	r19, X
    4da0:	11 97       	sbiw	r26, 0x01	; 1
    4da2:	16 96       	adiw	r26, 0x06	; 6
    4da4:	8d 91       	ld	r24, X+
    4da6:	9d 91       	ld	r25, X+
    4da8:	0d 90       	ld	r0, X+
    4daa:	bc 91       	ld	r27, X
    4dac:	a0 2d       	mov	r26, r0
    4dae:	91 70       	andi	r25, 0x01	; 1
    4db0:	aa 27       	eor	r26, r26
    4db2:	bb 27       	eor	r27, r27
    4db4:	c2 96       	adiw	r24, 0x32	; 50
    4db6:	a7 01       	movw	r20, r14
    4db8:	b4 01       	movw	r22, r8
    4dba:	82 0f       	add	r24, r18
    4dbc:	93 1f       	adc	r25, r19
    4dbe:	0e 94 f0 13 	call	0x27e0	; 0x27e0 <mem_cpy>
    4dc2:	ab 81       	ldd	r26, Y+3	; 0x03
    4dc4:	bc 81       	ldd	r27, Y+4	; 0x04
    4dc6:	ed 91       	ld	r30, X+
    4dc8:	fc 91       	ld	r31, X
    4dca:	81 e0       	ldi	r24, 0x01	; 1
    4dcc:	84 83       	std	Z+4, r24	; 0x04
    4dce:	8e 0c       	add	r8, r14
    4dd0:	9f 1c       	adc	r9, r15
    4dd2:	eb 81       	ldd	r30, Y+3	; 0x03
    4dd4:	fc 81       	ldd	r31, Y+4	; 0x04
    4dd6:	86 81       	ldd	r24, Z+6	; 0x06
    4dd8:	97 81       	ldd	r25, Z+7	; 0x07
    4dda:	a0 85       	ldd	r26, Z+8	; 0x08
    4ddc:	b1 85       	ldd	r27, Z+9	; 0x09
    4dde:	8e 0d       	add	r24, r14
    4de0:	9f 1d       	adc	r25, r15
    4de2:	a1 1d       	adc	r26, r1
    4de4:	b1 1d       	adc	r27, r1
    4de6:	86 83       	std	Z+6, r24	; 0x06
    4de8:	97 83       	std	Z+7, r25	; 0x07
    4dea:	a0 87       	std	Z+8, r26	; 0x08
    4dec:	b1 87       	std	Z+9, r27	; 0x09
    4dee:	d5 01       	movw	r26, r10
    4df0:	8d 91       	ld	r24, X+
    4df2:	9c 91       	ld	r25, X
    4df4:	11 97       	sbiw	r26, 0x01	; 1
    4df6:	8e 0d       	add	r24, r14
    4df8:	9f 1d       	adc	r25, r15
    4dfa:	8d 93       	st	X+, r24
    4dfc:	9c 93       	st	X, r25
    4dfe:	ce 18       	sub	r12, r14
    4e00:	df 08       	sbc	r13, r15
    4e02:	c1 14       	cp	r12, r1
    4e04:	d1 04       	cpc	r13, r1
    4e06:	09 f0       	breq	.+2      	; 0x4e0a <f_write+0x388>
    4e08:	79 ce       	rjmp	.-782    	; 0x4afc <f_write+0x7a>
    4e0a:	eb 81       	ldd	r30, Y+3	; 0x03
    4e0c:	fc 81       	ldd	r31, Y+4	; 0x04
    4e0e:	86 81       	ldd	r24, Z+6	; 0x06
    4e10:	97 81       	ldd	r25, Z+7	; 0x07
    4e12:	a0 85       	ldd	r26, Z+8	; 0x08
    4e14:	b1 85       	ldd	r27, Z+9	; 0x09
    4e16:	42 85       	ldd	r20, Z+10	; 0x0a
    4e18:	53 85       	ldd	r21, Z+11	; 0x0b
    4e1a:	64 85       	ldd	r22, Z+12	; 0x0c
    4e1c:	75 85       	ldd	r23, Z+13	; 0x0d
    4e1e:	48 17       	cp	r20, r24
    4e20:	59 07       	cpc	r21, r25
    4e22:	6a 07       	cpc	r22, r26
    4e24:	7b 07       	cpc	r23, r27
    4e26:	20 f4       	brcc	.+8      	; 0x4e30 <f_write+0x3ae>
    4e28:	82 87       	std	Z+10, r24	; 0x0a
    4e2a:	93 87       	std	Z+11, r25	; 0x0b
    4e2c:	a4 87       	std	Z+12, r26	; 0x0c
    4e2e:	b5 87       	std	Z+13, r27	; 0x0d
    4e30:	ab 81       	ldd	r26, Y+3	; 0x03
    4e32:	bc 81       	ldd	r27, Y+4	; 0x04
    4e34:	14 96       	adiw	r26, 0x04	; 4
    4e36:	8c 91       	ld	r24, X
    4e38:	14 97       	sbiw	r26, 0x04	; 4
    4e3a:	80 62       	ori	r24, 0x20	; 32
    4e3c:	14 96       	adiw	r26, 0x04	; 4
    4e3e:	8c 93       	st	X, r24
    4e40:	80 e0       	ldi	r24, 0x00	; 0
    4e42:	01 c0       	rjmp	.+2      	; 0x4e46 <f_write+0x3c4>
    4e44:	87 e0       	ldi	r24, 0x07	; 7
    4e46:	0f 90       	pop	r0
    4e48:	0f 90       	pop	r0
    4e4a:	0f 90       	pop	r0
    4e4c:	0f 90       	pop	r0
    4e4e:	df 91       	pop	r29
    4e50:	cf 91       	pop	r28
    4e52:	1f 91       	pop	r17
    4e54:	0f 91       	pop	r16
    4e56:	ff 90       	pop	r15
    4e58:	ef 90       	pop	r14
    4e5a:	df 90       	pop	r13
    4e5c:	cf 90       	pop	r12
    4e5e:	bf 90       	pop	r11
    4e60:	af 90       	pop	r10
    4e62:	9f 90       	pop	r9
    4e64:	8f 90       	pop	r8
    4e66:	7f 90       	pop	r7
    4e68:	6f 90       	pop	r6
    4e6a:	5f 90       	pop	r5
    4e6c:	4f 90       	pop	r4
    4e6e:	3f 90       	pop	r3
    4e70:	2f 90       	pop	r2
    4e72:	08 95       	ret

00004e74 <f_sync>:
    4e74:	0f 93       	push	r16
    4e76:	1f 93       	push	r17
    4e78:	cf 93       	push	r28
    4e7a:	df 93       	push	r29
    4e7c:	ec 01       	movw	r28, r24
    4e7e:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <validate>
    4e82:	81 11       	cpse	r24, r1
    4e84:	36 c0       	rjmp	.+108    	; 0x4ef2 <f_sync+0x7e>
    4e86:	9c 81       	ldd	r25, Y+4	; 0x04
    4e88:	95 ff       	sbrs	r25, 5
    4e8a:	33 c0       	rjmp	.+102    	; 0x4ef2 <f_sync+0x7e>
    4e8c:	4a 8d       	ldd	r20, Y+26	; 0x1a
    4e8e:	5b 8d       	ldd	r21, Y+27	; 0x1b
    4e90:	6c 8d       	ldd	r22, Y+28	; 0x1c
    4e92:	7d 8d       	ldd	r23, Y+29	; 0x1d
    4e94:	88 81       	ld	r24, Y
    4e96:	99 81       	ldd	r25, Y+1	; 0x01
    4e98:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <move_window>
    4e9c:	81 11       	cpse	r24, r1
    4e9e:	29 c0       	rjmp	.+82     	; 0x4ef2 <f_sync+0x7e>
    4ea0:	0e 8d       	ldd	r16, Y+30	; 0x1e
    4ea2:	1f 8d       	ldd	r17, Y+31	; 0x1f
    4ea4:	f8 01       	movw	r30, r16
    4ea6:	83 85       	ldd	r24, Z+11	; 0x0b
    4ea8:	80 62       	ori	r24, 0x20	; 32
    4eaa:	83 87       	std	Z+11, r24	; 0x0b
    4eac:	8a 85       	ldd	r24, Y+10	; 0x0a
    4eae:	9b 85       	ldd	r25, Y+11	; 0x0b
    4eb0:	ac 85       	ldd	r26, Y+12	; 0x0c
    4eb2:	bd 85       	ldd	r27, Y+13	; 0x0d
    4eb4:	84 8f       	std	Z+28, r24	; 0x1c
    4eb6:	95 8f       	std	Z+29, r25	; 0x1d
    4eb8:	a6 8f       	std	Z+30, r26	; 0x1e
    4eba:	b7 8f       	std	Z+31, r27	; 0x1f
    4ebc:	4e 85       	ldd	r20, Y+14	; 0x0e
    4ebe:	5f 85       	ldd	r21, Y+15	; 0x0f
    4ec0:	68 89       	ldd	r22, Y+16	; 0x10
    4ec2:	79 89       	ldd	r23, Y+17	; 0x11
    4ec4:	c8 01       	movw	r24, r16
    4ec6:	0e 94 54 14 	call	0x28a8	; 0x28a8 <st_clust>
    4eca:	0e 94 c9 2f 	call	0x5f92	; 0x5f92 <get_fattime>
    4ece:	f8 01       	movw	r30, r16
    4ed0:	66 8b       	std	Z+22, r22	; 0x16
    4ed2:	77 8b       	std	Z+23, r23	; 0x17
    4ed4:	80 8f       	std	Z+24, r24	; 0x18
    4ed6:	91 8f       	std	Z+25, r25	; 0x19
    4ed8:	13 8a       	std	Z+19, r1	; 0x13
    4eda:	12 8a       	std	Z+18, r1	; 0x12
    4edc:	8c 81       	ldd	r24, Y+4	; 0x04
    4ede:	8f 7d       	andi	r24, 0xDF	; 223
    4ee0:	8c 83       	std	Y+4, r24	; 0x04
    4ee2:	e8 81       	ld	r30, Y
    4ee4:	f9 81       	ldd	r31, Y+1	; 0x01
    4ee6:	81 e0       	ldi	r24, 0x01	; 1
    4ee8:	84 83       	std	Z+4, r24	; 0x04
    4eea:	88 81       	ld	r24, Y
    4eec:	99 81       	ldd	r25, Y+1	; 0x01
    4eee:	0e 94 85 1b 	call	0x370a	; 0x370a <sync_fs>
    4ef2:	df 91       	pop	r29
    4ef4:	cf 91       	pop	r28
    4ef6:	1f 91       	pop	r17
    4ef8:	0f 91       	pop	r16
    4efa:	08 95       	ret

00004efc <f_close>:
    4efc:	cf 93       	push	r28
    4efe:	df 93       	push	r29
    4f00:	ec 01       	movw	r28, r24
    4f02:	0e 94 3a 27 	call	0x4e74	; 0x4e74 <f_sync>
    4f06:	81 11       	cpse	r24, r1
    4f08:	07 c0       	rjmp	.+14     	; 0x4f18 <f_close+0x1c>
    4f0a:	ce 01       	movw	r24, r28
    4f0c:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <validate>
    4f10:	81 11       	cpse	r24, r1
    4f12:	02 c0       	rjmp	.+4      	; 0x4f18 <f_close+0x1c>
    4f14:	19 82       	std	Y+1, r1	; 0x01
    4f16:	18 82       	st	Y, r1
    4f18:	df 91       	pop	r29
    4f1a:	cf 91       	pop	r28
    4f1c:	08 95       	ret

00004f1e <f_lseek>:

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
    4f1e:	2f 92       	push	r2
    4f20:	3f 92       	push	r3
    4f22:	4f 92       	push	r4
    4f24:	5f 92       	push	r5
    4f26:	6f 92       	push	r6
    4f28:	7f 92       	push	r7
    4f2a:	8f 92       	push	r8
    4f2c:	9f 92       	push	r9
    4f2e:	af 92       	push	r10
    4f30:	bf 92       	push	r11
    4f32:	cf 92       	push	r12
    4f34:	df 92       	push	r13
    4f36:	ef 92       	push	r14
    4f38:	ff 92       	push	r15
    4f3a:	1f 93       	push	r17
    4f3c:	cf 93       	push	r28
    4f3e:	df 93       	push	r29
    4f40:	00 d0       	rcall	.+0      	; 0x4f42 <f_lseek+0x24>
    4f42:	00 d0       	rcall	.+0      	; 0x4f44 <f_lseek+0x26>
    4f44:	00 d0       	rcall	.+0      	; 0x4f46 <f_lseek+0x28>
    4f46:	cd b7       	in	r28, 0x3d	; 61
    4f48:	de b7       	in	r29, 0x3e	; 62
    4f4a:	9e 83       	std	Y+6, r25	; 0x06
    4f4c:	8d 83       	std	Y+5, r24	; 0x05
    4f4e:	6a 01       	movw	r12, r20
    4f50:	7b 01       	movw	r14, r22
#if _USE_FASTSEEK
	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
#endif


	res = validate(fp);					/* Check validity of the object */
    4f52:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <validate>
    4f56:	18 2f       	mov	r17, r24
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
    4f58:	81 11       	cpse	r24, r1
    4f5a:	8f c1       	rjmp	.+798    	; 0x527a <f_lseek+0x35c>
	if (fp->err)						/* Check error */
    4f5c:	ad 81       	ldd	r26, Y+5	; 0x05
    4f5e:	be 81       	ldd	r27, Y+6	; 0x06
    4f60:	15 96       	adiw	r26, 0x05	; 5
    4f62:	8c 91       	ld	r24, X
    4f64:	15 97       	sbiw	r26, 0x05	; 5
    4f66:	81 11       	cpse	r24, r1
    4f68:	8a c1       	rjmp	.+788    	; 0x527e <f_lseek+0x360>
	} else
#endif

	/* Normal Seek */
	{
		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
    4f6a:	1a 96       	adiw	r26, 0x0a	; 10
    4f6c:	8d 91       	ld	r24, X+
    4f6e:	9d 91       	ld	r25, X+
    4f70:	0d 90       	ld	r0, X+
    4f72:	bc 91       	ld	r27, X
    4f74:	a0 2d       	mov	r26, r0
    4f76:	8c 15       	cp	r24, r12
    4f78:	9d 05       	cpc	r25, r13
    4f7a:	ae 05       	cpc	r26, r14
    4f7c:	bf 05       	cpc	r27, r15
    4f7e:	38 f4       	brcc	.+14     	; 0x4f8e <f_lseek+0x70>
#if !_FS_READONLY
			 && !(fp->flag & FA_WRITE)
    4f80:	ed 81       	ldd	r30, Y+5	; 0x05
    4f82:	fe 81       	ldd	r31, Y+6	; 0x06
    4f84:	24 81       	ldd	r18, Z+4	; 0x04
    4f86:	21 fd       	sbrc	r18, 1
    4f88:	02 c0       	rjmp	.+4      	; 0x4f8e <f_lseek+0x70>
#endif
			) ofs = fp->fsize;
    4f8a:	6c 01       	movw	r12, r24
    4f8c:	7d 01       	movw	r14, r26

		ifptr = fp->fptr;
    4f8e:	ad 81       	ldd	r26, Y+5	; 0x05
    4f90:	be 81       	ldd	r27, Y+6	; 0x06
    4f92:	16 96       	adiw	r26, 0x06	; 6
    4f94:	4d 90       	ld	r4, X+
    4f96:	5d 90       	ld	r5, X+
    4f98:	6d 90       	ld	r6, X+
    4f9a:	7c 90       	ld	r7, X
    4f9c:	19 97       	sbiw	r26, 0x09	; 9
		fp->fptr = nsect = 0;
    4f9e:	fd 01       	movw	r30, r26
    4fa0:	16 82       	std	Z+6, r1	; 0x06
    4fa2:	17 82       	std	Z+7, r1	; 0x07
    4fa4:	10 86       	std	Z+8, r1	; 0x08
    4fa6:	11 86       	std	Z+9, r1	; 0x09
		if (ofs) {
    4fa8:	c1 14       	cp	r12, r1
    4faa:	d1 04       	cpc	r13, r1
    4fac:	e1 04       	cpc	r14, r1
    4fae:	f1 04       	cpc	r15, r1
    4fb0:	09 f4       	brne	.+2      	; 0x4fb4 <f_lseek+0x96>
    4fb2:	2c c1       	rjmp	.+600    	; 0x520c <f_lseek+0x2ee>
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
    4fb4:	20 80       	ld	r2, Z
    4fb6:	31 80       	ldd	r3, Z+1	; 0x01
    4fb8:	d1 01       	movw	r26, r2
    4fba:	12 96       	adiw	r26, 0x02	; 2
    4fbc:	8c 90       	ld	r8, X
    4fbe:	91 2c       	mov	r9, r1
    4fc0:	a1 2c       	mov	r10, r1
    4fc2:	b1 2c       	mov	r11, r1
    4fc4:	07 2e       	mov	r0, r23
    4fc6:	79 e0       	ldi	r23, 0x09	; 9
    4fc8:	88 0c       	add	r8, r8
    4fca:	99 1c       	adc	r9, r9
    4fcc:	aa 1c       	adc	r10, r10
    4fce:	bb 1c       	adc	r11, r11
    4fd0:	7a 95       	dec	r23
    4fd2:	d1 f7       	brne	.-12     	; 0x4fc8 <f_lseek+0xaa>
    4fd4:	70 2d       	mov	r23, r0
			if (ifptr > 0 &&
    4fd6:	41 14       	cp	r4, r1
    4fd8:	51 04       	cpc	r5, r1
    4fda:	61 04       	cpc	r6, r1
    4fdc:	71 04       	cpc	r7, r1
    4fde:	09 f4       	brne	.+2      	; 0x4fe2 <f_lseek+0xc4>
    4fe0:	40 c0       	rjmp	.+128    	; 0x5062 <f_lseek+0x144>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    4fe2:	c7 01       	movw	r24, r14
    4fe4:	b6 01       	movw	r22, r12
    4fe6:	61 50       	subi	r22, 0x01	; 1
    4fe8:	71 09       	sbc	r23, r1
    4fea:	81 09       	sbc	r24, r1
    4fec:	91 09       	sbc	r25, r1
    4fee:	a5 01       	movw	r20, r10
    4ff0:	94 01       	movw	r18, r8
    4ff2:	0e 94 cd 2f 	call	0x5f9a	; 0x5f9a <__udivmodsi4>
    4ff6:	29 83       	std	Y+1, r18	; 0x01
    4ff8:	3a 83       	std	Y+2, r19	; 0x02
    4ffa:	4b 83       	std	Y+3, r20	; 0x03
    4ffc:	5c 83       	std	Y+4, r21	; 0x04
    4ffe:	b1 e0       	ldi	r27, 0x01	; 1
    5000:	4b 1a       	sub	r4, r27
    5002:	51 08       	sbc	r5, r1
    5004:	61 08       	sbc	r6, r1
    5006:	71 08       	sbc	r7, r1
    5008:	c3 01       	movw	r24, r6
    500a:	b2 01       	movw	r22, r4
    500c:	a5 01       	movw	r20, r10
    500e:	94 01       	movw	r18, r8
    5010:	0e 94 cd 2f 	call	0x5f9a	; 0x5f9a <__udivmodsi4>

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
		if (ofs) {
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
			if (ifptr > 0 &&
    5014:	89 81       	ldd	r24, Y+1	; 0x01
    5016:	9a 81       	ldd	r25, Y+2	; 0x02
    5018:	ab 81       	ldd	r26, Y+3	; 0x03
    501a:	bc 81       	ldd	r27, Y+4	; 0x04
    501c:	82 17       	cp	r24, r18
    501e:	93 07       	cpc	r25, r19
    5020:	a4 07       	cpc	r26, r20
    5022:	b5 07       	cpc	r27, r21
    5024:	f0 f0       	brcs	.+60     	; 0x5062 <f_lseek+0x144>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    5026:	88 27       	eor	r24, r24
    5028:	99 27       	eor	r25, r25
    502a:	dc 01       	movw	r26, r24
    502c:	88 19       	sub	r24, r8
    502e:	99 09       	sbc	r25, r9
    5030:	aa 09       	sbc	r26, r10
    5032:	bb 09       	sbc	r27, r11
    5034:	48 22       	and	r4, r24
    5036:	59 22       	and	r5, r25
    5038:	6a 22       	and	r6, r26
    503a:	7b 22       	and	r7, r27
    503c:	ad 81       	ldd	r26, Y+5	; 0x05
    503e:	be 81       	ldd	r27, Y+6	; 0x06
    5040:	16 96       	adiw	r26, 0x06	; 6
    5042:	4d 92       	st	X+, r4
    5044:	5d 92       	st	X+, r5
    5046:	6d 92       	st	X+, r6
    5048:	7c 92       	st	X, r7
    504a:	19 97       	sbiw	r26, 0x09	; 9
				ofs -= fp->fptr;
    504c:	c4 18       	sub	r12, r4
    504e:	d5 08       	sbc	r13, r5
    5050:	e6 08       	sbc	r14, r6
    5052:	f7 08       	sbc	r15, r7
				clst = fp->clust;
    5054:	52 96       	adiw	r26, 0x12	; 18
    5056:	4d 91       	ld	r20, X+
    5058:	5d 91       	ld	r21, X+
    505a:	6d 91       	ld	r22, X+
    505c:	7c 91       	ld	r23, X
    505e:	55 97       	sbiw	r26, 0x15	; 21
    5060:	37 c0       	rjmp	.+110    	; 0x50d0 <f_lseek+0x1b2>
			} else {									/* When seek to back cluster, */
				clst = fp->sclust;						/* start from the first cluster */
    5062:	ed 81       	ldd	r30, Y+5	; 0x05
    5064:	fe 81       	ldd	r31, Y+6	; 0x06
    5066:	46 85       	ldd	r20, Z+14	; 0x0e
    5068:	57 85       	ldd	r21, Z+15	; 0x0f
    506a:	60 89       	ldd	r22, Z+16	; 0x10
    506c:	71 89       	ldd	r23, Z+17	; 0x11
#if !_FS_READONLY
				if (clst == 0) {						/* If no cluster chain, create a new chain */
    506e:	41 15       	cp	r20, r1
    5070:	51 05       	cpc	r21, r1
    5072:	61 05       	cpc	r22, r1
    5074:	71 05       	cpc	r23, r1
    5076:	31 f5       	brne	.+76     	; 0x50c4 <f_lseek+0x1a6>
					clst = create_chain(fp->fs, 0);
    5078:	40 e0       	ldi	r20, 0x00	; 0
    507a:	50 e0       	ldi	r21, 0x00	; 0
    507c:	ba 01       	movw	r22, r20
    507e:	c1 01       	movw	r24, r2
    5080:	0e 94 d8 1e 	call	0x3db0	; 0x3db0 <create_chain>
    5084:	ab 01       	movw	r20, r22
    5086:	bc 01       	movw	r22, r24
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    5088:	41 30       	cpi	r20, 0x01	; 1
    508a:	51 05       	cpc	r21, r1
    508c:	61 05       	cpc	r22, r1
    508e:	71 05       	cpc	r23, r1
    5090:	31 f4       	brne	.+12     	; 0x509e <f_lseek+0x180>
    5092:	82 e0       	ldi	r24, 0x02	; 2
    5094:	ad 81       	ldd	r26, Y+5	; 0x05
    5096:	be 81       	ldd	r27, Y+6	; 0x06
    5098:	15 96       	adiw	r26, 0x05	; 5
    509a:	8c 93       	st	X, r24
    509c:	f0 c0       	rjmp	.+480    	; 0x527e <f_lseek+0x360>
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    509e:	4f 3f       	cpi	r20, 0xFF	; 255
    50a0:	bf ef       	ldi	r27, 0xFF	; 255
    50a2:	5b 07       	cpc	r21, r27
    50a4:	6b 07       	cpc	r22, r27
    50a6:	7b 07       	cpc	r23, r27
    50a8:	29 f4       	brne	.+10     	; 0x50b4 <f_lseek+0x196>
    50aa:	81 e0       	ldi	r24, 0x01	; 1
    50ac:	ed 81       	ldd	r30, Y+5	; 0x05
    50ae:	fe 81       	ldd	r31, Y+6	; 0x06
    50b0:	85 83       	std	Z+5, r24	; 0x05
    50b2:	e5 c0       	rjmp	.+458    	; 0x527e <f_lseek+0x360>
					fp->sclust = clst;
    50b4:	ad 81       	ldd	r26, Y+5	; 0x05
    50b6:	be 81       	ldd	r27, Y+6	; 0x06
    50b8:	1e 96       	adiw	r26, 0x0e	; 14
    50ba:	4d 93       	st	X+, r20
    50bc:	5d 93       	st	X+, r21
    50be:	6d 93       	st	X+, r22
    50c0:	7c 93       	st	X, r23
    50c2:	51 97       	sbiw	r26, 0x11	; 17
				}
#endif
				fp->clust = clst;
    50c4:	ed 81       	ldd	r30, Y+5	; 0x05
    50c6:	fe 81       	ldd	r31, Y+6	; 0x06
    50c8:	42 8b       	std	Z+18, r20	; 0x12
    50ca:	53 8b       	std	Z+19, r21	; 0x13
    50cc:	64 8b       	std	Z+20, r22	; 0x14
    50ce:	75 8b       	std	Z+21, r23	; 0x15
			}
			if (clst != 0) {
    50d0:	41 15       	cp	r20, r1
    50d2:	51 05       	cpc	r21, r1
    50d4:	61 05       	cpc	r22, r1
    50d6:	71 05       	cpc	r23, r1
    50d8:	09 f0       	breq	.+2      	; 0x50dc <f_lseek+0x1be>
    50da:	5b c0       	rjmp	.+182    	; 0x5192 <f_lseek+0x274>
			 && !(fp->flag & FA_WRITE)
#endif
			) ofs = fp->fsize;

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
    50dc:	c1 2c       	mov	r12, r1
    50de:	d1 2c       	mov	r13, r1
    50e0:	76 01       	movw	r14, r12
    50e2:	9b c0       	rjmp	.+310    	; 0x521a <f_lseek+0x2fc>
				fp->clust = clst;
			}
			if (clst != 0) {
				while (ofs > bcs) {						/* Cluster following loop */
#if !_FS_READONLY
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
    50e4:	ad 81       	ldd	r26, Y+5	; 0x05
    50e6:	be 81       	ldd	r27, Y+6	; 0x06
    50e8:	14 96       	adiw	r26, 0x04	; 4
    50ea:	8c 91       	ld	r24, X
    50ec:	14 97       	sbiw	r26, 0x04	; 4
    50ee:	81 ff       	sbrs	r24, 1
    50f0:	0c c0       	rjmp	.+24     	; 0x510a <f_lseek+0x1ec>
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
    50f2:	8d 91       	ld	r24, X+
    50f4:	9c 91       	ld	r25, X
    50f6:	0e 94 d8 1e 	call	0x3db0	; 0x3db0 <create_chain>
    50fa:	ab 01       	movw	r20, r22
    50fc:	bc 01       	movw	r22, r24
						if (clst == 0) {				/* When disk gets full, clip file size */
    50fe:	41 15       	cp	r20, r1
    5100:	51 05       	cpc	r21, r1
    5102:	61 05       	cpc	r22, r1
    5104:	71 05       	cpc	r23, r1
    5106:	49 f4       	brne	.+18     	; 0x511a <f_lseek+0x1fc>
    5108:	4b c0       	rjmp	.+150    	; 0x51a0 <f_lseek+0x282>
							ofs = bcs; break;
						}
					} else
#endif
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
    510a:	ad 81       	ldd	r26, Y+5	; 0x05
    510c:	be 81       	ldd	r27, Y+6	; 0x06
    510e:	8d 91       	ld	r24, X+
    5110:	9c 91       	ld	r25, X
    5112:	0e 94 1f 1c 	call	0x383e	; 0x383e <get_fat>
    5116:	ab 01       	movw	r20, r22
    5118:	bc 01       	movw	r22, r24
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    511a:	4f 3f       	cpi	r20, 0xFF	; 255
    511c:	bf ef       	ldi	r27, 0xFF	; 255
    511e:	5b 07       	cpc	r21, r27
    5120:	6b 07       	cpc	r22, r27
    5122:	7b 07       	cpc	r23, r27
    5124:	29 f4       	brne	.+10     	; 0x5130 <f_lseek+0x212>
    5126:	ed 81       	ldd	r30, Y+5	; 0x05
    5128:	fe 81       	ldd	r31, Y+6	; 0x06
    512a:	81 e0       	ldi	r24, 0x01	; 1
    512c:	85 83       	std	Z+5, r24	; 0x05
    512e:	a7 c0       	rjmp	.+334    	; 0x527e <f_lseek+0x360>
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
    5130:	42 30       	cpi	r20, 0x02	; 2
    5132:	51 05       	cpc	r21, r1
    5134:	61 05       	cpc	r22, r1
    5136:	71 05       	cpc	r23, r1
    5138:	68 f0       	brcs	.+26     	; 0x5154 <f_lseek+0x236>
    513a:	ad 81       	ldd	r26, Y+5	; 0x05
    513c:	be 81       	ldd	r27, Y+6	; 0x06
    513e:	ed 91       	ld	r30, X+
    5140:	fc 91       	ld	r31, X
    5142:	86 89       	ldd	r24, Z+22	; 0x16
    5144:	97 89       	ldd	r25, Z+23	; 0x17
    5146:	a0 8d       	ldd	r26, Z+24	; 0x18
    5148:	b1 8d       	ldd	r27, Z+25	; 0x19
    514a:	48 17       	cp	r20, r24
    514c:	59 07       	cpc	r21, r25
    514e:	6a 07       	cpc	r22, r26
    5150:	7b 07       	cpc	r23, r27
    5152:	28 f0       	brcs	.+10     	; 0x515e <f_lseek+0x240>
    5154:	ed 81       	ldd	r30, Y+5	; 0x05
    5156:	fe 81       	ldd	r31, Y+6	; 0x06
    5158:	82 e0       	ldi	r24, 0x02	; 2
    515a:	85 83       	std	Z+5, r24	; 0x05
    515c:	90 c0       	rjmp	.+288    	; 0x527e <f_lseek+0x360>
					fp->clust = clst;
    515e:	ad 81       	ldd	r26, Y+5	; 0x05
    5160:	be 81       	ldd	r27, Y+6	; 0x06
    5162:	52 96       	adiw	r26, 0x12	; 18
    5164:	4d 93       	st	X+, r20
    5166:	5d 93       	st	X+, r21
    5168:	6d 93       	st	X+, r22
    516a:	7c 93       	st	X, r23
    516c:	55 97       	sbiw	r26, 0x15	; 21
					fp->fptr += bcs;
    516e:	fd 01       	movw	r30, r26
    5170:	86 81       	ldd	r24, Z+6	; 0x06
    5172:	97 81       	ldd	r25, Z+7	; 0x07
    5174:	a0 85       	ldd	r26, Z+8	; 0x08
    5176:	b1 85       	ldd	r27, Z+9	; 0x09
    5178:	88 0d       	add	r24, r8
    517a:	99 1d       	adc	r25, r9
    517c:	aa 1d       	adc	r26, r10
    517e:	bb 1d       	adc	r27, r11
    5180:	86 83       	std	Z+6, r24	; 0x06
    5182:	97 83       	std	Z+7, r25	; 0x07
    5184:	a0 87       	std	Z+8, r26	; 0x08
    5186:	b1 87       	std	Z+9, r27	; 0x09
					ofs -= bcs;
    5188:	c8 18       	sub	r12, r8
    518a:	d9 08       	sbc	r13, r9
    518c:	ea 08       	sbc	r14, r10
    518e:	fb 08       	sbc	r15, r11
    5190:	00 c0       	rjmp	.+0      	; 0x5192 <f_lseek+0x274>
				}
#endif
				fp->clust = clst;
			}
			if (clst != 0) {
				while (ofs > bcs) {						/* Cluster following loop */
    5192:	8c 14       	cp	r8, r12
    5194:	9d 04       	cpc	r9, r13
    5196:	ae 04       	cpc	r10, r14
    5198:	bf 04       	cpc	r11, r15
    519a:	08 f4       	brcc	.+2      	; 0x519e <f_lseek+0x280>
    519c:	a3 cf       	rjmp	.-186    	; 0x50e4 <f_lseek+0x1c6>
    519e:	02 c0       	rjmp	.+4      	; 0x51a4 <f_lseek+0x286>
#if !_FS_READONLY
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
						if (clst == 0) {				/* When disk gets full, clip file size */
							ofs = bcs; break;
    51a0:	75 01       	movw	r14, r10
    51a2:	64 01       	movw	r12, r8
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
					fp->clust = clst;
					fp->fptr += bcs;
					ofs -= bcs;
				}
				fp->fptr += ofs;
    51a4:	ed 81       	ldd	r30, Y+5	; 0x05
    51a6:	fe 81       	ldd	r31, Y+6	; 0x06
    51a8:	86 81       	ldd	r24, Z+6	; 0x06
    51aa:	97 81       	ldd	r25, Z+7	; 0x07
    51ac:	a0 85       	ldd	r26, Z+8	; 0x08
    51ae:	b1 85       	ldd	r27, Z+9	; 0x09
    51b0:	8c 0d       	add	r24, r12
    51b2:	9d 1d       	adc	r25, r13
    51b4:	ae 1d       	adc	r26, r14
    51b6:	bf 1d       	adc	r27, r15
    51b8:	86 83       	std	Z+6, r24	; 0x06
    51ba:	97 83       	std	Z+7, r25	; 0x07
    51bc:	a0 87       	std	Z+8, r26	; 0x08
    51be:	b1 87       	std	Z+9, r27	; 0x09
				if (ofs % SS(fp->fs)) {
    51c0:	d7 01       	movw	r26, r14
    51c2:	c6 01       	movw	r24, r12
    51c4:	91 70       	andi	r25, 0x01	; 1
    51c6:	aa 27       	eor	r26, r26
    51c8:	bb 27       	eor	r27, r27
    51ca:	89 2b       	or	r24, r25
    51cc:	8a 2b       	or	r24, r26
    51ce:	8b 2b       	or	r24, r27
    51d0:	09 f1       	breq	.+66     	; 0x5214 <f_lseek+0x2f6>
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
    51d2:	80 81       	ld	r24, Z
    51d4:	91 81       	ldd	r25, Z+1	; 0x01
    51d6:	0e 94 f7 1b 	call	0x37ee	; 0x37ee <clust2sect>
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
    51da:	61 15       	cp	r22, r1
    51dc:	71 05       	cpc	r23, r1
    51de:	81 05       	cpc	r24, r1
    51e0:	91 05       	cpc	r25, r1
    51e2:	31 f4       	brne	.+12     	; 0x51f0 <f_lseek+0x2d2>
    51e4:	82 e0       	ldi	r24, 0x02	; 2
    51e6:	ad 81       	ldd	r26, Y+5	; 0x05
    51e8:	be 81       	ldd	r27, Y+6	; 0x06
    51ea:	15 96       	adiw	r26, 0x05	; 5
    51ec:	8c 93       	st	X, r24
    51ee:	47 c0       	rjmp	.+142    	; 0x527e <f_lseek+0x360>
					nsect += ofs / SS(fp->fs);
    51f0:	0b 2e       	mov	r0, r27
    51f2:	b9 e0       	ldi	r27, 0x09	; 9
    51f4:	f6 94       	lsr	r15
    51f6:	e7 94       	ror	r14
    51f8:	d7 94       	ror	r13
    51fa:	c7 94       	ror	r12
    51fc:	ba 95       	dec	r27
    51fe:	d1 f7       	brne	.-12     	; 0x51f4 <f_lseek+0x2d6>
    5200:	b0 2d       	mov	r27, r0
    5202:	c6 0e       	add	r12, r22
    5204:	d7 1e       	adc	r13, r23
    5206:	e8 1e       	adc	r14, r24
    5208:	f9 1e       	adc	r15, r25
    520a:	07 c0       	rjmp	.+14     	; 0x521a <f_lseek+0x2fc>
			 && !(fp->flag & FA_WRITE)
#endif
			) ofs = fp->fsize;

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
    520c:	c1 2c       	mov	r12, r1
    520e:	d1 2c       	mov	r13, r1
    5210:	76 01       	movw	r14, r12
    5212:	03 c0       	rjmp	.+6      	; 0x521a <f_lseek+0x2fc>
    5214:	c1 2c       	mov	r12, r1
    5216:	d1 2c       	mov	r13, r1
    5218:	76 01       	movw	r14, r12
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
					nsect += ofs / SS(fp->fs);
				}
			}
		}
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
    521a:	ed 81       	ldd	r30, Y+5	; 0x05
    521c:	fe 81       	ldd	r31, Y+6	; 0x06
    521e:	86 81       	ldd	r24, Z+6	; 0x06
    5220:	97 81       	ldd	r25, Z+7	; 0x07
    5222:	a0 85       	ldd	r26, Z+8	; 0x08
    5224:	b1 85       	ldd	r27, Z+9	; 0x09
    5226:	ac 01       	movw	r20, r24
    5228:	bd 01       	movw	r22, r26
    522a:	51 70       	andi	r21, 0x01	; 1
    522c:	66 27       	eor	r22, r22
    522e:	77 27       	eor	r23, r23
    5230:	45 2b       	or	r20, r21
    5232:	46 2b       	or	r20, r22
    5234:	47 2b       	or	r20, r23
    5236:	69 f0       	breq	.+26     	; 0x5252 <f_lseek+0x334>
    5238:	46 89       	ldd	r20, Z+22	; 0x16
    523a:	57 89       	ldd	r21, Z+23	; 0x17
    523c:	60 8d       	ldd	r22, Z+24	; 0x18
    523e:	71 8d       	ldd	r23, Z+25	; 0x19
    5240:	c4 16       	cp	r12, r20
    5242:	d5 06       	cpc	r13, r21
    5244:	e6 06       	cpc	r14, r22
    5246:	f7 06       	cpc	r15, r23
    5248:	21 f0       	breq	.+8      	; 0x5252 <f_lseek+0x334>
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1) != RES_OK)	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
#endif
			fp->dsect = nsect;
    524a:	c6 8a       	std	Z+22, r12	; 0x16
    524c:	d7 8a       	std	Z+23, r13	; 0x17
    524e:	e0 8e       	std	Z+24, r14	; 0x18
    5250:	f1 8e       	std	Z+25, r15	; 0x19
		}
#if !_FS_READONLY
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
    5252:	ed 81       	ldd	r30, Y+5	; 0x05
    5254:	fe 81       	ldd	r31, Y+6	; 0x06
    5256:	42 85       	ldd	r20, Z+10	; 0x0a
    5258:	53 85       	ldd	r21, Z+11	; 0x0b
    525a:	64 85       	ldd	r22, Z+12	; 0x0c
    525c:	75 85       	ldd	r23, Z+13	; 0x0d
    525e:	48 17       	cp	r20, r24
    5260:	59 07       	cpc	r21, r25
    5262:	6a 07       	cpc	r22, r26
    5264:	7b 07       	cpc	r23, r27
    5266:	50 f4       	brcc	.+20     	; 0x527c <f_lseek+0x35e>
			fp->fsize = fp->fptr;
    5268:	82 87       	std	Z+10, r24	; 0x0a
    526a:	93 87       	std	Z+11, r25	; 0x0b
    526c:	a4 87       	std	Z+12, r26	; 0x0c
    526e:	b5 87       	std	Z+13, r27	; 0x0d
			fp->flag |= FA__WRITTEN;
    5270:	84 81       	ldd	r24, Z+4	; 0x04
    5272:	80 62       	ori	r24, 0x20	; 32
    5274:	84 83       	std	Z+4, r24	; 0x04
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
    5276:	81 2f       	mov	r24, r17
    5278:	02 c0       	rjmp	.+4      	; 0x527e <f_lseek+0x360>
    527a:	01 c0       	rjmp	.+2      	; 0x527e <f_lseek+0x360>
    527c:	81 2f       	mov	r24, r17
}
    527e:	26 96       	adiw	r28, 0x06	; 6
    5280:	0f b6       	in	r0, 0x3f	; 63
    5282:	f8 94       	cli
    5284:	de bf       	out	0x3e, r29	; 62
    5286:	0f be       	out	0x3f, r0	; 63
    5288:	cd bf       	out	0x3d, r28	; 61
    528a:	df 91       	pop	r29
    528c:	cf 91       	pop	r28
    528e:	1f 91       	pop	r17
    5290:	ff 90       	pop	r15
    5292:	ef 90       	pop	r14
    5294:	df 90       	pop	r13
    5296:	cf 90       	pop	r12
    5298:	bf 90       	pop	r11
    529a:	af 90       	pop	r10
    529c:	9f 90       	pop	r9
    529e:	8f 90       	pop	r8
    52a0:	7f 90       	pop	r7
    52a2:	6f 90       	pop	r6
    52a4:	5f 90       	pop	r5
    52a6:	4f 90       	pop	r4
    52a8:	3f 90       	pop	r3
    52aa:	2f 90       	pop	r2
    52ac:	08 95       	ret

000052ae <main>:
#include "my_I2C.h"
#include "BMI270.h"
#include "BMI270_reg.h"

int main(void)
{
    52ae:	6f 92       	push	r6
    52b0:	7f 92       	push	r7
    52b2:	8f 92       	push	r8
    52b4:	9f 92       	push	r9
    52b6:	af 92       	push	r10
    52b8:	bf 92       	push	r11
    52ba:	cf 92       	push	r12
    52bc:	df 92       	push	r13
    52be:	ef 92       	push	r14
    52c0:	ff 92       	push	r15
    52c2:	0f 93       	push	r16
    52c4:	1f 93       	push	r17
    52c6:	cf 93       	push	r28
    52c8:	df 93       	push	r29
    52ca:	cd b7       	in	r28, 0x3d	; 61
    52cc:	de b7       	in	r29, 0x3e	; 62
    52ce:	2c 97       	sbiw	r28, 0x0c	; 12
    52d0:	0f b6       	in	r0, 0x3f	; 63
    52d2:	f8 94       	cli
    52d4:	de bf       	out	0x3e, r29	; 62
    52d6:	0f be       	out	0x3f, r0	; 63
    52d8:	cd bf       	out	0x3d, r28	; 61
	unsigned char gyr_x_MSB, gyr_x_LSB, gyr_y_MSB, gyr_y_LSB, gyr_z_MSB, gyr_z_LSB;
	unsigned short data_sample[6];
	unsigned char samples_saved = 1, samples_to_save = 100;
 	
	//Configure LEDs
    DDRD|=(1<<3);
    52da:	8a b1       	in	r24, 0x0a	; 10
    52dc:	88 60       	ori	r24, 0x08	; 8
    52de:	8a b9       	out	0x0a, r24	; 10
	DDRD|=(1<<4);
    52e0:	8a b1       	in	r24, 0x0a	; 10
    52e2:	80 61       	ori	r24, 0x10	; 16
    52e4:	8a b9       	out	0x0a, r24	; 10
	DDRD|=(1<<5);
    52e6:	8a b1       	in	r24, 0x0a	; 10
    52e8:	80 62       	ori	r24, 0x20	; 32
    52ea:	8a b9       	out	0x0a, r24	; 10
	DDRD|=(1<<6);
    52ec:	8a b1       	in	r24, 0x0a	; 10
    52ee:	80 64       	ori	r24, 0x40	; 64
    52f0:	8a b9       	out	0x0a, r24	; 10
	
	//Initialize I2C communication
	I2C_MasterInit();
    52f2:	0e 94 92 2e 	call	0x5d24	; 0x5d24 <I2C_MasterInit>
	//Initialize BMI270
	BMI270_init();
    52f6:	0e 94 0a 13 	call	0x2614	; 0x2614 <BMI270_init>
	//Configure BMI270
	BMI270_config();
    52fa:	0e 94 91 13 	call	0x2722	; 0x2722 <BMI270_config>
	//Configure SD card & create file with header
	init_sd_card();
    52fe:	0e 94 00 2f 	call	0x5e00	; 0x5e00 <init_sd_card>
{
	//ACC variables
	unsigned char accn_x_MSB, accn_x_LSB, accn_y_MSB, accn_y_LSB, accn_z_MSB, accn_z_LSB;
	unsigned char gyr_x_MSB, gyr_x_LSB, gyr_y_MSB, gyr_y_LSB, gyr_z_MSB, gyr_z_LSB;
	unsigned short data_sample[6];
	unsigned char samples_saved = 1, samples_to_save = 100;
    5302:	11 e0       	ldi	r17, 0x01	; 1
	BMI270_config();
	//Configure SD card & create file with header
	init_sd_card();

	//Obtain ACC values
	while(samples_saved <= samples_to_save){
    5304:	75 c0       	rjmp	.+234    	; 0x53f0 <main+0x142>
		//Read ACC values
		accn_x_LSB = I2C_MasterReceiveByte(BMI270_address,ACC_X_LSB_address);
    5306:	6c e0       	ldi	r22, 0x0C	; 12
    5308:	80 ed       	ldi	r24, 0xD0	; 208
    530a:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    530e:	78 2e       	mov	r7, r24
		accn_x_MSB = I2C_MasterReceiveByte(BMI270_address,ACC_X_MSB_address);
    5310:	6d e0       	ldi	r22, 0x0D	; 13
    5312:	80 ed       	ldi	r24, 0xD0	; 208
    5314:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    5318:	68 2e       	mov	r6, r24
		accn_y_LSB = I2C_MasterReceiveByte(BMI270_address,ACC_Y_LSB_address);
    531a:	6e e0       	ldi	r22, 0x0E	; 14
    531c:	80 ed       	ldi	r24, 0xD0	; 208
    531e:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    5322:	88 2e       	mov	r8, r24
		accn_y_MSB = I2C_MasterReceiveByte(BMI270_address,ACC_Y_MSB_address);
    5324:	6f e0       	ldi	r22, 0x0F	; 15
    5326:	80 ed       	ldi	r24, 0xD0	; 208
    5328:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    532c:	b8 2e       	mov	r11, r24
		accn_z_LSB = I2C_MasterReceiveByte(BMI270_address,ACC_Z_LSB_address);
    532e:	60 e1       	ldi	r22, 0x10	; 16
    5330:	80 ed       	ldi	r24, 0xD0	; 208
    5332:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    5336:	98 2e       	mov	r9, r24
		accn_z_MSB = I2C_MasterReceiveByte(BMI270_address,ACC_Z_MSB_address);
    5338:	61 e1       	ldi	r22, 0x11	; 17
    533a:	80 ed       	ldi	r24, 0xD0	; 208
    533c:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    5340:	a8 2e       	mov	r10, r24
		//Read GYR values
		gyr_x_LSB = I2C_MasterReceiveByte(BMI270_address,GYR_X_LSB_address);
    5342:	62 e1       	ldi	r22, 0x12	; 18
    5344:	80 ed       	ldi	r24, 0xD0	; 208
    5346:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    534a:	c8 2e       	mov	r12, r24
		gyr_x_MSB = I2C_MasterReceiveByte(BMI270_address,GYR_X_MSB_address);
    534c:	63 e1       	ldi	r22, 0x13	; 19
    534e:	80 ed       	ldi	r24, 0xD0	; 208
    5350:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    5354:	d8 2e       	mov	r13, r24
		gyr_y_LSB = I2C_MasterReceiveByte(BMI270_address,GYR_Y_LSB_address);
    5356:	64 e1       	ldi	r22, 0x14	; 20
    5358:	80 ed       	ldi	r24, 0xD0	; 208
    535a:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    535e:	e8 2e       	mov	r14, r24
		gyr_y_MSB = I2C_MasterReceiveByte(BMI270_address,GYR_Y_MSB_address);
    5360:	65 e1       	ldi	r22, 0x15	; 21
    5362:	80 ed       	ldi	r24, 0xD0	; 208
    5364:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    5368:	08 2f       	mov	r16, r24
		gyr_z_LSB = I2C_MasterReceiveByte(BMI270_address,GYR_Z_LSB_address);
    536a:	66 e1       	ldi	r22, 0x16	; 22
    536c:	80 ed       	ldi	r24, 0xD0	; 208
    536e:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
    5372:	f8 2e       	mov	r15, r24
		gyr_z_MSB = I2C_MasterReceiveByte(BMI270_address,GYR_Z_MSB_address);
    5374:	67 e1       	ldi	r22, 0x17	; 23
    5376:	80 ed       	ldi	r24, 0xD0	; 208
    5378:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <I2C_MasterReceiveByte>
		
		//Combine 8 bit MSB & LSB values to give 16 bit sample
		data_sample[0] = (accn_x_MSB<<8)|accn_x_LSB;
    537c:	26 2d       	mov	r18, r6
    537e:	30 e0       	ldi	r19, 0x00	; 0
    5380:	32 2f       	mov	r19, r18
    5382:	22 27       	eor	r18, r18
    5384:	27 29       	or	r18, r7
    5386:	3a 83       	std	Y+2, r19	; 0x02
    5388:	29 83       	std	Y+1, r18	; 0x01
		data_sample[1] = (accn_y_MSB<<8)|accn_y_LSB;
    538a:	4b 2d       	mov	r20, r11
    538c:	50 e0       	ldi	r21, 0x00	; 0
    538e:	54 2f       	mov	r21, r20
    5390:	44 27       	eor	r20, r20
    5392:	48 29       	or	r20, r8
    5394:	5c 83       	std	Y+4, r21	; 0x04
    5396:	4b 83       	std	Y+3, r20	; 0x03
		data_sample[2] = (accn_z_MSB<<8)|accn_z_LSB;
    5398:	2a 2d       	mov	r18, r10
    539a:	30 e0       	ldi	r19, 0x00	; 0
    539c:	32 2f       	mov	r19, r18
    539e:	22 27       	eor	r18, r18
    53a0:	29 29       	or	r18, r9
    53a2:	3e 83       	std	Y+6, r19	; 0x06
    53a4:	2d 83       	std	Y+5, r18	; 0x05
		data_sample[3] = (gyr_x_MSB<<8)|gyr_x_LSB;
    53a6:	4d 2d       	mov	r20, r13
    53a8:	50 e0       	ldi	r21, 0x00	; 0
    53aa:	54 2f       	mov	r21, r20
    53ac:	44 27       	eor	r20, r20
    53ae:	4c 29       	or	r20, r12
    53b0:	58 87       	std	Y+8, r21	; 0x08
    53b2:	4f 83       	std	Y+7, r20	; 0x07
		data_sample[4] = (gyr_y_MSB<<8)|gyr_y_LSB;
    53b4:	40 2f       	mov	r20, r16
    53b6:	50 e0       	ldi	r21, 0x00	; 0
    53b8:	54 2f       	mov	r21, r20
    53ba:	44 27       	eor	r20, r20
    53bc:	4e 29       	or	r20, r14
    53be:	5a 87       	std	Y+10, r21	; 0x0a
    53c0:	49 87       	std	Y+9, r20	; 0x09
		data_sample[5] = (gyr_z_MSB<<8)|gyr_z_LSB;
    53c2:	90 e0       	ldi	r25, 0x00	; 0
    53c4:	98 2f       	mov	r25, r24
    53c6:	88 27       	eor	r24, r24
    53c8:	8f 29       	or	r24, r15
    53ca:	9c 87       	std	Y+12, r25	; 0x0c
    53cc:	8b 87       	std	Y+11, r24	; 0x0b

		//Signal tilt z direction using green LED
		if((data_sample[2]&0x8000)==0x8000){
    53ce:	33 23       	and	r19, r19
    53d0:	24 f4       	brge	.+8      	; 0x53da <main+0x12c>
			PORTD|=1<<PD6; //Green LED on if sample neg.
    53d2:	8b b1       	in	r24, 0x0b	; 11
    53d4:	80 64       	ori	r24, 0x40	; 64
    53d6:	8b b9       	out	0x0b, r24	; 11
    53d8:	03 c0       	rjmp	.+6      	; 0x53e0 <main+0x132>
		}
		else{
			PORTD&=~(1<<PD6);
    53da:	8b b1       	in	r24, 0x0b	; 11
    53dc:	8f 7b       	andi	r24, 0xBF	; 191
    53de:	8b b9       	out	0x0b, r24	; 11
		}
		//Turn off red LED at start of SD card write operation
		PORTD&=~(1<<PD5);
    53e0:	8b b1       	in	r24, 0x0b	; 11
    53e2:	8f 7d       	andi	r24, 0xDF	; 223
    53e4:	8b b9       	out	0x0b, r24	; 11
		
		//Write IMU data to SD Card
		SD_sample_write(&data_sample);
    53e6:	ce 01       	movw	r24, r28
    53e8:	01 96       	adiw	r24, 0x01	; 1
    53ea:	0e 94 60 2f 	call	0x5ec0	; 0x5ec0 <SD_sample_write>
		
		samples_saved++;
    53ee:	1f 5f       	subi	r17, 0xFF	; 255
	BMI270_config();
	//Configure SD card & create file with header
	init_sd_card();

	//Obtain ACC values
	while(samples_saved <= samples_to_save){
    53f0:	15 36       	cpi	r17, 0x65	; 101
    53f2:	08 f4       	brcc	.+2      	; 0x53f6 <main+0x148>
    53f4:	88 cf       	rjmp	.-240    	; 0x5306 <main+0x58>
		//Write IMU data to SD Card
		SD_sample_write(&data_sample);
		
		samples_saved++;
	}
}
    53f6:	80 e0       	ldi	r24, 0x00	; 0
    53f8:	90 e0       	ldi	r25, 0x00	; 0
    53fa:	2c 96       	adiw	r28, 0x0c	; 12
    53fc:	0f b6       	in	r0, 0x3f	; 63
    53fe:	f8 94       	cli
    5400:	de bf       	out	0x3e, r29	; 62
    5402:	0f be       	out	0x3f, r0	; 63
    5404:	cd bf       	out	0x3d, r28	; 61
    5406:	df 91       	pop	r29
    5408:	cf 91       	pop	r28
    540a:	1f 91       	pop	r17
    540c:	0f 91       	pop	r16
    540e:	ff 90       	pop	r15
    5410:	ef 90       	pop	r14
    5412:	df 90       	pop	r13
    5414:	cf 90       	pop	r12
    5416:	bf 90       	pop	r11
    5418:	af 90       	pop	r10
    541a:	9f 90       	pop	r9
    541c:	8f 90       	pop	r8
    541e:	7f 90       	pop	r7
    5420:	6f 90       	pop	r6
    5422:	08 95       	ret

00005424 <power_on>:
/* is nothing to do in these functions and chk_power always returns 1.   */

static
void power_on (void)
{
	SPIPORTDDR |= SPI_MOSI | SPI_CS | SPI_SCK; /* Set outputs */
    5424:	84 b1       	in	r24, 0x04	; 4
    5426:	8c 62       	ori	r24, 0x2C	; 44
    5428:	84 b9       	out	0x04, r24	; 4
	SPIPORT |= SPI_MISO;            /* Pull up on SPI_MISO (SD card DO) */
    542a:	85 b1       	in	r24, 0x05	; 5
    542c:	80 61       	ori	r24, 0x10	; 16
    542e:	85 b9       	out	0x05, r24	; 5

	/* Enable SPI, Master, set clock rate fck/16 which gives 1MHz, CPOL and PHA low so setup falling edge and sample rising edge with clock low during idle, DORD low for MSB first*/
	SPCR =  (1 << SPE)|(1 << MSTR)|(1 << SPR0);
    5430:	81 e5       	ldi	r24, 0x51	; 81
    5432:	8c bd       	out	0x2c, r24	; 44
    5434:	08 95       	ret

00005436 <power_off>:
}

static
void power_off (void)
{
	SPCR |= ~(1<<SPE);
    5436:	8c b5       	in	r24, 0x2c	; 44
    5438:	8f 6b       	ori	r24, 0xBF	; 191
    543a:	8c bd       	out	0x2c, r24	; 44
    543c:	08 95       	ret

0000543e <xchg_spi>:
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	SPDR = dat;
    543e:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR, SPIF);
    5440:	0d b4       	in	r0, 0x2d	; 45
    5442:	07 fe       	sbrs	r0, 7
    5444:	fd cf       	rjmp	.-6      	; 0x5440 <xchg_spi+0x2>
	return SPDR;
    5446:	8e b5       	in	r24, 0x2e	; 46
}
    5448:	08 95       	ret

0000544a <xmit_spi_multi>:
static
void xmit_spi_multi (
	const BYTE *p,	/* Data block to be sent */
	UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
    544a:	fc 01       	movw	r30, r24
    544c:	01 c0       	rjmp	.+2      	; 0x5450 <xmit_spi_multi+0x6>
	do {
		SPDR = *p++; while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR,SPIF);
		SPDR = *p++; while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR,SPIF);
    544e:	f9 01       	movw	r30, r18
	const BYTE *p,	/* Data block to be sent */
	UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	do {
		SPDR = *p++; while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR,SPIF);
    5450:	80 81       	ld	r24, Z
    5452:	8e bd       	out	0x2e, r24	; 46
    5454:	0d b4       	in	r0, 0x2d	; 45
    5456:	07 fe       	sbrs	r0, 7
    5458:	fd cf       	rjmp	.-6      	; 0x5454 <xmit_spi_multi+0xa>
		SPDR = *p++; while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR,SPIF);
    545a:	9f 01       	movw	r18, r30
    545c:	2e 5f       	subi	r18, 0xFE	; 254
    545e:	3f 4f       	sbci	r19, 0xFF	; 255
    5460:	81 81       	ldd	r24, Z+1	; 0x01
    5462:	8e bd       	out	0x2e, r24	; 46
    5464:	0d b4       	in	r0, 0x2d	; 45
    5466:	07 fe       	sbrs	r0, 7
    5468:	fd cf       	rjmp	.-6      	; 0x5464 <xmit_spi_multi+0x1a>
	} while (cnt -= 2);
    546a:	62 50       	subi	r22, 0x02	; 2
    546c:	71 09       	sbc	r23, r1
    546e:	79 f7       	brne	.-34     	; 0x544e <xmit_spi_multi+0x4>
}
    5470:	08 95       	ret

00005472 <rcvr_spi_multi>:
static
void rcvr_spi_multi (
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
    5472:	fc 01       	movw	r30, r24
    5474:	01 c0       	rjmp	.+2      	; 0x5478 <rcvr_spi_multi+0x6>
	do {
		SPDR = 0xFF; while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR,SPIF);
		*p++ = SPDR;
		SPDR = 0xFF; while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR,SPIF);
		*p++ = SPDR;
    5476:	f9 01       	movw	r30, r18
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		SPDR = 0xFF; while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR,SPIF);
    5478:	8f ef       	ldi	r24, 0xFF	; 255
    547a:	8e bd       	out	0x2e, r24	; 46
    547c:	0d b4       	in	r0, 0x2d	; 45
    547e:	07 fe       	sbrs	r0, 7
    5480:	fd cf       	rjmp	.-6      	; 0x547c <rcvr_spi_multi+0xa>
		*p++ = SPDR;
    5482:	8e b5       	in	r24, 0x2e	; 46
    5484:	80 83       	st	Z, r24
		SPDR = 0xFF; while (!(SPSR & (1<<SPIF))); //loop_until_bit_is_set(SPSR,SPIF);
    5486:	8f ef       	ldi	r24, 0xFF	; 255
    5488:	8e bd       	out	0x2e, r24	; 46
    548a:	0d b4       	in	r0, 0x2d	; 45
    548c:	07 fe       	sbrs	r0, 7
    548e:	fd cf       	rjmp	.-6      	; 0x548a <rcvr_spi_multi+0x18>
		*p++ = SPDR;
    5490:	9f 01       	movw	r18, r30
    5492:	2e 5f       	subi	r18, 0xFE	; 254
    5494:	3f 4f       	sbci	r19, 0xFF	; 255
    5496:	8e b5       	in	r24, 0x2e	; 46
    5498:	81 83       	std	Z+1, r24	; 0x01
	} while (cnt -= 2);
    549a:	62 50       	subi	r22, 0x02	; 2
    549c:	71 09       	sbc	r23, r1
    549e:	59 f7       	brne	.-42     	; 0x5476 <rcvr_spi_multi+0x4>
}
    54a0:	08 95       	ret

000054a2 <wait_ready>:
)
{
	BYTE d;


	Timer2 = wt / 10;
    54a2:	9c 01       	movw	r18, r24
    54a4:	ad ec       	ldi	r26, 0xCD	; 205
    54a6:	bc ec       	ldi	r27, 0xCC	; 204
    54a8:	0e 94 f5 2f 	call	0x5fea	; 0x5fea <__umulhisi3>
    54ac:	96 95       	lsr	r25
    54ae:	87 95       	ror	r24
    54b0:	96 95       	lsr	r25
    54b2:	87 95       	ror	r24
    54b4:	96 95       	lsr	r25
    54b6:	87 95       	ror	r24
    54b8:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <Timer2>
	do
		d = xchg_spi(0xFF);
    54bc:	8f ef       	ldi	r24, 0xFF	; 255
    54be:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	while (d != 0xFF && Timer2);
    54c2:	8f 3f       	cpi	r24, 0xFF	; 255
    54c4:	21 f0       	breq	.+8      	; 0x54ce <wait_ready+0x2c>
    54c6:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <Timer2>
    54ca:	91 11       	cpse	r25, r1
    54cc:	f7 cf       	rjmp	.-18     	; 0x54bc <wait_ready+0x1a>

	return (d == 0xFF) ? 1 : 0;
    54ce:	91 e0       	ldi	r25, 0x01	; 1
    54d0:	8f 3f       	cpi	r24, 0xFF	; 255
    54d2:	09 f0       	breq	.+2      	; 0x54d6 <wait_ready+0x34>
    54d4:	90 e0       	ldi	r25, 0x00	; 0
}
    54d6:	89 2f       	mov	r24, r25
    54d8:	90 e0       	ldi	r25, 0x00	; 0
    54da:	08 95       	ret

000054dc <deselect>:
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();		/* Set CS# high */
    54dc:	85 b1       	in	r24, 0x05	; 5
    54de:	84 60       	ori	r24, 0x04	; 4
    54e0:	85 b9       	out	0x05, r24	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
    54e2:	8f ef       	ldi	r24, 0xFF	; 255
    54e4:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
    54e8:	08 95       	ret

000054ea <select>:
/* Select the card and wait for ready                                    */
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
    54ea:	cf 93       	push	r28
    54ec:	df 93       	push	r29
	CS_LOW();		/* Set CS# low */
    54ee:	85 b1       	in	r24, 0x05	; 5
    54f0:	8b 7f       	andi	r24, 0xFB	; 251
    54f2:	85 b9       	out	0x05, r24	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
    54f4:	8f ef       	ldi	r24, 0xFF	; 255
    54f6:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	if (wait_ready(500)) return 1;	/* Wait for card ready */
    54fa:	84 ef       	ldi	r24, 0xF4	; 244
    54fc:	91 e0       	ldi	r25, 0x01	; 1
    54fe:	0e 94 51 2a 	call	0x54a2	; 0x54a2 <wait_ready>
    5502:	ec 01       	movw	r28, r24
    5504:	89 2b       	or	r24, r25
    5506:	19 f4       	brne	.+6      	; 0x550e <select+0x24>

	deselect();
    5508:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <deselect>
	return 0;	/* Timeout */
    550c:	02 c0       	rjmp	.+4      	; 0x5512 <select+0x28>
static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */
    550e:	c1 e0       	ldi	r28, 0x01	; 1
    5510:	d0 e0       	ldi	r29, 0x00	; 0

	deselect();
	return 0;	/* Timeout */
}
    5512:	ce 01       	movw	r24, r28
    5514:	df 91       	pop	r29
    5516:	cf 91       	pop	r28
    5518:	08 95       	ret

0000551a <rcvr_datablock>:
static
int rcvr_datablock (
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count (must be multiple of 4) */
)
{
    551a:	0f 93       	push	r16
    551c:	1f 93       	push	r17
    551e:	cf 93       	push	r28
    5520:	df 93       	push	r29
    5522:	ec 01       	movw	r28, r24
    5524:	8b 01       	movw	r16, r22
	BYTE token;


	Timer1 = 20;
    5526:	84 e1       	ldi	r24, 0x14	; 20
    5528:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <Timer1>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
    552c:	8f ef       	ldi	r24, 0xFF	; 255
    552e:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	} while ((token == 0xFF) && Timer1);
    5532:	8f 3f       	cpi	r24, 0xFF	; 255
    5534:	21 f4       	brne	.+8      	; 0x553e <rcvr_datablock+0x24>
    5536:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <Timer1>
    553a:	91 11       	cpse	r25, r1
    553c:	f7 cf       	rjmp	.-18     	; 0x552c <rcvr_datablock+0x12>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    553e:	8e 3f       	cpi	r24, 0xFE	; 254
    5540:	69 f4       	brne	.+26     	; 0x555c <rcvr_datablock+0x42>

	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
    5542:	b8 01       	movw	r22, r16
    5544:	ce 01       	movw	r24, r28
    5546:	0e 94 39 2a 	call	0x5472	; 0x5472 <rcvr_spi_multi>
	xchg_spi(0xFF);					/* Discard CRC */
    554a:	8f ef       	ldi	r24, 0xFF	; 255
    554c:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	xchg_spi(0xFF);
    5550:	8f ef       	ldi	r24, 0xFF	; 255
    5552:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>

	return 1;						/* Return with success */
    5556:	81 e0       	ldi	r24, 0x01	; 1
    5558:	90 e0       	ldi	r25, 0x00	; 0
    555a:	02 c0       	rjmp	.+4      	; 0x5560 <rcvr_datablock+0x46>

	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    555c:	80 e0       	ldi	r24, 0x00	; 0
    555e:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
    5560:	df 91       	pop	r29
    5562:	cf 91       	pop	r28
    5564:	1f 91       	pop	r17
    5566:	0f 91       	pop	r16
    5568:	08 95       	ret

0000556a <xmit_datablock>:
static
int xmit_datablock (
	const BYTE *buff,	/* 512 byte data block to be transmitted */
	BYTE token			/* Data/Stop token */
)
{
    556a:	0f 93       	push	r16
    556c:	1f 93       	push	r17
    556e:	cf 93       	push	r28
    5570:	8c 01       	movw	r16, r24
    5572:	c6 2f       	mov	r28, r22
	BYTE resp;


	if (!wait_ready(500)) return 0;
    5574:	84 ef       	ldi	r24, 0xF4	; 244
    5576:	91 e0       	ldi	r25, 0x01	; 1
    5578:	0e 94 51 2a 	call	0x54a2	; 0x54a2 <wait_ready>
    557c:	00 97       	sbiw	r24, 0x00	; 0
    557e:	f1 f0       	breq	.+60     	; 0x55bc <xmit_datablock+0x52>

	xchg_spi(token);					/* Xmit data token */
    5580:	8c 2f       	mov	r24, r28
    5582:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	if (token != 0xFD) {	/* Is data token */
    5586:	cd 3f       	cpi	r28, 0xFD	; 253
    5588:	a1 f0       	breq	.+40     	; 0x55b2 <xmit_datablock+0x48>
		xmit_spi_multi(buff, 512);		/* Xmit the data block to the MMC */
    558a:	60 e0       	ldi	r22, 0x00	; 0
    558c:	72 e0       	ldi	r23, 0x02	; 2
    558e:	c8 01       	movw	r24, r16
    5590:	0e 94 25 2a 	call	0x544a	; 0x544a <xmit_spi_multi>
		xchg_spi(0xFF);					/* CRC (Dummy) */
    5594:	8f ef       	ldi	r24, 0xFF	; 255
    5596:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
		xchg_spi(0xFF);
    559a:	8f ef       	ldi	r24, 0xFF	; 255
    559c:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
		resp = xchg_spi(0xFF);			/* Reveive data response */
    55a0:	8f ef       	ldi	r24, 0xFF	; 255
    55a2:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
    55a6:	8f 71       	andi	r24, 0x1F	; 31
    55a8:	85 30       	cpi	r24, 0x05	; 5
    55aa:	31 f0       	breq	.+12     	; 0x55b8 <xmit_datablock+0x4e>
			return 0;
    55ac:	80 e0       	ldi	r24, 0x00	; 0
    55ae:	90 e0       	ldi	r25, 0x00	; 0
    55b0:	05 c0       	rjmp	.+10     	; 0x55bc <xmit_datablock+0x52>
	}

	return 1;
    55b2:	81 e0       	ldi	r24, 0x01	; 1
    55b4:	90 e0       	ldi	r25, 0x00	; 0
    55b6:	02 c0       	rjmp	.+4      	; 0x55bc <xmit_datablock+0x52>
    55b8:	81 e0       	ldi	r24, 0x01	; 1
    55ba:	90 e0       	ldi	r25, 0x00	; 0
}
    55bc:	cf 91       	pop	r28
    55be:	1f 91       	pop	r17
    55c0:	0f 91       	pop	r16
    55c2:	08 95       	ret

000055c4 <send_cmd>:
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
    55c4:	ff 92       	push	r15
    55c6:	0f 93       	push	r16
    55c8:	1f 93       	push	r17
    55ca:	cf 93       	push	r28
    55cc:	df 93       	push	r29
    55ce:	c8 2f       	mov	r28, r24
    55d0:	d4 2f       	mov	r29, r20
    55d2:	15 2f       	mov	r17, r21
    55d4:	06 2f       	mov	r16, r22
    55d6:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
    55d8:	88 23       	and	r24, r24
    55da:	4c f4       	brge	.+18     	; 0x55ee <send_cmd+0x2a>
		cmd &= 0x7F;
    55dc:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
    55de:	40 e0       	ldi	r20, 0x00	; 0
    55e0:	50 e0       	ldi	r21, 0x00	; 0
    55e2:	ba 01       	movw	r22, r20
    55e4:	87 e3       	ldi	r24, 0x37	; 55
    55e6:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
		if (res > 1) return res;
    55ea:	82 30       	cpi	r24, 0x02	; 2
    55ec:	88 f5       	brcc	.+98     	; 0x5650 <send_cmd+0x8c>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
    55ee:	cc 30       	cpi	r28, 0x0C	; 12
    55f0:	31 f0       	breq	.+12     	; 0x55fe <send_cmd+0x3a>
		deselect();
    55f2:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <deselect>
		if (!select()) return 0xFF;
    55f6:	0e 94 75 2a 	call	0x54ea	; 0x54ea <select>
    55fa:	89 2b       	or	r24, r25
    55fc:	41 f1       	breq	.+80     	; 0x564e <send_cmd+0x8a>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
    55fe:	8c 2f       	mov	r24, r28
    5600:	80 64       	ori	r24, 0x40	; 64
    5602:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
    5606:	8f 2d       	mov	r24, r15
    5608:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
    560c:	80 2f       	mov	r24, r16
    560e:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
    5612:	81 2f       	mov	r24, r17
    5614:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
    5618:	8d 2f       	mov	r24, r29
    561a:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
    561e:	cc 23       	and	r28, r28
    5620:	11 f0       	breq	.+4      	; 0x5626 <send_cmd+0x62>
	xchg_spi(0x40 | cmd);				/* Start + Command index */
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
    5622:	81 e0       	ldi	r24, 0x01	; 1
    5624:	01 c0       	rjmp	.+2      	; 0x5628 <send_cmd+0x64>
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
    5626:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
    5628:	c8 30       	cpi	r28, 0x08	; 8
    562a:	09 f4       	brne	.+2      	; 0x562e <send_cmd+0x6a>
    562c:	87 e8       	ldi	r24, 0x87	; 135
	xchg_spi(n);
    562e:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
    5632:	cc 30       	cpi	r28, 0x0C	; 12
    5634:	19 f4       	brne	.+6      	; 0x563c <send_cmd+0x78>
    5636:	8f ef       	ldi	r24, 0xFF	; 255
    5638:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
    563c:	ca e0       	ldi	r28, 0x0A	; 10

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		res = xchg_spi(0xFF);
    563e:	8f ef       	ldi	r24, 0xFF	; 255
    5640:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
	while ((res & 0x80) && --n);
    5644:	88 23       	and	r24, r24
    5646:	24 f4       	brge	.+8      	; 0x5650 <send_cmd+0x8c>
    5648:	c1 50       	subi	r28, 0x01	; 1
    564a:	c9 f7       	brne	.-14     	; 0x563e <send_cmd+0x7a>
    564c:	01 c0       	rjmp	.+2      	; 0x5650 <send_cmd+0x8c>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
		deselect();
		if (!select()) return 0xFF;
    564e:	8f ef       	ldi	r24, 0xFF	; 255
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);

	return res;			/* Return with the response value */
}
    5650:	df 91       	pop	r29
    5652:	cf 91       	pop	r28
    5654:	1f 91       	pop	r17
    5656:	0f 91       	pop	r16
    5658:	ff 90       	pop	r15
    565a:	08 95       	ret

0000565c <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
    565c:	ef 92       	push	r14
    565e:	ff 92       	push	r15
    5660:	0f 93       	push	r16
    5662:	1f 93       	push	r17
    5664:	cf 93       	push	r28
    5666:	df 93       	push	r29
    5668:	00 d0       	rcall	.+0      	; 0x566a <disk_initialize+0xe>
    566a:	00 d0       	rcall	.+0      	; 0x566c <disk_initialize+0x10>
    566c:	cd b7       	in	r28, 0x3d	; 61
    566e:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
    5670:	81 11       	cpse	r24, r1
    5672:	b8 c0       	rjmp	.+368    	; 0x57e4 <disk_initialize+0x188>
	power_off();						/* Turn off the socket power to reset the card */
    5674:	0e 94 1b 2a 	call	0x5436	; 0x5436 <power_off>
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
    5678:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    567c:	81 ff       	sbrs	r24, 1
    567e:	03 c0       	rjmp	.+6      	; 0x5686 <disk_initialize+0x2a>
    5680:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    5684:	b0 c0       	rjmp	.+352    	; 0x57e6 <disk_initialize+0x18a>
	power_on();							/* Turn on the socket power */
    5686:	0e 94 12 2a 	call	0x5424	; 0x5424 <power_on>
	//FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */
    568a:	1a e0       	ldi	r17, 0x0A	; 10
    568c:	04 c0       	rjmp	.+8      	; 0x5696 <disk_initialize+0x3a>
    568e:	8f ef       	ldi	r24, 0xFF	; 255
    5690:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
    5694:	11 50       	subi	r17, 0x01	; 1
    5696:	11 11       	cpse	r17, r1
    5698:	fa cf       	rjmp	.-12     	; 0x568e <disk_initialize+0x32>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
    569a:	40 e0       	ldi	r20, 0x00	; 0
    569c:	50 e0       	ldi	r21, 0x00	; 0
    569e:	ba 01       	movw	r22, r20
    56a0:	80 e0       	ldi	r24, 0x00	; 0
    56a2:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    56a6:	81 30       	cpi	r24, 0x01	; 1
    56a8:	09 f0       	breq	.+2      	; 0x56ac <disk_initialize+0x50>
    56aa:	7e c0       	rjmp	.+252    	; 0x57a8 <disk_initialize+0x14c>
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
    56ac:	84 e6       	ldi	r24, 0x64	; 100
    56ae:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <Timer1>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
    56b2:	4a ea       	ldi	r20, 0xAA	; 170
    56b4:	51 e0       	ldi	r21, 0x01	; 1
    56b6:	60 e0       	ldi	r22, 0x00	; 0
    56b8:	70 e0       	ldi	r23, 0x00	; 0
    56ba:	88 e0       	ldi	r24, 0x08	; 8
    56bc:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    56c0:	81 30       	cpi	r24, 0x01	; 1
    56c2:	09 f0       	breq	.+2      	; 0x56c6 <disk_initialize+0x6a>
    56c4:	4a c0       	rjmp	.+148    	; 0x575a <disk_initialize+0xfe>
    56c6:	0e c0       	rjmp	.+28     	; 0x56e4 <disk_initialize+0x88>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
    56c8:	e0 2e       	mov	r14, r16
    56ca:	f1 2c       	mov	r15, r1
    56cc:	8f ef       	ldi	r24, 0xFF	; 255
    56ce:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
    56d2:	e1 e0       	ldi	r30, 0x01	; 1
    56d4:	f0 e0       	ldi	r31, 0x00	; 0
    56d6:	ec 0f       	add	r30, r28
    56d8:	fd 1f       	adc	r31, r29
    56da:	ee 0d       	add	r30, r14
    56dc:	ff 1d       	adc	r31, r15
    56de:	80 83       	st	Z, r24
    56e0:	0f 5f       	subi	r16, 0xFF	; 255
    56e2:	01 c0       	rjmp	.+2      	; 0x56e6 <disk_initialize+0x8a>
    56e4:	01 2f       	mov	r16, r17
    56e6:	04 30       	cpi	r16, 0x04	; 4
    56e8:	78 f3       	brcs	.-34     	; 0x56c8 <disk_initialize+0x6c>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
    56ea:	8b 81       	ldd	r24, Y+3	; 0x03
    56ec:	81 30       	cpi	r24, 0x01	; 1
    56ee:	09 f0       	breq	.+2      	; 0x56f2 <disk_initialize+0x96>
    56f0:	5d c0       	rjmp	.+186    	; 0x57ac <disk_initialize+0x150>
    56f2:	8c 81       	ldd	r24, Y+4	; 0x04
    56f4:	8a 3a       	cpi	r24, 0xAA	; 170
    56f6:	09 f0       	breq	.+2      	; 0x56fa <disk_initialize+0x9e>
    56f8:	5b c0       	rjmp	.+182    	; 0x57b0 <disk_initialize+0x154>
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
    56fa:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <Timer1>
    56fe:	88 23       	and	r24, r24
    5700:	49 f0       	breq	.+18     	; 0x5714 <disk_initialize+0xb8>
    5702:	40 e0       	ldi	r20, 0x00	; 0
    5704:	50 e0       	ldi	r21, 0x00	; 0
    5706:	60 e0       	ldi	r22, 0x00	; 0
    5708:	70 e4       	ldi	r23, 0x40	; 64
    570a:	89 ea       	ldi	r24, 0xA9	; 169
    570c:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5710:	81 11       	cpse	r24, r1
    5712:	f3 cf       	rjmp	.-26     	; 0x56fa <disk_initialize+0x9e>
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
    5714:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <Timer1>
    5718:	88 23       	and	r24, r24
    571a:	09 f4       	brne	.+2      	; 0x571e <disk_initialize+0xc2>
    571c:	4b c0       	rjmp	.+150    	; 0x57b4 <disk_initialize+0x158>
    571e:	40 e0       	ldi	r20, 0x00	; 0
    5720:	50 e0       	ldi	r21, 0x00	; 0
    5722:	ba 01       	movw	r22, r20
    5724:	8a e3       	ldi	r24, 0x3A	; 58
    5726:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    572a:	88 23       	and	r24, r24
    572c:	79 f0       	breq	.+30     	; 0x574c <disk_initialize+0xf0>
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	//FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */

	ty = 0;
    572e:	10 e0       	ldi	r17, 0x00	; 0
    5730:	48 c0       	rjmp	.+144    	; 0x57c2 <disk_initialize+0x166>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
    5732:	e1 2e       	mov	r14, r17
    5734:	f1 2c       	mov	r15, r1
    5736:	8f ef       	ldi	r24, 0xFF	; 255
    5738:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
    573c:	e1 e0       	ldi	r30, 0x01	; 1
    573e:	f0 e0       	ldi	r31, 0x00	; 0
    5740:	ec 0f       	add	r30, r28
    5742:	fd 1f       	adc	r31, r29
    5744:	ee 0d       	add	r30, r14
    5746:	ff 1d       	adc	r31, r15
    5748:	80 83       	st	Z, r24
    574a:	1f 5f       	subi	r17, 0xFF	; 255
    574c:	14 30       	cpi	r17, 0x04	; 4
    574e:	88 f3       	brcs	.-30     	; 0x5732 <disk_initialize+0xd6>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    5750:	89 81       	ldd	r24, Y+1	; 0x01
    5752:	86 ff       	sbrs	r24, 6
    5754:	31 c0       	rjmp	.+98     	; 0x57b8 <disk_initialize+0x15c>
    5756:	1c e0       	ldi	r17, 0x0C	; 12
    5758:	34 c0       	rjmp	.+104    	; 0x57c2 <disk_initialize+0x166>
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
    575a:	40 e0       	ldi	r20, 0x00	; 0
    575c:	50 e0       	ldi	r21, 0x00	; 0
    575e:	ba 01       	movw	r22, r20
    5760:	89 ea       	ldi	r24, 0xA9	; 169
    5762:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5766:	82 30       	cpi	r24, 0x02	; 2
    5768:	18 f4       	brcc	.+6      	; 0x5770 <disk_initialize+0x114>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
    576a:	12 e0       	ldi	r17, 0x02	; 2
    576c:	09 ea       	ldi	r16, 0xA9	; 169
    576e:	02 c0       	rjmp	.+4      	; 0x5774 <disk_initialize+0x118>
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
    5770:	11 e0       	ldi	r17, 0x01	; 1
    5772:	01 e0       	ldi	r16, 0x01	; 1
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
    5774:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <Timer1>
    5778:	88 23       	and	r24, r24
    577a:	41 f0       	breq	.+16     	; 0x578c <disk_initialize+0x130>
    577c:	40 e0       	ldi	r20, 0x00	; 0
    577e:	50 e0       	ldi	r21, 0x00	; 0
    5780:	ba 01       	movw	r22, r20
    5782:	80 2f       	mov	r24, r16
    5784:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5788:	81 11       	cpse	r24, r1
    578a:	f4 cf       	rjmp	.-24     	; 0x5774 <disk_initialize+0x118>
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
    578c:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <Timer1>
    5790:	88 23       	and	r24, r24
    5792:	a1 f0       	breq	.+40     	; 0x57bc <disk_initialize+0x160>
    5794:	40 e0       	ldi	r20, 0x00	; 0
    5796:	52 e0       	ldi	r21, 0x02	; 2
    5798:	60 e0       	ldi	r22, 0x00	; 0
    579a:	70 e0       	ldi	r23, 0x00	; 0
    579c:	80 e1       	ldi	r24, 0x10	; 16
    579e:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    57a2:	81 11       	cpse	r24, r1
    57a4:	0d c0       	rjmp	.+26     	; 0x57c0 <disk_initialize+0x164>
    57a6:	0d c0       	rjmp	.+26     	; 0x57c2 <disk_initialize+0x166>
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	//FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */

	ty = 0;
    57a8:	10 e0       	ldi	r17, 0x00	; 0
    57aa:	0b c0       	rjmp	.+22     	; 0x57c2 <disk_initialize+0x166>
    57ac:	10 e0       	ldi	r17, 0x00	; 0
    57ae:	09 c0       	rjmp	.+18     	; 0x57c2 <disk_initialize+0x166>
    57b0:	10 e0       	ldi	r17, 0x00	; 0
    57b2:	07 c0       	rjmp	.+14     	; 0x57c2 <disk_initialize+0x166>
    57b4:	10 e0       	ldi	r17, 0x00	; 0
    57b6:	05 c0       	rjmp	.+10     	; 0x57c2 <disk_initialize+0x166>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    57b8:	14 e0       	ldi	r17, 0x04	; 4
    57ba:	03 c0       	rjmp	.+6      	; 0x57c2 <disk_initialize+0x166>
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
    57bc:	10 e0       	ldi	r17, 0x00	; 0
    57be:	01 c0       	rjmp	.+2      	; 0x57c2 <disk_initialize+0x166>
    57c0:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
	CardType = ty;
    57c2:	10 93 51 03 	sts	0x0351, r17	; 0x800351 <CardType>
	deselect();
    57c6:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <deselect>

	if (ty) {			/* Initialization succeeded */
    57ca:	11 23       	and	r17, r17
    57cc:	31 f0       	breq	.+12     	; 0x57da <disk_initialize+0x17e>
		Stat &= ~STA_NOINIT;		/* Clear STA_NOINIT */
    57ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    57d2:	8e 7f       	andi	r24, 0xFE	; 254
    57d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    57d8:	02 c0       	rjmp	.+4      	; 0x57de <disk_initialize+0x182>
		//FCLK_FAST();
	} else {			/* Initialization failed */
		power_off();
    57da:	0e 94 1b 2a 	call	0x5436	; 0x5436 <power_off>
	}

	return Stat;
    57de:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    57e2:	01 c0       	rjmp	.+2      	; 0x57e6 <disk_initialize+0x18a>
)
{
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
    57e4:	81 e0       	ldi	r24, 0x01	; 1
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
}
    57e6:	0f 90       	pop	r0
    57e8:	0f 90       	pop	r0
    57ea:	0f 90       	pop	r0
    57ec:	0f 90       	pop	r0
    57ee:	df 91       	pop	r29
    57f0:	cf 91       	pop	r28
    57f2:	1f 91       	pop	r17
    57f4:	0f 91       	pop	r16
    57f6:	ff 90       	pop	r15
    57f8:	ef 90       	pop	r14
    57fa:	08 95       	ret

000057fc <disk_status>:

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
    57fc:	81 11       	cpse	r24, r1
    57fe:	03 c0       	rjmp	.+6      	; 0x5806 <disk_status+0xa>
	return Stat;
    5800:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    5804:	08 95       	ret

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
    5806:	81 e0       	ldi	r24, 0x01	; 1
	return Stat;
}
    5808:	08 95       	ret

0000580a <disk_read>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
    580a:	ff 92       	push	r15
    580c:	0f 93       	push	r16
    580e:	1f 93       	push	r17
    5810:	cf 93       	push	r28
    5812:	df 93       	push	r29
    5814:	eb 01       	movw	r28, r22
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
    5816:	81 11       	cpse	r24, r1
    5818:	43 c0       	rjmp	.+134    	; 0x58a0 <disk_read+0x96>
    581a:	01 15       	cp	r16, r1
    581c:	11 05       	cpc	r17, r1
    581e:	09 f4       	brne	.+2      	; 0x5822 <disk_read+0x18>
    5820:	41 c0       	rjmp	.+130    	; 0x58a4 <disk_read+0x9a>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    5822:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    5826:	80 fd       	sbrc	r24, 0
    5828:	3f c0       	rjmp	.+126    	; 0x58a8 <disk_read+0x9e>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
    582a:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <CardType>
    582e:	83 fd       	sbrc	r24, 3
    5830:	09 c0       	rjmp	.+18     	; 0x5844 <disk_read+0x3a>
    5832:	01 2e       	mov	r0, r17
    5834:	19 e0       	ldi	r17, 0x09	; 9
    5836:	22 0f       	add	r18, r18
    5838:	33 1f       	adc	r19, r19
    583a:	44 1f       	adc	r20, r20
    583c:	55 1f       	adc	r21, r21
    583e:	1a 95       	dec	r17
    5840:	d1 f7       	brne	.-12     	; 0x5836 <disk_read+0x2c>
    5842:	10 2d       	mov	r17, r0

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
    5844:	02 30       	cpi	r16, 0x02	; 2
    5846:	11 05       	cpc	r17, r1
    5848:	28 f0       	brcs	.+10     	; 0x5854 <disk_read+0x4a>
    584a:	0f 2e       	mov	r0, r31
    584c:	f2 e1       	ldi	r31, 0x12	; 18
    584e:	ff 2e       	mov	r15, r31
    5850:	f0 2d       	mov	r31, r0
    5852:	04 c0       	rjmp	.+8      	; 0x585c <disk_read+0x52>
    5854:	0f 2e       	mov	r0, r31
    5856:	f1 e1       	ldi	r31, 0x11	; 17
    5858:	ff 2e       	mov	r15, r31
    585a:	f0 2d       	mov	r31, r0
	if (send_cmd(cmd, sector) == 0) {
    585c:	ba 01       	movw	r22, r20
    585e:	a9 01       	movw	r20, r18
    5860:	8f 2d       	mov	r24, r15
    5862:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5866:	81 11       	cpse	r24, r1
    5868:	14 c0       	rjmp	.+40     	; 0x5892 <disk_read+0x88>
		do {
			if (!rcvr_datablock(buff, 512)) break;
    586a:	60 e0       	ldi	r22, 0x00	; 0
    586c:	72 e0       	ldi	r23, 0x02	; 2
    586e:	ce 01       	movw	r24, r28
    5870:	0e 94 8d 2a 	call	0x551a	; 0x551a <rcvr_datablock>
    5874:	89 2b       	or	r24, r25
    5876:	21 f0       	breq	.+8      	; 0x5880 <disk_read+0x76>
			buff += 512;
    5878:	de 5f       	subi	r29, 0xFE	; 254
		} while (--count);
    587a:	01 50       	subi	r16, 0x01	; 1
    587c:	11 09       	sbc	r17, r1
    587e:	a9 f7       	brne	.-22     	; 0x586a <disk_read+0x60>
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
    5880:	82 e1       	ldi	r24, 0x12	; 18
    5882:	f8 12       	cpse	r15, r24
    5884:	06 c0       	rjmp	.+12     	; 0x5892 <disk_read+0x88>
    5886:	40 e0       	ldi	r20, 0x00	; 0
    5888:	50 e0       	ldi	r21, 0x00	; 0
    588a:	ba 01       	movw	r22, r20
    588c:	8c e0       	ldi	r24, 0x0C	; 12
    588e:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
	}
	deselect();
    5892:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <deselect>

	return count ? RES_ERROR : RES_OK;
    5896:	81 e0       	ldi	r24, 0x01	; 1
    5898:	01 2b       	or	r16, r17
    589a:	39 f4       	brne	.+14     	; 0x58aa <disk_read+0xa0>
    589c:	80 e0       	ldi	r24, 0x00	; 0
    589e:	05 c0       	rjmp	.+10     	; 0x58aa <disk_read+0xa0>
)
{
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
    58a0:	84 e0       	ldi	r24, 0x04	; 4
    58a2:	03 c0       	rjmp	.+6      	; 0x58aa <disk_read+0xa0>
    58a4:	84 e0       	ldi	r24, 0x04	; 4
    58a6:	01 c0       	rjmp	.+2      	; 0x58aa <disk_read+0xa0>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    58a8:	83 e0       	ldi	r24, 0x03	; 3
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
    58aa:	df 91       	pop	r29
    58ac:	cf 91       	pop	r28
    58ae:	1f 91       	pop	r17
    58b0:	0f 91       	pop	r16
    58b2:	ff 90       	pop	r15
    58b4:	08 95       	ret

000058b6 <disk_write>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
    58b6:	cf 92       	push	r12
    58b8:	df 92       	push	r13
    58ba:	ef 92       	push	r14
    58bc:	ff 92       	push	r15
    58be:	0f 93       	push	r16
    58c0:	1f 93       	push	r17
    58c2:	cf 93       	push	r28
    58c4:	df 93       	push	r29
    58c6:	eb 01       	movw	r28, r22
    58c8:	69 01       	movw	r12, r18
    58ca:	7a 01       	movw	r14, r20
	if (pdrv || !count) return RES_PARERR;
    58cc:	81 11       	cpse	r24, r1
    58ce:	57 c0       	rjmp	.+174    	; 0x597e <disk_write+0xc8>
    58d0:	01 15       	cp	r16, r1
    58d2:	11 05       	cpc	r17, r1
    58d4:	09 f4       	brne	.+2      	; 0x58d8 <disk_write+0x22>
    58d6:	55 c0       	rjmp	.+170    	; 0x5982 <disk_write+0xcc>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    58d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    58dc:	80 fd       	sbrc	r24, 0
    58de:	53 c0       	rjmp	.+166    	; 0x5986 <disk_write+0xd0>
	if (Stat & STA_PROTECT) return RES_WRPRT;
    58e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    58e4:	82 fd       	sbrc	r24, 2
    58e6:	51 c0       	rjmp	.+162    	; 0x598a <disk_write+0xd4>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
    58e8:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <CardType>
    58ec:	83 fd       	sbrc	r24, 3
    58ee:	09 c0       	rjmp	.+18     	; 0x5902 <disk_write+0x4c>
    58f0:	0b 2e       	mov	r0, r27
    58f2:	b9 e0       	ldi	r27, 0x09	; 9
    58f4:	cc 0c       	add	r12, r12
    58f6:	dd 1c       	adc	r13, r13
    58f8:	ee 1c       	adc	r14, r14
    58fa:	ff 1c       	adc	r15, r15
    58fc:	ba 95       	dec	r27
    58fe:	d1 f7       	brne	.-12     	; 0x58f4 <disk_write+0x3e>
    5900:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
    5902:	01 30       	cpi	r16, 0x01	; 1
    5904:	11 05       	cpc	r17, r1
    5906:	71 f4       	brne	.+28     	; 0x5924 <disk_write+0x6e>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    5908:	b7 01       	movw	r22, r14
    590a:	a6 01       	movw	r20, r12
    590c:	88 e1       	ldi	r24, 0x18	; 24
    590e:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5912:	81 11       	cpse	r24, r1
    5914:	2d c0       	rjmp	.+90     	; 0x5970 <disk_write+0xba>
			&& xmit_datablock(buff, 0xFE))
    5916:	6e ef       	ldi	r22, 0xFE	; 254
    5918:	ce 01       	movw	r24, r28
    591a:	0e 94 b5 2a 	call	0x556a	; 0x556a <xmit_datablock>
    591e:	89 2b       	or	r24, r25
    5920:	11 f5       	brne	.+68     	; 0x5966 <disk_write+0xb0>
    5922:	26 c0       	rjmp	.+76     	; 0x5970 <disk_write+0xba>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    5924:	86 70       	andi	r24, 0x06	; 6
    5926:	31 f0       	breq	.+12     	; 0x5934 <disk_write+0x7e>
    5928:	a8 01       	movw	r20, r16
    592a:	60 e0       	ldi	r22, 0x00	; 0
    592c:	70 e0       	ldi	r23, 0x00	; 0
    592e:	87 e9       	ldi	r24, 0x97	; 151
    5930:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
    5934:	b7 01       	movw	r22, r14
    5936:	a6 01       	movw	r20, r12
    5938:	89 e1       	ldi	r24, 0x19	; 25
    593a:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    593e:	81 11       	cpse	r24, r1
    5940:	17 c0       	rjmp	.+46     	; 0x5970 <disk_write+0xba>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
    5942:	6c ef       	ldi	r22, 0xFC	; 252
    5944:	ce 01       	movw	r24, r28
    5946:	0e 94 b5 2a 	call	0x556a	; 0x556a <xmit_datablock>
    594a:	89 2b       	or	r24, r25
    594c:	21 f0       	breq	.+8      	; 0x5956 <disk_write+0xa0>
				buff += 512;
    594e:	de 5f       	subi	r29, 0xFE	; 254
			} while (--count);
    5950:	01 50       	subi	r16, 0x01	; 1
    5952:	11 09       	sbc	r17, r1
    5954:	b1 f7       	brne	.-20     	; 0x5942 <disk_write+0x8c>
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
    5956:	6d ef       	ldi	r22, 0xFD	; 253
    5958:	80 e0       	ldi	r24, 0x00	; 0
    595a:	90 e0       	ldi	r25, 0x00	; 0
    595c:	0e 94 b5 2a 	call	0x556a	; 0x556a <xmit_datablock>
    5960:	89 2b       	or	r24, r25
    5962:	21 f0       	breq	.+8      	; 0x596c <disk_write+0xb6>
    5964:	05 c0       	rjmp	.+10     	; 0x5970 <disk_write+0xba>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
			count = 0;
    5966:	00 e0       	ldi	r16, 0x00	; 0
    5968:	10 e0       	ldi	r17, 0x00	; 0
    596a:	02 c0       	rjmp	.+4      	; 0x5970 <disk_write+0xba>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
				count = 1;
    596c:	01 e0       	ldi	r16, 0x01	; 1
    596e:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
	deselect();
    5970:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <deselect>

	return count ? RES_ERROR : RES_OK;
    5974:	81 e0       	ldi	r24, 0x01	; 1
    5976:	01 2b       	or	r16, r17
    5978:	49 f4       	brne	.+18     	; 0x598c <disk_write+0xd6>
    597a:	80 e0       	ldi	r24, 0x00	; 0
    597c:	07 c0       	rjmp	.+14     	; 0x598c <disk_write+0xd6>
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
	if (pdrv || !count) return RES_PARERR;
    597e:	84 e0       	ldi	r24, 0x04	; 4
    5980:	05 c0       	rjmp	.+10     	; 0x598c <disk_write+0xd6>
    5982:	84 e0       	ldi	r24, 0x04	; 4
    5984:	03 c0       	rjmp	.+6      	; 0x598c <disk_write+0xd6>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    5986:	83 e0       	ldi	r24, 0x03	; 3
    5988:	01 c0       	rjmp	.+2      	; 0x598c <disk_write+0xd6>
	if (Stat & STA_PROTECT) return RES_WRPRT;
    598a:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
    598c:	df 91       	pop	r29
    598e:	cf 91       	pop	r28
    5990:	1f 91       	pop	r17
    5992:	0f 91       	pop	r16
    5994:	ff 90       	pop	r15
    5996:	ef 90       	pop	r14
    5998:	df 90       	pop	r13
    599a:	cf 90       	pop	r12
    599c:	08 95       	ret

0000599e <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0) */
	BYTE cmd,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
    599e:	cf 92       	push	r12
    59a0:	df 92       	push	r13
    59a2:	ff 92       	push	r15
    59a4:	0f 93       	push	r16
    59a6:	1f 93       	push	r17
    59a8:	cf 93       	push	r28
    59aa:	df 93       	push	r29
    59ac:	cd b7       	in	r28, 0x3d	; 61
    59ae:	de b7       	in	r29, 0x3e	; 62
    59b0:	60 97       	sbiw	r28, 0x10	; 16
    59b2:	0f b6       	in	r0, 0x3f	; 63
    59b4:	f8 94       	cli
    59b6:	de bf       	out	0x3e, r29	; 62
    59b8:	0f be       	out	0x3f, r0	; 63
    59ba:	cd bf       	out	0x3d, r28	; 61
    59bc:	8a 01       	movw	r16, r20
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
    59be:	81 11       	cpse	r24, r1
    59c0:	a0 c1       	rjmp	.+832    	; 0x5d02 <disk_ioctl+0x364>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
    59c2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    59c6:	80 fd       	sbrc	r24, 0
    59c8:	9e c1       	rjmp	.+828    	; 0x5d06 <disk_ioctl+0x368>

	switch (cmd) {
    59ca:	86 2f       	mov	r24, r22
    59cc:	90 e0       	ldi	r25, 0x00	; 0
    59ce:	87 33       	cpi	r24, 0x37	; 55
    59d0:	91 05       	cpc	r25, r1
    59d2:	08 f0       	brcs	.+2      	; 0x59d6 <disk_ioctl+0x38>
    59d4:	79 c1       	rjmp	.+754    	; 0x5cc8 <disk_ioctl+0x32a>
    59d6:	fc 01       	movw	r30, r24
    59d8:	ec 5c       	subi	r30, 0xCC	; 204
    59da:	ff 4f       	sbci	r31, 0xFF	; 255
    59dc:	0c 94 ef 2f 	jmp	0x5fde	; 0x5fde <__tablejump2__>
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
    59e0:	0e 94 75 2a 	call	0x54ea	; 0x54ea <select>
    59e4:	89 2b       	or	r24, r25
    59e6:	09 f0       	breq	.+2      	; 0x59ea <disk_ioctl+0x4c>
    59e8:	71 c1       	rjmp	.+738    	; 0x5ccc <disk_ioctl+0x32e>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    59ea:	11 e0       	ldi	r17, 0x01	; 1
    59ec:	86 c1       	rjmp	.+780    	; 0x5cfa <disk_ioctl+0x35c>
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
    59ee:	40 e0       	ldi	r20, 0x00	; 0
    59f0:	50 e0       	ldi	r21, 0x00	; 0
    59f2:	ba 01       	movw	r22, r20
    59f4:	89 e0       	ldi	r24, 0x09	; 9
    59f6:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    59fa:	81 11       	cpse	r24, r1
    59fc:	69 c1       	rjmp	.+722    	; 0x5cd0 <disk_ioctl+0x332>
    59fe:	60 e1       	ldi	r22, 0x10	; 16
    5a00:	70 e0       	ldi	r23, 0x00	; 0
    5a02:	ce 01       	movw	r24, r28
    5a04:	01 96       	adiw	r24, 0x01	; 1
    5a06:	0e 94 8d 2a 	call	0x551a	; 0x551a <rcvr_datablock>
    5a0a:	89 2b       	or	r24, r25
    5a0c:	09 f4       	brne	.+2      	; 0x5a10 <disk_ioctl+0x72>
    5a0e:	62 c1       	rjmp	.+708    	; 0x5cd4 <disk_ioctl+0x336>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
    5a10:	89 81       	ldd	r24, Y+1	; 0x01
    5a12:	82 95       	swap	r24
    5a14:	86 95       	lsr	r24
    5a16:	86 95       	lsr	r24
    5a18:	83 70       	andi	r24, 0x03	; 3
    5a1a:	81 30       	cpi	r24, 0x01	; 1
    5a1c:	31 f5       	brne	.+76     	; 0x5a6a <disk_ioctl+0xcc>
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
    5a1e:	8a 85       	ldd	r24, Y+10	; 0x0a
    5a20:	29 85       	ldd	r18, Y+9	; 0x09
    5a22:	30 e0       	ldi	r19, 0x00	; 0
    5a24:	32 2f       	mov	r19, r18
    5a26:	22 27       	eor	r18, r18
    5a28:	28 0f       	add	r18, r24
    5a2a:	31 1d       	adc	r19, r1
    5a2c:	88 85       	ldd	r24, Y+8	; 0x08
    5a2e:	8f 73       	andi	r24, 0x3F	; 63
    5a30:	90 e0       	ldi	r25, 0x00	; 0
    5a32:	a0 e0       	ldi	r26, 0x00	; 0
    5a34:	b0 e0       	ldi	r27, 0x00	; 0
    5a36:	dc 01       	movw	r26, r24
    5a38:	99 27       	eor	r25, r25
    5a3a:	88 27       	eor	r24, r24
    5a3c:	82 0f       	add	r24, r18
    5a3e:	93 1f       	adc	r25, r19
    5a40:	a1 1d       	adc	r26, r1
    5a42:	b1 1d       	adc	r27, r1
    5a44:	01 96       	adiw	r24, 0x01	; 1
    5a46:	a1 1d       	adc	r26, r1
    5a48:	b1 1d       	adc	r27, r1
				*(DWORD*)buff = csize << 10;
    5a4a:	07 2e       	mov	r0, r23
    5a4c:	7a e0       	ldi	r23, 0x0A	; 10
    5a4e:	88 0f       	add	r24, r24
    5a50:	99 1f       	adc	r25, r25
    5a52:	aa 1f       	adc	r26, r26
    5a54:	bb 1f       	adc	r27, r27
    5a56:	7a 95       	dec	r23
    5a58:	d1 f7       	brne	.-12     	; 0x5a4e <disk_ioctl+0xb0>
    5a5a:	70 2d       	mov	r23, r0
    5a5c:	f8 01       	movw	r30, r16
    5a5e:	80 83       	st	Z, r24
    5a60:	91 83       	std	Z+1, r25	; 0x01
    5a62:	a2 83       	std	Z+2, r26	; 0x02
    5a64:	b3 83       	std	Z+3, r27	; 0x03
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
			}
			res = RES_OK;
    5a66:	10 e0       	ldi	r17, 0x00	; 0
    5a68:	48 c1       	rjmp	.+656    	; 0x5cfa <disk_ioctl+0x35c>
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    5a6a:	2e 81       	ldd	r18, Y+6	; 0x06
    5a6c:	9b 85       	ldd	r25, Y+11	; 0x0b
    5a6e:	99 1f       	adc	r25, r25
    5a70:	99 27       	eor	r25, r25
    5a72:	99 1f       	adc	r25, r25
    5a74:	8a 85       	ldd	r24, Y+10	; 0x0a
    5a76:	2f 70       	andi	r18, 0x0F	; 15
    5a78:	29 0f       	add	r18, r25
    5a7a:	83 70       	andi	r24, 0x03	; 3
    5a7c:	88 0f       	add	r24, r24
    5a7e:	28 0f       	add	r18, r24
    5a80:	2e 5f       	subi	r18, 0xFE	; 254
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    5a82:	39 85       	ldd	r19, Y+9	; 0x09
    5a84:	88 85       	ldd	r24, Y+8	; 0x08
    5a86:	90 e0       	ldi	r25, 0x00	; 0
    5a88:	88 0f       	add	r24, r24
    5a8a:	99 1f       	adc	r25, r25
    5a8c:	88 0f       	add	r24, r24
    5a8e:	99 1f       	adc	r25, r25
    5a90:	32 95       	swap	r19
    5a92:	36 95       	lsr	r19
    5a94:	36 95       	lsr	r19
    5a96:	33 70       	andi	r19, 0x03	; 3
    5a98:	ac 01       	movw	r20, r24
    5a9a:	43 0f       	add	r20, r19
    5a9c:	51 1d       	adc	r21, r1
    5a9e:	8f 81       	ldd	r24, Y+7	; 0x07
    5aa0:	83 70       	andi	r24, 0x03	; 3
    5aa2:	90 e0       	ldi	r25, 0x00	; 0
    5aa4:	98 2f       	mov	r25, r24
    5aa6:	88 27       	eor	r24, r24
    5aa8:	99 0f       	add	r25, r25
    5aaa:	99 0f       	add	r25, r25
    5aac:	84 0f       	add	r24, r20
    5aae:	95 1f       	adc	r25, r21
    5ab0:	01 96       	adiw	r24, 0x01	; 1
    5ab2:	a0 e0       	ldi	r26, 0x00	; 0
    5ab4:	b0 e0       	ldi	r27, 0x00	; 0
				*(DWORD*)buff = csize << (n - 9);
    5ab6:	30 e0       	ldi	r19, 0x00	; 0
    5ab8:	29 50       	subi	r18, 0x09	; 9
    5aba:	31 09       	sbc	r19, r1
    5abc:	04 c0       	rjmp	.+8      	; 0x5ac6 <disk_ioctl+0x128>
    5abe:	88 0f       	add	r24, r24
    5ac0:	99 1f       	adc	r25, r25
    5ac2:	aa 1f       	adc	r26, r26
    5ac4:	bb 1f       	adc	r27, r27
    5ac6:	2a 95       	dec	r18
    5ac8:	d2 f7       	brpl	.-12     	; 0x5abe <disk_ioctl+0x120>
    5aca:	f8 01       	movw	r30, r16
    5acc:	80 83       	st	Z, r24
    5ace:	91 83       	std	Z+1, r25	; 0x01
    5ad0:	a2 83       	std	Z+2, r26	; 0x02
    5ad2:	b3 83       	std	Z+3, r27	; 0x03
			}
			res = RES_OK;
    5ad4:	10 e0       	ldi	r17, 0x00	; 0
    5ad6:	11 c1       	rjmp	.+546    	; 0x5cfa <disk_ioctl+0x35c>
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
    5ad8:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <CardType>
    5adc:	82 ff       	sbrs	r24, 2
    5ade:	35 c0       	rjmp	.+106    	; 0x5b4a <disk_ioctl+0x1ac>
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
    5ae0:	40 e0       	ldi	r20, 0x00	; 0
    5ae2:	50 e0       	ldi	r21, 0x00	; 0
    5ae4:	ba 01       	movw	r22, r20
    5ae6:	8d e8       	ldi	r24, 0x8D	; 141
    5ae8:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5aec:	81 11       	cpse	r24, r1
    5aee:	f4 c0       	rjmp	.+488    	; 0x5cd8 <disk_ioctl+0x33a>
				xchg_spi(0xFF);
    5af0:	8f ef       	ldi	r24, 0xFF	; 255
    5af2:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
    5af6:	60 e1       	ldi	r22, 0x10	; 16
    5af8:	70 e0       	ldi	r23, 0x00	; 0
    5afa:	ce 01       	movw	r24, r28
    5afc:	01 96       	adiw	r24, 0x01	; 1
    5afe:	0e 94 8d 2a 	call	0x551a	; 0x551a <rcvr_datablock>
    5b02:	89 2b       	or	r24, r25
    5b04:	39 f4       	brne	.+14     	; 0x5b14 <disk_ioctl+0x176>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5b06:	11 e0       	ldi	r17, 0x01	; 1
    5b08:	f8 c0       	rjmp	.+496    	; 0x5cfa <disk_ioctl+0x35c>
	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
				xchg_spi(0xFF);
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
    5b0a:	8f ef       	ldi	r24, 0xFF	; 255
    5b0c:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
    5b10:	fa 94       	dec	r15
    5b12:	04 c0       	rjmp	.+8      	; 0x5b1c <disk_ioctl+0x17e>
    5b14:	0f 2e       	mov	r0, r31
    5b16:	f0 e3       	ldi	r31, 0x30	; 48
    5b18:	ff 2e       	mov	r15, r31
    5b1a:	f0 2d       	mov	r31, r0
    5b1c:	f1 10       	cpse	r15, r1
    5b1e:	f5 cf       	rjmp	.-22     	; 0x5b0a <disk_ioctl+0x16c>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
    5b20:	2b 85       	ldd	r18, Y+11	; 0x0b
    5b22:	22 95       	swap	r18
    5b24:	2f 70       	andi	r18, 0x0F	; 15
    5b26:	80 e1       	ldi	r24, 0x10	; 16
    5b28:	90 e0       	ldi	r25, 0x00	; 0
    5b2a:	a0 e0       	ldi	r26, 0x00	; 0
    5b2c:	b0 e0       	ldi	r27, 0x00	; 0
    5b2e:	04 c0       	rjmp	.+8      	; 0x5b38 <disk_ioctl+0x19a>
    5b30:	88 0f       	add	r24, r24
    5b32:	99 1f       	adc	r25, r25
    5b34:	aa 1f       	adc	r26, r26
    5b36:	bb 1f       	adc	r27, r27
    5b38:	2a 95       	dec	r18
    5b3a:	d2 f7       	brpl	.-12     	; 0x5b30 <disk_ioctl+0x192>
    5b3c:	f8 01       	movw	r30, r16
    5b3e:	80 83       	st	Z, r24
    5b40:	91 83       	std	Z+1, r25	; 0x01
    5b42:	a2 83       	std	Z+2, r26	; 0x02
    5b44:	b3 83       	std	Z+3, r27	; 0x03
					res = RES_OK;
    5b46:	10 e0       	ldi	r17, 0x00	; 0
    5b48:	d8 c0       	rjmp	.+432    	; 0x5cfa <disk_ioctl+0x35c>
				}
			}
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
    5b4a:	40 e0       	ldi	r20, 0x00	; 0
    5b4c:	50 e0       	ldi	r21, 0x00	; 0
    5b4e:	ba 01       	movw	r22, r20
    5b50:	89 e0       	ldi	r24, 0x09	; 9
    5b52:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5b56:	81 11       	cpse	r24, r1
    5b58:	c1 c0       	rjmp	.+386    	; 0x5cdc <disk_ioctl+0x33e>
    5b5a:	60 e1       	ldi	r22, 0x10	; 16
    5b5c:	70 e0       	ldi	r23, 0x00	; 0
    5b5e:	ce 01       	movw	r24, r28
    5b60:	01 96       	adiw	r24, 0x01	; 1
    5b62:	0e 94 8d 2a 	call	0x551a	; 0x551a <rcvr_datablock>
    5b66:	89 2b       	or	r24, r25
    5b68:	09 f4       	brne	.+2      	; 0x5b6c <disk_ioctl+0x1ce>
    5b6a:	ba c0       	rjmp	.+372    	; 0x5ce0 <disk_ioctl+0x342>
				if (CardType & CT_SD1) {	/* SDv1 */
    5b6c:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <CardType>
    5b70:	81 ff       	sbrs	r24, 1
    5b72:	1f c0       	rjmp	.+62     	; 0x5bb2 <disk_ioctl+0x214>
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
    5b74:	8b 85       	ldd	r24, Y+11	; 0x0b
    5b76:	8f 73       	andi	r24, 0x3F	; 63
    5b78:	90 e0       	ldi	r25, 0x00	; 0
    5b7a:	88 0f       	add	r24, r24
    5b7c:	99 1f       	adc	r25, r25
    5b7e:	2c 85       	ldd	r18, Y+12	; 0x0c
    5b80:	27 fd       	sbrc	r18, 7
    5b82:	01 96       	adiw	r24, 0x01	; 1
    5b84:	01 96       	adiw	r24, 0x01	; 1
    5b86:	2e 85       	ldd	r18, Y+14	; 0x0e
    5b88:	22 95       	swap	r18
    5b8a:	26 95       	lsr	r18
    5b8c:	26 95       	lsr	r18
    5b8e:	23 70       	andi	r18, 0x03	; 3
    5b90:	30 e0       	ldi	r19, 0x00	; 0
    5b92:	21 50       	subi	r18, 0x01	; 1
    5b94:	31 09       	sbc	r19, r1
    5b96:	02 c0       	rjmp	.+4      	; 0x5b9c <disk_ioctl+0x1fe>
    5b98:	88 0f       	add	r24, r24
    5b9a:	99 1f       	adc	r25, r25
    5b9c:	2a 95       	dec	r18
    5b9e:	e2 f7       	brpl	.-8      	; 0x5b98 <disk_ioctl+0x1fa>
    5ba0:	a0 e0       	ldi	r26, 0x00	; 0
    5ba2:	b0 e0       	ldi	r27, 0x00	; 0
    5ba4:	f8 01       	movw	r30, r16
    5ba6:	80 83       	st	Z, r24
    5ba8:	91 83       	std	Z+1, r25	; 0x01
    5baa:	a2 83       	std	Z+2, r26	; 0x02
    5bac:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
				}
				res = RES_OK;
    5bae:	10 e0       	ldi	r17, 0x00	; 0
    5bb0:	a4 c0       	rjmp	.+328    	; 0x5cfa <disk_ioctl+0x35c>
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
				if (CardType & CT_SD1) {	/* SDv1 */
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    5bb2:	2b 85       	ldd	r18, Y+11	; 0x0b
    5bb4:	2c 77       	andi	r18, 0x7C	; 124
    5bb6:	30 e0       	ldi	r19, 0x00	; 0
    5bb8:	35 95       	asr	r19
    5bba:	27 95       	ror	r18
    5bbc:	35 95       	asr	r19
    5bbe:	27 95       	ror	r18
    5bc0:	2f 5f       	subi	r18, 0xFF	; 255
    5bc2:	3f 4f       	sbci	r19, 0xFF	; 255
    5bc4:	8c 85       	ldd	r24, Y+12	; 0x0c
    5bc6:	48 2f       	mov	r20, r24
    5bc8:	43 70       	andi	r20, 0x03	; 3
    5bca:	82 95       	swap	r24
    5bcc:	86 95       	lsr	r24
    5bce:	87 70       	andi	r24, 0x07	; 7
    5bd0:	90 e0       	ldi	r25, 0x00	; 0
    5bd2:	f8 e0       	ldi	r31, 0x08	; 8
    5bd4:	4f 9f       	mul	r20, r31
    5bd6:	80 0d       	add	r24, r0
    5bd8:	91 1d       	adc	r25, r1
    5bda:	11 24       	eor	r1, r1
    5bdc:	01 96       	adiw	r24, 0x01	; 1
    5bde:	82 9f       	mul	r24, r18
    5be0:	a0 01       	movw	r20, r0
    5be2:	83 9f       	mul	r24, r19
    5be4:	50 0d       	add	r21, r0
    5be6:	92 9f       	mul	r25, r18
    5be8:	50 0d       	add	r21, r0
    5bea:	11 24       	eor	r1, r1
    5bec:	ca 01       	movw	r24, r20
    5bee:	a0 e0       	ldi	r26, 0x00	; 0
    5bf0:	b0 e0       	ldi	r27, 0x00	; 0
    5bf2:	f8 01       	movw	r30, r16
    5bf4:	80 83       	st	Z, r24
    5bf6:	91 83       	std	Z+1, r25	; 0x01
    5bf8:	a2 83       	std	Z+2, r26	; 0x02
    5bfa:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
    5bfc:	10 e0       	ldi	r17, 0x00	; 0
    5bfe:	7d c0       	rjmp	.+250    	; 0x5cfa <disk_ioctl+0x35c>
		break;

	/* Following commands are never used by FatFs module */

	case MMC_GET_TYPE :		/* Get card type flags (1 byte) */
		*ptr = CardType;
    5c00:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <CardType>
    5c04:	fa 01       	movw	r30, r20
    5c06:	80 83       	st	Z, r24
		res = RES_OK;
    5c08:	10 e0       	ldi	r17, 0x00	; 0
		break;
    5c0a:	77 c0       	rjmp	.+238    	; 0x5cfa <disk_ioctl+0x35c>

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
    5c0c:	40 e0       	ldi	r20, 0x00	; 0
    5c0e:	50 e0       	ldi	r21, 0x00	; 0
    5c10:	ba 01       	movw	r22, r20
    5c12:	89 e0       	ldi	r24, 0x09	; 9
    5c14:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5c18:	81 11       	cpse	r24, r1
    5c1a:	64 c0       	rjmp	.+200    	; 0x5ce4 <disk_ioctl+0x346>
			&& rcvr_datablock(ptr, 16))
    5c1c:	60 e1       	ldi	r22, 0x10	; 16
    5c1e:	70 e0       	ldi	r23, 0x00	; 0
    5c20:	c8 01       	movw	r24, r16
    5c22:	0e 94 8d 2a 	call	0x551a	; 0x551a <rcvr_datablock>
    5c26:	89 2b       	or	r24, r25
    5c28:	09 f0       	breq	.+2      	; 0x5c2c <disk_ioctl+0x28e>
    5c2a:	5e c0       	rjmp	.+188    	; 0x5ce8 <disk_ioctl+0x34a>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5c2c:	11 e0       	ldi	r17, 0x01	; 1
    5c2e:	65 c0       	rjmp	.+202    	; 0x5cfa <disk_ioctl+0x35c>
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
		break;

	case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
		if (send_cmd(CMD10, 0) == 0		/* READ_CID */
    5c30:	40 e0       	ldi	r20, 0x00	; 0
    5c32:	50 e0       	ldi	r21, 0x00	; 0
    5c34:	ba 01       	movw	r22, r20
    5c36:	8a e0       	ldi	r24, 0x0A	; 10
    5c38:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5c3c:	81 11       	cpse	r24, r1
    5c3e:	56 c0       	rjmp	.+172    	; 0x5cec <disk_ioctl+0x34e>
			&& rcvr_datablock(ptr, 16))
    5c40:	60 e1       	ldi	r22, 0x10	; 16
    5c42:	70 e0       	ldi	r23, 0x00	; 0
    5c44:	c8 01       	movw	r24, r16
    5c46:	0e 94 8d 2a 	call	0x551a	; 0x551a <rcvr_datablock>
    5c4a:	89 2b       	or	r24, r25
    5c4c:	09 f0       	breq	.+2      	; 0x5c50 <disk_ioctl+0x2b2>
    5c4e:	50 c0       	rjmp	.+160    	; 0x5cf0 <disk_ioctl+0x352>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5c50:	11 e0       	ldi	r17, 0x01	; 1
    5c52:	53 c0       	rjmp	.+166    	; 0x5cfa <disk_ioctl+0x35c>
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
    5c54:	40 e0       	ldi	r20, 0x00	; 0
    5c56:	50 e0       	ldi	r21, 0x00	; 0
    5c58:	ba 01       	movw	r22, r20
    5c5a:	8a e3       	ldi	r24, 0x3A	; 58
    5c5c:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5c60:	88 23       	and	r24, r24
    5c62:	71 f0       	breq	.+28     	; 0x5c80 <disk_ioctl+0x2e2>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5c64:	11 e0       	ldi	r17, 0x01	; 1
    5c66:	49 c0       	rjmp	.+146    	; 0x5cfa <disk_ioctl+0x35c>
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
    5c68:	68 01       	movw	r12, r16
    5c6a:	ff ef       	ldi	r31, 0xFF	; 255
    5c6c:	cf 1a       	sub	r12, r31
    5c6e:	df 0a       	sbc	r13, r31
    5c70:	8f ef       	ldi	r24, 0xFF	; 255
    5c72:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
    5c76:	f8 01       	movw	r30, r16
    5c78:	80 83       	st	Z, r24
    5c7a:	fa 94       	dec	r15
    5c7c:	86 01       	movw	r16, r12
    5c7e:	03 c0       	rjmp	.+6      	; 0x5c86 <disk_ioctl+0x2e8>
    5c80:	68 94       	set
    5c82:	ff 24       	eor	r15, r15
    5c84:	f2 f8       	bld	r15, 2
    5c86:	f1 10       	cpse	r15, r1
    5c88:	ef cf       	rjmp	.-34     	; 0x5c68 <disk_ioctl+0x2ca>
			res = RES_OK;
    5c8a:	10 e0       	ldi	r17, 0x00	; 0
    5c8c:	36 c0       	rjmp	.+108    	; 0x5cfa <disk_ioctl+0x35c>
		}
		break;

	case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
		if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
    5c8e:	40 e0       	ldi	r20, 0x00	; 0
    5c90:	50 e0       	ldi	r21, 0x00	; 0
    5c92:	ba 01       	movw	r22, r20
    5c94:	8d e8       	ldi	r24, 0x8D	; 141
    5c96:	0e 94 e2 2a 	call	0x55c4	; 0x55c4 <send_cmd>
    5c9a:	81 11       	cpse	r24, r1
    5c9c:	2b c0       	rjmp	.+86     	; 0x5cf4 <disk_ioctl+0x356>
			xchg_spi(0xFF);
    5c9e:	8f ef       	ldi	r24, 0xFF	; 255
    5ca0:	0e 94 1f 2a 	call	0x543e	; 0x543e <xchg_spi>
			if (rcvr_datablock(ptr, 64))
    5ca4:	60 e4       	ldi	r22, 0x40	; 64
    5ca6:	70 e0       	ldi	r23, 0x00	; 0
    5ca8:	c8 01       	movw	r24, r16
    5caa:	0e 94 8d 2a 	call	0x551a	; 0x551a <rcvr_datablock>
    5cae:	89 2b       	or	r24, r25
    5cb0:	19 f5       	brne	.+70     	; 0x5cf8 <disk_ioctl+0x35a>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5cb2:	11 e0       	ldi	r17, 0x01	; 1
    5cb4:	22 c0       	rjmp	.+68     	; 0x5cfa <disk_ioctl+0x35c>
				res = RES_OK;
		}
		break;

	case CTRL_POWER_OFF :	/* Power off */
		power_off();
    5cb6:	0e 94 1b 2a 	call	0x5436	; 0x5436 <power_off>
		Stat |= STA_NOINIT;
    5cba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    5cbe:	81 60       	ori	r24, 0x01	; 1
    5cc0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		res = RES_OK;
    5cc4:	10 e0       	ldi	r17, 0x00	; 0
		break;
    5cc6:	19 c0       	rjmp	.+50     	; 0x5cfa <disk_ioctl+0x35c>

	default:
		res = RES_PARERR;
    5cc8:	14 e0       	ldi	r17, 0x04	; 4
    5cca:	17 c0       	rjmp	.+46     	; 0x5cfa <disk_ioctl+0x35c>

	if (Stat & STA_NOINIT) return RES_NOTRDY;

	switch (cmd) {
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
    5ccc:	10 e0       	ldi	r17, 0x00	; 0
    5cce:	15 c0       	rjmp	.+42     	; 0x5cfa <disk_ioctl+0x35c>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5cd0:	11 e0       	ldi	r17, 0x01	; 1
    5cd2:	13 c0       	rjmp	.+38     	; 0x5cfa <disk_ioctl+0x35c>
    5cd4:	11 e0       	ldi	r17, 0x01	; 1
    5cd6:	11 c0       	rjmp	.+34     	; 0x5cfa <disk_ioctl+0x35c>
    5cd8:	11 e0       	ldi	r17, 0x01	; 1
    5cda:	0f c0       	rjmp	.+30     	; 0x5cfa <disk_ioctl+0x35c>
    5cdc:	11 e0       	ldi	r17, 0x01	; 1
    5cde:	0d c0       	rjmp	.+26     	; 0x5cfa <disk_ioctl+0x35c>
    5ce0:	11 e0       	ldi	r17, 0x01	; 1
    5ce2:	0b c0       	rjmp	.+22     	; 0x5cfa <disk_ioctl+0x35c>
    5ce4:	11 e0       	ldi	r17, 0x01	; 1
    5ce6:	09 c0       	rjmp	.+18     	; 0x5cfa <disk_ioctl+0x35c>
		break;

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
    5ce8:	10 e0       	ldi	r17, 0x00	; 0
    5cea:	07 c0       	rjmp	.+14     	; 0x5cfa <disk_ioctl+0x35c>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5cec:	11 e0       	ldi	r17, 0x01	; 1
    5cee:	05 c0       	rjmp	.+10     	; 0x5cfa <disk_ioctl+0x35c>
		break;

	case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
		if (send_cmd(CMD10, 0) == 0		/* READ_CID */
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
    5cf0:	10 e0       	ldi	r17, 0x00	; 0
    5cf2:	03 c0       	rjmp	.+6      	; 0x5cfa <disk_ioctl+0x35c>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5cf4:	11 e0       	ldi	r17, 0x01	; 1
    5cf6:	01 c0       	rjmp	.+2      	; 0x5cfa <disk_ioctl+0x35c>

	case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
		if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
			xchg_spi(0xFF);
			if (rcvr_datablock(ptr, 64))
				res = RES_OK;
    5cf8:	10 e0       	ldi	r17, 0x00	; 0

	default:
		res = RES_PARERR;
	}

	deselect();
    5cfa:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <deselect>

	return res;
    5cfe:	81 2f       	mov	r24, r17
    5d00:	03 c0       	rjmp	.+6      	; 0x5d08 <disk_ioctl+0x36a>
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
    5d02:	84 e0       	ldi	r24, 0x04	; 4
    5d04:	01 c0       	rjmp	.+2      	; 0x5d08 <disk_ioctl+0x36a>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
    5d06:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
}
    5d08:	60 96       	adiw	r28, 0x10	; 16
    5d0a:	0f b6       	in	r0, 0x3f	; 63
    5d0c:	f8 94       	cli
    5d0e:	de bf       	out	0x3e, r29	; 62
    5d10:	0f be       	out	0x3f, r0	; 63
    5d12:	cd bf       	out	0x3d, r28	; 61
    5d14:	df 91       	pop	r29
    5d16:	cf 91       	pop	r28
    5d18:	1f 91       	pop	r17
    5d1a:	0f 91       	pop	r16
    5d1c:	ff 90       	pop	r15
    5d1e:	df 90       	pop	r13
    5d20:	cf 90       	pop	r12
    5d22:	08 95       	ret

00005d24 <I2C_MasterInit>:
{
	// prescalar = 1 (TWPS 00 - doesn't need changing)
	// TWBR = 12  0x0C to give 400kHz
	// SDA PC4 (A4/D18); SCL PC5 (A5/D19)
	
	TWSR = 0x00;	// Sets the two prescalar bits (bits 0 and 1 of TWSR) to 0 to give a bit rate prescalar of 1
    5d24:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = 0x0C;  // TWBR = 12  (0x0C) to give 400kHz
    5d28:	8c e0       	ldi	r24, 0x0C	; 12
    5d2a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5d2e:	08 95       	ret

00005d30 <I2C_start>:

}

void I2C_start(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
    5d30:	84 ea       	ldi	r24, 0xA4	; 164
    5d32:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while ((TWCR & (1<<TWINT)) == 0);
    5d36:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d3a:	88 23       	and	r24, r24
    5d3c:	e4 f7       	brge	.-8      	; 0x5d36 <I2C_start+0x6>
}
    5d3e:	08 95       	ret

00005d40 <I2C_stop>:

void I2C_stop(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
    5d40:	84 e9       	ldi	r24, 0x94	; 148
    5d42:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d46:	08 95       	ret

00005d48 <I2C_MasterTransmitAddress>:
}

void I2C_MasterTransmitAddress(char D_Addr, char R_Addr)
{
	TWDR = D_Addr;
    5d48:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT)|(1<<TWEN);
    5d4c:	84 e8       	ldi	r24, 0x84	; 132
    5d4e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while ((TWCR & (1<<TWINT)) == 0);
    5d52:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d56:	88 23       	and	r24, r24
    5d58:	e4 f7       	brge	.-8      	; 0x5d52 <I2C_MasterTransmitAddress+0xa>
	
	TWDR = R_Addr;
    5d5a:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT)|(1<<TWEN);
    5d5e:	84 e8       	ldi	r24, 0x84	; 132
    5d60:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while ((TWCR & (1<<TWINT)) == 0);
    5d64:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d68:	88 23       	and	r24, r24
    5d6a:	e4 f7       	brge	.-8      	; 0x5d64 <I2C_MasterTransmitAddress+0x1c>
}
    5d6c:	08 95       	ret

00005d6e <I2C_MasterTransmitData>:

void I2C_MasterTransmitData(char T_Data)
{
	TWDR = T_Data;
    5d6e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT)|(1<<TWEN);
    5d72:	84 e8       	ldi	r24, 0x84	; 132
    5d74:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while ((TWCR & (1<<TWINT)) == 0);
    5d78:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d7c:	88 23       	and	r24, r24
    5d7e:	e4 f7       	brge	.-8      	; 0x5d78 <I2C_MasterTransmitData+0xa>
}
    5d80:	08 95       	ret

00005d82 <I2C_MasterReceiveData>:

char I2C_MasterReceiveData(char D_Addr)
{	
	TWDR = D_Addr|1;
    5d82:	81 60       	ori	r24, 0x01	; 1
    5d84:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT)|(1<<TWEN);
    5d88:	84 e8       	ldi	r24, 0x84	; 132
    5d8a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while ((TWCR & (1<<TWINT)) == 0);
    5d8e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d92:	88 23       	and	r24, r24
    5d94:	e4 f7       	brge	.-8      	; 0x5d8e <I2C_MasterReceiveData+0xc>

	TWCR = (1<<TWINT)|(1<<TWEN);
    5d96:	84 e8       	ldi	r24, 0x84	; 132
    5d98:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while ((TWCR & (1<<TWINT)) == 0);
    5d9c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5da0:	88 23       	and	r24, r24
    5da2:	e4 f7       	brge	.-8      	; 0x5d9c <I2C_MasterReceiveData+0x1a>
	return TWDR;
    5da4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
    5da8:	08 95       	ret

00005daa <I2C_MasterTransmitByte>:

void I2C_MasterTransmitByte(char D_Addr, char R_Addr, char T_Data)
{
    5daa:	1f 93       	push	r17
    5dac:	cf 93       	push	r28
    5dae:	df 93       	push	r29
    5db0:	d8 2f       	mov	r29, r24
    5db2:	16 2f       	mov	r17, r22
    5db4:	c4 2f       	mov	r28, r20
	I2C_start();
    5db6:	0e 94 98 2e 	call	0x5d30	; 0x5d30 <I2C_start>
	I2C_MasterTransmitAddress(D_Addr,R_Addr);
    5dba:	61 2f       	mov	r22, r17
    5dbc:	8d 2f       	mov	r24, r29
    5dbe:	0e 94 a4 2e 	call	0x5d48	; 0x5d48 <I2C_MasterTransmitAddress>
	I2C_MasterTransmitData(T_Data);
    5dc2:	8c 2f       	mov	r24, r28
    5dc4:	0e 94 b7 2e 	call	0x5d6e	; 0x5d6e <I2C_MasterTransmitData>
	I2C_stop();
    5dc8:	0e 94 a0 2e 	call	0x5d40	; 0x5d40 <I2C_stop>
}
    5dcc:	df 91       	pop	r29
    5dce:	cf 91       	pop	r28
    5dd0:	1f 91       	pop	r17
    5dd2:	08 95       	ret

00005dd4 <I2C_MasterReceiveByte>:

char I2C_MasterReceiveByte(char D_Addr, char R_Addr)
{
    5dd4:	cf 93       	push	r28
    5dd6:	df 93       	push	r29
    5dd8:	c8 2f       	mov	r28, r24
    5dda:	d6 2f       	mov	r29, r22
	char R_Data;
	I2C_start();
    5ddc:	0e 94 98 2e 	call	0x5d30	; 0x5d30 <I2C_start>
	I2C_MasterTransmitAddress(D_Addr,R_Addr);
    5de0:	6d 2f       	mov	r22, r29
    5de2:	8c 2f       	mov	r24, r28
    5de4:	0e 94 a4 2e 	call	0x5d48	; 0x5d48 <I2C_MasterTransmitAddress>
	I2C_start();
    5de8:	0e 94 98 2e 	call	0x5d30	; 0x5d30 <I2C_start>
	R_Data = I2C_MasterReceiveData(D_Addr);
    5dec:	8c 2f       	mov	r24, r28
    5dee:	0e 94 c1 2e 	call	0x5d82	; 0x5d82 <I2C_MasterReceiveData>
    5df2:	c8 2f       	mov	r28, r24
	I2C_stop();
    5df4:	0e 94 a0 2e 	call	0x5d40	; 0x5d40 <I2C_stop>
	return R_Data;
    5df8:	8c 2f       	mov	r24, r28
    5dfa:	df 91       	pop	r29
    5dfc:	cf 91       	pop	r28
    5dfe:	08 95       	ret

00005e00 <init_sd_card>:

FATFS fs;		/* Filesystem object for each logical drive */
FIL fp;

void init_sd_card(void)
{
    5e00:	cf 93       	push	r28
    5e02:	df 93       	push	r29
    5e04:	00 d0       	rcall	.+0      	; 0x5e06 <init_sd_card+0x6>
    5e06:	cd b7       	in	r28, 0x3d	; 61
    5e08:	de b7       	in	r29, 0x3e	; 62
	UINT bw;
	FRESULT rc;
	BYTE buff[64];

	/* Mount volume */
	rc = f_mount(&fs,"",0);
    5e0a:	40 e0       	ldi	r20, 0x00	; 0
    5e0c:	68 e2       	ldi	r22, 0x28	; 40
    5e0e:	72 e0       	ldi	r23, 0x02	; 2
    5e10:	84 e7       	ldi	r24, 0x74	; 116
    5e12:	93 e0       	ldi	r25, 0x03	; 3
    5e14:	0e 94 e0 23 	call	0x47c0	; 0x47c0 <f_mount>
	if (rc == FR_OK){
    5e18:	81 11       	cpse	r24, r1
    5e1a:	18 c0       	rjmp	.+48     	; 0x5e4c <init_sd_card+0x4c>
		// Yellow LED on if mounted
			
		PORTD|=1<<PD4;
    5e1c:	8b b1       	in	r24, 0x0b	; 11
    5e1e:	80 61       	ori	r24, 0x10	; 16
    5e20:	8b b9       	out	0x0b, r24	; 11
    5e22:	2f ef       	ldi	r18, 0xFF	; 255
    5e24:	83 ed       	ldi	r24, 0xD3	; 211
    5e26:	90 e3       	ldi	r25, 0x30	; 48
    5e28:	21 50       	subi	r18, 0x01	; 1
    5e2a:	80 40       	sbci	r24, 0x00	; 0
    5e2c:	90 40       	sbci	r25, 0x00	; 0
    5e2e:	e1 f7       	brne	.-8      	; 0x5e28 <init_sd_card+0x28>
    5e30:	00 c0       	rjmp	.+0      	; 0x5e32 <init_sd_card+0x32>
    5e32:	00 00       	nop
		_delay_ms(1000);
		PORTD&=~(1<<PD4);
    5e34:	8b b1       	in	r24, 0x0b	; 11
    5e36:	8f 7e       	andi	r24, 0xEF	; 239
    5e38:	8b b9       	out	0x0b, r24	; 11
    5e3a:	2f ef       	ldi	r18, 0xFF	; 255
    5e3c:	83 ed       	ldi	r24, 0xD3	; 211
    5e3e:	90 e3       	ldi	r25, 0x30	; 48
    5e40:	21 50       	subi	r18, 0x01	; 1
    5e42:	80 40       	sbci	r24, 0x00	; 0
    5e44:	90 40       	sbci	r25, 0x00	; 0
    5e46:	e1 f7       	brne	.-8      	; 0x5e40 <init_sd_card+0x40>
    5e48:	00 c0       	rjmp	.+0      	; 0x5e4a <init_sd_card+0x4a>
    5e4a:	00 00       	nop
		_delay_ms(1000);
	}


	/* Open file */
	rc = f_open(&fp,"rocketdata.txt", FA_WRITE | FA_CREATE_ALWAYS);
    5e4c:	4a e0       	ldi	r20, 0x0A	; 10
    5e4e:	62 ee       	ldi	r22, 0xE2	; 226
    5e50:	71 e0       	ldi	r23, 0x01	; 1
    5e52:	84 e5       	ldi	r24, 0x54	; 84
    5e54:	93 e0       	ldi	r25, 0x03	; 3
    5e56:	0e 94 2a 24 	call	0x4854	; 0x4854 <f_open>
	if (rc == FR_OK){
    5e5a:	81 11       	cpse	r24, r1
    5e5c:	18 c0       	rjmp	.+48     	; 0x5e8e <init_sd_card+0x8e>
		// Yellow LED on if opened
	
		PORTD|=1<<PD4;
    5e5e:	8b b1       	in	r24, 0x0b	; 11
    5e60:	80 61       	ori	r24, 0x10	; 16
    5e62:	8b b9       	out	0x0b, r24	; 11
    5e64:	2f ef       	ldi	r18, 0xFF	; 255
    5e66:	83 ed       	ldi	r24, 0xD3	; 211
    5e68:	90 e3       	ldi	r25, 0x30	; 48
    5e6a:	21 50       	subi	r18, 0x01	; 1
    5e6c:	80 40       	sbci	r24, 0x00	; 0
    5e6e:	90 40       	sbci	r25, 0x00	; 0
    5e70:	e1 f7       	brne	.-8      	; 0x5e6a <init_sd_card+0x6a>
    5e72:	00 c0       	rjmp	.+0      	; 0x5e74 <init_sd_card+0x74>
    5e74:	00 00       	nop
		_delay_ms(1000);
		PORTD&=~(1<<PD4);
    5e76:	8b b1       	in	r24, 0x0b	; 11
    5e78:	8f 7e       	andi	r24, 0xEF	; 239
    5e7a:	8b b9       	out	0x0b, r24	; 11
    5e7c:	2f ef       	ldi	r18, 0xFF	; 255
    5e7e:	83 ed       	ldi	r24, 0xD3	; 211
    5e80:	90 e3       	ldi	r25, 0x30	; 48
    5e82:	21 50       	subi	r18, 0x01	; 1
    5e84:	80 40       	sbci	r24, 0x00	; 0
    5e86:	90 40       	sbci	r25, 0x00	; 0
    5e88:	e1 f7       	brne	.-8      	; 0x5e82 <init_sd_card+0x82>
    5e8a:	00 c0       	rjmp	.+0      	; 0x5e8c <init_sd_card+0x8c>
    5e8c:	00 00       	nop
		_delay_ms(1000);
	}
	
	// Write file header
	rc = f_write(&fp, "Columns are accn_x accn_y accn_z gyro_x gyro_y gyro_z\n\n", 55, &bw);
    5e8e:	9e 01       	movw	r18, r28
    5e90:	2f 5f       	subi	r18, 0xFF	; 255
    5e92:	3f 4f       	sbci	r19, 0xFF	; 255
    5e94:	47 e3       	ldi	r20, 0x37	; 55
    5e96:	50 e0       	ldi	r21, 0x00	; 0
    5e98:	61 ef       	ldi	r22, 0xF1	; 241
    5e9a:	71 e0       	ldi	r23, 0x01	; 1
    5e9c:	84 e5       	ldi	r24, 0x54	; 84
    5e9e:	93 e0       	ldi	r25, 0x03	; 3
    5ea0:	0e 94 41 25 	call	0x4a82	; 0x4a82 <f_write>
	
	if (rc == FR_OK) {
    5ea4:	81 11       	cpse	r24, r1
    5ea6:	03 c0       	rjmp	.+6      	; 0x5eae <init_sd_card+0xae>
		// Yellow LED on if data written
		PORTD|=1<<PD4;
    5ea8:	8b b1       	in	r24, 0x0b	; 11
    5eaa:	80 61       	ori	r24, 0x10	; 16
    5eac:	8b b9       	out	0x0b, r24	; 11
	}	
	
	// Close file to ensure data is saved
	rc = f_close(&fp);
    5eae:	84 e5       	ldi	r24, 0x54	; 84
    5eb0:	93 e0       	ldi	r25, 0x03	; 3
    5eb2:	0e 94 7e 27 	call	0x4efc	; 0x4efc <f_close>
}
    5eb6:	0f 90       	pop	r0
    5eb8:	0f 90       	pop	r0
    5eba:	df 91       	pop	r29
    5ebc:	cf 91       	pop	r28
    5ebe:	08 95       	ret

00005ec0 <SD_sample_write>:

void SD_sample_write(unsigned short *samples){
    5ec0:	0f 93       	push	r16
    5ec2:	1f 93       	push	r17
    5ec4:	cf 93       	push	r28
    5ec6:	df 93       	push	r29
    5ec8:	cd b7       	in	r28, 0x3d	; 61
    5eca:	de b7       	in	r29, 0x3e	; 62
    5ecc:	c2 54       	subi	r28, 0x42	; 66
    5ece:	d1 09       	sbc	r29, r1
    5ed0:	0f b6       	in	r0, 0x3f	; 63
    5ed2:	f8 94       	cli
    5ed4:	de bf       	out	0x3e, r29	; 62
    5ed6:	0f be       	out	0x3f, r0	; 63
    5ed8:	cd bf       	out	0x3d, r28	; 61
    5eda:	8c 01       	movw	r16, r24
	UINT bw;
	FRESULT rc;
	BYTE buff[64];
		
	// Open file
	rc = f_open(&fp,"rocketdata.txt", FA_WRITE | FA_OPEN_ALWAYS);
    5edc:	42 e1       	ldi	r20, 0x12	; 18
    5ede:	62 ee       	ldi	r22, 0xE2	; 226
    5ee0:	71 e0       	ldi	r23, 0x01	; 1
    5ee2:	84 e5       	ldi	r24, 0x54	; 84
    5ee4:	93 e0       	ldi	r25, 0x03	; 3
    5ee6:	0e 94 2a 24 	call	0x4854	; 0x4854 <f_open>
	
	// Format data to send to file on SD card
	rc = sprintf(buff, "%04x %04x %04x %04x %04x %04x\n", samples[0], samples[1], samples[2], samples[3], samples[4], samples[5]);
    5eea:	f8 01       	movw	r30, r16
    5eec:	83 85       	ldd	r24, Z+11	; 0x0b
    5eee:	8f 93       	push	r24
    5ef0:	82 85       	ldd	r24, Z+10	; 0x0a
    5ef2:	8f 93       	push	r24
    5ef4:	81 85       	ldd	r24, Z+9	; 0x09
    5ef6:	8f 93       	push	r24
    5ef8:	80 85       	ldd	r24, Z+8	; 0x08
    5efa:	8f 93       	push	r24
    5efc:	87 81       	ldd	r24, Z+7	; 0x07
    5efe:	8f 93       	push	r24
    5f00:	86 81       	ldd	r24, Z+6	; 0x06
    5f02:	8f 93       	push	r24
    5f04:	85 81       	ldd	r24, Z+5	; 0x05
    5f06:	8f 93       	push	r24
    5f08:	84 81       	ldd	r24, Z+4	; 0x04
    5f0a:	8f 93       	push	r24
    5f0c:	83 81       	ldd	r24, Z+3	; 0x03
    5f0e:	8f 93       	push	r24
    5f10:	82 81       	ldd	r24, Z+2	; 0x02
    5f12:	8f 93       	push	r24
    5f14:	81 81       	ldd	r24, Z+1	; 0x01
    5f16:	8f 93       	push	r24
    5f18:	80 81       	ld	r24, Z
    5f1a:	8f 93       	push	r24
    5f1c:	89 e2       	ldi	r24, 0x29	; 41
    5f1e:	92 e0       	ldi	r25, 0x02	; 2
    5f20:	9f 93       	push	r25
    5f22:	8f 93       	push	r24
    5f24:	8e 01       	movw	r16, r28
    5f26:	0d 5f       	subi	r16, 0xFD	; 253
    5f28:	1f 4f       	sbci	r17, 0xFF	; 255
    5f2a:	1f 93       	push	r17
    5f2c:	0f 93       	push	r16
    5f2e:	0e 94 0f 30 	call	0x601e	; 0x601e <sprintf>
	
	// Find last line of file
	rc = f_lseek(&fp, f_size(&fp));
    5f32:	40 91 5e 03 	lds	r20, 0x035E	; 0x80035e <fp+0xa>
    5f36:	50 91 5f 03 	lds	r21, 0x035F	; 0x80035f <fp+0xb>
    5f3a:	60 91 60 03 	lds	r22, 0x0360	; 0x800360 <fp+0xc>
    5f3e:	70 91 61 03 	lds	r23, 0x0361	; 0x800361 <fp+0xd>
    5f42:	84 e5       	ldi	r24, 0x54	; 84
    5f44:	93 e0       	ldi	r25, 0x03	; 3
    5f46:	0e 94 8f 27 	call	0x4f1e	; 0x4f1e <f_lseek>
	
	// Write data to file
	rc = f_write(&fp, &buff, 30, &bw);
    5f4a:	9e 01       	movw	r18, r28
    5f4c:	2f 5f       	subi	r18, 0xFF	; 255
    5f4e:	3f 4f       	sbci	r19, 0xFF	; 255
    5f50:	4e e1       	ldi	r20, 0x1E	; 30
    5f52:	50 e0       	ldi	r21, 0x00	; 0
    5f54:	b8 01       	movw	r22, r16
    5f56:	84 e5       	ldi	r24, 0x54	; 84
    5f58:	93 e0       	ldi	r25, 0x03	; 3
    5f5a:	0e 94 41 25 	call	0x4a82	; 0x4a82 <f_write>
	
	// Red LED on if data written successfully
	if(rc == FR_OK){
    5f5e:	0f b6       	in	r0, 0x3f	; 63
    5f60:	f8 94       	cli
    5f62:	de bf       	out	0x3e, r29	; 62
    5f64:	0f be       	out	0x3f, r0	; 63
    5f66:	cd bf       	out	0x3d, r28	; 61
    5f68:	81 11       	cpse	r24, r1
    5f6a:	03 c0       	rjmp	.+6      	; 0x5f72 <SD_sample_write+0xb2>
		PORTD|=(1<<PD5);
    5f6c:	8b b1       	in	r24, 0x0b	; 11
    5f6e:	80 62       	ori	r24, 0x20	; 32
    5f70:	8b b9       	out	0x0b, r24	; 11
	}
	
	// Close file to ensure data is saved	
	rc = f_close(&fp);
    5f72:	84 e5       	ldi	r24, 0x54	; 84
    5f74:	93 e0       	ldi	r25, 0x03	; 3
    5f76:	0e 94 7e 27 	call	0x4efc	; 0x4efc <f_close>
		
}
    5f7a:	ce 5b       	subi	r28, 0xBE	; 190
    5f7c:	df 4f       	sbci	r29, 0xFF	; 255
    5f7e:	0f b6       	in	r0, 0x3f	; 63
    5f80:	f8 94       	cli
    5f82:	de bf       	out	0x3e, r29	; 62
    5f84:	0f be       	out	0x3f, r0	; 63
    5f86:	cd bf       	out	0x3d, r28	; 61
    5f88:	df 91       	pop	r29
    5f8a:	cf 91       	pop	r28
    5f8c:	1f 91       	pop	r17
    5f8e:	0f 91       	pop	r16
    5f90:	08 95       	ret

00005f92 <get_fattime>:
DWORD get_fattime (void)
{
	
	/* Pack date and time into a DWORD variable */
	return	 0;
    5f92:	60 e0       	ldi	r22, 0x00	; 0
    5f94:	70 e0       	ldi	r23, 0x00	; 0
    5f96:	cb 01       	movw	r24, r22
    5f98:	08 95       	ret

00005f9a <__udivmodsi4>:
    5f9a:	a1 e2       	ldi	r26, 0x21	; 33
    5f9c:	1a 2e       	mov	r1, r26
    5f9e:	aa 1b       	sub	r26, r26
    5fa0:	bb 1b       	sub	r27, r27
    5fa2:	fd 01       	movw	r30, r26
    5fa4:	0d c0       	rjmp	.+26     	; 0x5fc0 <__udivmodsi4_ep>

00005fa6 <__udivmodsi4_loop>:
    5fa6:	aa 1f       	adc	r26, r26
    5fa8:	bb 1f       	adc	r27, r27
    5faa:	ee 1f       	adc	r30, r30
    5fac:	ff 1f       	adc	r31, r31
    5fae:	a2 17       	cp	r26, r18
    5fb0:	b3 07       	cpc	r27, r19
    5fb2:	e4 07       	cpc	r30, r20
    5fb4:	f5 07       	cpc	r31, r21
    5fb6:	20 f0       	brcs	.+8      	; 0x5fc0 <__udivmodsi4_ep>
    5fb8:	a2 1b       	sub	r26, r18
    5fba:	b3 0b       	sbc	r27, r19
    5fbc:	e4 0b       	sbc	r30, r20
    5fbe:	f5 0b       	sbc	r31, r21

00005fc0 <__udivmodsi4_ep>:
    5fc0:	66 1f       	adc	r22, r22
    5fc2:	77 1f       	adc	r23, r23
    5fc4:	88 1f       	adc	r24, r24
    5fc6:	99 1f       	adc	r25, r25
    5fc8:	1a 94       	dec	r1
    5fca:	69 f7       	brne	.-38     	; 0x5fa6 <__udivmodsi4_loop>
    5fcc:	60 95       	com	r22
    5fce:	70 95       	com	r23
    5fd0:	80 95       	com	r24
    5fd2:	90 95       	com	r25
    5fd4:	9b 01       	movw	r18, r22
    5fd6:	ac 01       	movw	r20, r24
    5fd8:	bd 01       	movw	r22, r26
    5fda:	cf 01       	movw	r24, r30
    5fdc:	08 95       	ret

00005fde <__tablejump2__>:
    5fde:	ee 0f       	add	r30, r30
    5fe0:	ff 1f       	adc	r31, r31
    5fe2:	05 90       	lpm	r0, Z+
    5fe4:	f4 91       	lpm	r31, Z
    5fe6:	e0 2d       	mov	r30, r0
    5fe8:	09 94       	ijmp

00005fea <__umulhisi3>:
    5fea:	a2 9f       	mul	r26, r18
    5fec:	b0 01       	movw	r22, r0
    5fee:	b3 9f       	mul	r27, r19
    5ff0:	c0 01       	movw	r24, r0
    5ff2:	a3 9f       	mul	r26, r19
    5ff4:	70 0d       	add	r23, r0
    5ff6:	81 1d       	adc	r24, r1
    5ff8:	11 24       	eor	r1, r1
    5ffa:	91 1d       	adc	r25, r1
    5ffc:	b2 9f       	mul	r27, r18
    5ffe:	70 0d       	add	r23, r0
    6000:	81 1d       	adc	r24, r1
    6002:	11 24       	eor	r1, r1
    6004:	91 1d       	adc	r25, r1
    6006:	08 95       	ret

00006008 <__muluhisi3>:
    6008:	0e 94 f5 2f 	call	0x5fea	; 0x5fea <__umulhisi3>
    600c:	a5 9f       	mul	r26, r21
    600e:	90 0d       	add	r25, r0
    6010:	b4 9f       	mul	r27, r20
    6012:	90 0d       	add	r25, r0
    6014:	a4 9f       	mul	r26, r20
    6016:	80 0d       	add	r24, r0
    6018:	91 1d       	adc	r25, r1
    601a:	11 24       	eor	r1, r1
    601c:	08 95       	ret

0000601e <sprintf>:
    601e:	ae e0       	ldi	r26, 0x0E	; 14
    6020:	b0 e0       	ldi	r27, 0x00	; 0
    6022:	e5 e1       	ldi	r30, 0x15	; 21
    6024:	f0 e3       	ldi	r31, 0x30	; 48
    6026:	0c 94 d0 32 	jmp	0x65a0	; 0x65a0 <__prologue_saves__+0x1c>
    602a:	0d 89       	ldd	r16, Y+21	; 0x15
    602c:	1e 89       	ldd	r17, Y+22	; 0x16
    602e:	86 e0       	ldi	r24, 0x06	; 6
    6030:	8c 83       	std	Y+4, r24	; 0x04
    6032:	1a 83       	std	Y+2, r17	; 0x02
    6034:	09 83       	std	Y+1, r16	; 0x01
    6036:	8f ef       	ldi	r24, 0xFF	; 255
    6038:	9f e7       	ldi	r25, 0x7F	; 127
    603a:	9e 83       	std	Y+6, r25	; 0x06
    603c:	8d 83       	std	Y+5, r24	; 0x05
    603e:	ae 01       	movw	r20, r28
    6040:	47 5e       	subi	r20, 0xE7	; 231
    6042:	5f 4f       	sbci	r21, 0xFF	; 255
    6044:	6f 89       	ldd	r22, Y+23	; 0x17
    6046:	78 8d       	ldd	r23, Y+24	; 0x18
    6048:	ce 01       	movw	r24, r28
    604a:	01 96       	adiw	r24, 0x01	; 1
    604c:	0e 94 31 30 	call	0x6062	; 0x6062 <vfprintf>
    6050:	ef 81       	ldd	r30, Y+7	; 0x07
    6052:	f8 85       	ldd	r31, Y+8	; 0x08
    6054:	e0 0f       	add	r30, r16
    6056:	f1 1f       	adc	r31, r17
    6058:	10 82       	st	Z, r1
    605a:	2e 96       	adiw	r28, 0x0e	; 14
    605c:	e4 e0       	ldi	r30, 0x04	; 4
    605e:	0c 94 ec 32 	jmp	0x65d8	; 0x65d8 <__epilogue_restores__+0x1c>

00006062 <vfprintf>:
    6062:	ab e0       	ldi	r26, 0x0B	; 11
    6064:	b0 e0       	ldi	r27, 0x00	; 0
    6066:	e7 e3       	ldi	r30, 0x37	; 55
    6068:	f0 e3       	ldi	r31, 0x30	; 48
    606a:	0c 94 c2 32 	jmp	0x6584	; 0x6584 <__prologue_saves__>
    606e:	6c 01       	movw	r12, r24
    6070:	7b 01       	movw	r14, r22
    6072:	8a 01       	movw	r16, r20
    6074:	fc 01       	movw	r30, r24
    6076:	17 82       	std	Z+7, r1	; 0x07
    6078:	16 82       	std	Z+6, r1	; 0x06
    607a:	83 81       	ldd	r24, Z+3	; 0x03
    607c:	81 ff       	sbrs	r24, 1
    607e:	cc c1       	rjmp	.+920    	; 0x6418 <vfprintf+0x3b6>
    6080:	ce 01       	movw	r24, r28
    6082:	01 96       	adiw	r24, 0x01	; 1
    6084:	3c 01       	movw	r6, r24
    6086:	f6 01       	movw	r30, r12
    6088:	93 81       	ldd	r25, Z+3	; 0x03
    608a:	f7 01       	movw	r30, r14
    608c:	93 fd       	sbrc	r25, 3
    608e:	85 91       	lpm	r24, Z+
    6090:	93 ff       	sbrs	r25, 3
    6092:	81 91       	ld	r24, Z+
    6094:	7f 01       	movw	r14, r30
    6096:	88 23       	and	r24, r24
    6098:	09 f4       	brne	.+2      	; 0x609c <vfprintf+0x3a>
    609a:	ba c1       	rjmp	.+884    	; 0x6410 <vfprintf+0x3ae>
    609c:	85 32       	cpi	r24, 0x25	; 37
    609e:	39 f4       	brne	.+14     	; 0x60ae <vfprintf+0x4c>
    60a0:	93 fd       	sbrc	r25, 3
    60a2:	85 91       	lpm	r24, Z+
    60a4:	93 ff       	sbrs	r25, 3
    60a6:	81 91       	ld	r24, Z+
    60a8:	7f 01       	movw	r14, r30
    60aa:	85 32       	cpi	r24, 0x25	; 37
    60ac:	29 f4       	brne	.+10     	; 0x60b8 <vfprintf+0x56>
    60ae:	b6 01       	movw	r22, r12
    60b0:	90 e0       	ldi	r25, 0x00	; 0
    60b2:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    60b6:	e7 cf       	rjmp	.-50     	; 0x6086 <vfprintf+0x24>
    60b8:	91 2c       	mov	r9, r1
    60ba:	21 2c       	mov	r2, r1
    60bc:	31 2c       	mov	r3, r1
    60be:	ff e1       	ldi	r31, 0x1F	; 31
    60c0:	f3 15       	cp	r31, r3
    60c2:	d8 f0       	brcs	.+54     	; 0x60fa <vfprintf+0x98>
    60c4:	8b 32       	cpi	r24, 0x2B	; 43
    60c6:	79 f0       	breq	.+30     	; 0x60e6 <vfprintf+0x84>
    60c8:	38 f4       	brcc	.+14     	; 0x60d8 <vfprintf+0x76>
    60ca:	80 32       	cpi	r24, 0x20	; 32
    60cc:	79 f0       	breq	.+30     	; 0x60ec <vfprintf+0x8a>
    60ce:	83 32       	cpi	r24, 0x23	; 35
    60d0:	a1 f4       	brne	.+40     	; 0x60fa <vfprintf+0x98>
    60d2:	23 2d       	mov	r18, r3
    60d4:	20 61       	ori	r18, 0x10	; 16
    60d6:	1d c0       	rjmp	.+58     	; 0x6112 <vfprintf+0xb0>
    60d8:	8d 32       	cpi	r24, 0x2D	; 45
    60da:	61 f0       	breq	.+24     	; 0x60f4 <vfprintf+0x92>
    60dc:	80 33       	cpi	r24, 0x30	; 48
    60de:	69 f4       	brne	.+26     	; 0x60fa <vfprintf+0x98>
    60e0:	23 2d       	mov	r18, r3
    60e2:	21 60       	ori	r18, 0x01	; 1
    60e4:	16 c0       	rjmp	.+44     	; 0x6112 <vfprintf+0xb0>
    60e6:	83 2d       	mov	r24, r3
    60e8:	82 60       	ori	r24, 0x02	; 2
    60ea:	38 2e       	mov	r3, r24
    60ec:	e3 2d       	mov	r30, r3
    60ee:	e4 60       	ori	r30, 0x04	; 4
    60f0:	3e 2e       	mov	r3, r30
    60f2:	2a c0       	rjmp	.+84     	; 0x6148 <vfprintf+0xe6>
    60f4:	f3 2d       	mov	r31, r3
    60f6:	f8 60       	ori	r31, 0x08	; 8
    60f8:	1d c0       	rjmp	.+58     	; 0x6134 <vfprintf+0xd2>
    60fa:	37 fc       	sbrc	r3, 7
    60fc:	2d c0       	rjmp	.+90     	; 0x6158 <vfprintf+0xf6>
    60fe:	20 ed       	ldi	r18, 0xD0	; 208
    6100:	28 0f       	add	r18, r24
    6102:	2a 30       	cpi	r18, 0x0A	; 10
    6104:	40 f0       	brcs	.+16     	; 0x6116 <vfprintf+0xb4>
    6106:	8e 32       	cpi	r24, 0x2E	; 46
    6108:	b9 f4       	brne	.+46     	; 0x6138 <vfprintf+0xd6>
    610a:	36 fc       	sbrc	r3, 6
    610c:	81 c1       	rjmp	.+770    	; 0x6410 <vfprintf+0x3ae>
    610e:	23 2d       	mov	r18, r3
    6110:	20 64       	ori	r18, 0x40	; 64
    6112:	32 2e       	mov	r3, r18
    6114:	19 c0       	rjmp	.+50     	; 0x6148 <vfprintf+0xe6>
    6116:	36 fe       	sbrs	r3, 6
    6118:	06 c0       	rjmp	.+12     	; 0x6126 <vfprintf+0xc4>
    611a:	8a e0       	ldi	r24, 0x0A	; 10
    611c:	98 9e       	mul	r9, r24
    611e:	20 0d       	add	r18, r0
    6120:	11 24       	eor	r1, r1
    6122:	92 2e       	mov	r9, r18
    6124:	11 c0       	rjmp	.+34     	; 0x6148 <vfprintf+0xe6>
    6126:	ea e0       	ldi	r30, 0x0A	; 10
    6128:	2e 9e       	mul	r2, r30
    612a:	20 0d       	add	r18, r0
    612c:	11 24       	eor	r1, r1
    612e:	22 2e       	mov	r2, r18
    6130:	f3 2d       	mov	r31, r3
    6132:	f0 62       	ori	r31, 0x20	; 32
    6134:	3f 2e       	mov	r3, r31
    6136:	08 c0       	rjmp	.+16     	; 0x6148 <vfprintf+0xe6>
    6138:	8c 36       	cpi	r24, 0x6C	; 108
    613a:	21 f4       	brne	.+8      	; 0x6144 <vfprintf+0xe2>
    613c:	83 2d       	mov	r24, r3
    613e:	80 68       	ori	r24, 0x80	; 128
    6140:	38 2e       	mov	r3, r24
    6142:	02 c0       	rjmp	.+4      	; 0x6148 <vfprintf+0xe6>
    6144:	88 36       	cpi	r24, 0x68	; 104
    6146:	41 f4       	brne	.+16     	; 0x6158 <vfprintf+0xf6>
    6148:	f7 01       	movw	r30, r14
    614a:	93 fd       	sbrc	r25, 3
    614c:	85 91       	lpm	r24, Z+
    614e:	93 ff       	sbrs	r25, 3
    6150:	81 91       	ld	r24, Z+
    6152:	7f 01       	movw	r14, r30
    6154:	81 11       	cpse	r24, r1
    6156:	b3 cf       	rjmp	.-154    	; 0x60be <vfprintf+0x5c>
    6158:	98 2f       	mov	r25, r24
    615a:	9f 7d       	andi	r25, 0xDF	; 223
    615c:	95 54       	subi	r25, 0x45	; 69
    615e:	93 30       	cpi	r25, 0x03	; 3
    6160:	28 f4       	brcc	.+10     	; 0x616c <vfprintf+0x10a>
    6162:	0c 5f       	subi	r16, 0xFC	; 252
    6164:	1f 4f       	sbci	r17, 0xFF	; 255
    6166:	9f e3       	ldi	r25, 0x3F	; 63
    6168:	99 83       	std	Y+1, r25	; 0x01
    616a:	0d c0       	rjmp	.+26     	; 0x6186 <vfprintf+0x124>
    616c:	83 36       	cpi	r24, 0x63	; 99
    616e:	31 f0       	breq	.+12     	; 0x617c <vfprintf+0x11a>
    6170:	83 37       	cpi	r24, 0x73	; 115
    6172:	71 f0       	breq	.+28     	; 0x6190 <vfprintf+0x12e>
    6174:	83 35       	cpi	r24, 0x53	; 83
    6176:	09 f0       	breq	.+2      	; 0x617a <vfprintf+0x118>
    6178:	59 c0       	rjmp	.+178    	; 0x622c <vfprintf+0x1ca>
    617a:	21 c0       	rjmp	.+66     	; 0x61be <vfprintf+0x15c>
    617c:	f8 01       	movw	r30, r16
    617e:	80 81       	ld	r24, Z
    6180:	89 83       	std	Y+1, r24	; 0x01
    6182:	0e 5f       	subi	r16, 0xFE	; 254
    6184:	1f 4f       	sbci	r17, 0xFF	; 255
    6186:	88 24       	eor	r8, r8
    6188:	83 94       	inc	r8
    618a:	91 2c       	mov	r9, r1
    618c:	53 01       	movw	r10, r6
    618e:	13 c0       	rjmp	.+38     	; 0x61b6 <vfprintf+0x154>
    6190:	28 01       	movw	r4, r16
    6192:	f2 e0       	ldi	r31, 0x02	; 2
    6194:	4f 0e       	add	r4, r31
    6196:	51 1c       	adc	r5, r1
    6198:	f8 01       	movw	r30, r16
    619a:	a0 80       	ld	r10, Z
    619c:	b1 80       	ldd	r11, Z+1	; 0x01
    619e:	36 fe       	sbrs	r3, 6
    61a0:	03 c0       	rjmp	.+6      	; 0x61a8 <vfprintf+0x146>
    61a2:	69 2d       	mov	r22, r9
    61a4:	70 e0       	ldi	r23, 0x00	; 0
    61a6:	02 c0       	rjmp	.+4      	; 0x61ac <vfprintf+0x14a>
    61a8:	6f ef       	ldi	r22, 0xFF	; 255
    61aa:	7f ef       	ldi	r23, 0xFF	; 255
    61ac:	c5 01       	movw	r24, r10
    61ae:	0e 94 1d 32 	call	0x643a	; 0x643a <strnlen>
    61b2:	4c 01       	movw	r8, r24
    61b4:	82 01       	movw	r16, r4
    61b6:	f3 2d       	mov	r31, r3
    61b8:	ff 77       	andi	r31, 0x7F	; 127
    61ba:	3f 2e       	mov	r3, r31
    61bc:	16 c0       	rjmp	.+44     	; 0x61ea <vfprintf+0x188>
    61be:	28 01       	movw	r4, r16
    61c0:	22 e0       	ldi	r18, 0x02	; 2
    61c2:	42 0e       	add	r4, r18
    61c4:	51 1c       	adc	r5, r1
    61c6:	f8 01       	movw	r30, r16
    61c8:	a0 80       	ld	r10, Z
    61ca:	b1 80       	ldd	r11, Z+1	; 0x01
    61cc:	36 fe       	sbrs	r3, 6
    61ce:	03 c0       	rjmp	.+6      	; 0x61d6 <vfprintf+0x174>
    61d0:	69 2d       	mov	r22, r9
    61d2:	70 e0       	ldi	r23, 0x00	; 0
    61d4:	02 c0       	rjmp	.+4      	; 0x61da <vfprintf+0x178>
    61d6:	6f ef       	ldi	r22, 0xFF	; 255
    61d8:	7f ef       	ldi	r23, 0xFF	; 255
    61da:	c5 01       	movw	r24, r10
    61dc:	0e 94 12 32 	call	0x6424	; 0x6424 <strnlen_P>
    61e0:	4c 01       	movw	r8, r24
    61e2:	f3 2d       	mov	r31, r3
    61e4:	f0 68       	ori	r31, 0x80	; 128
    61e6:	3f 2e       	mov	r3, r31
    61e8:	82 01       	movw	r16, r4
    61ea:	33 fc       	sbrc	r3, 3
    61ec:	1b c0       	rjmp	.+54     	; 0x6224 <vfprintf+0x1c2>
    61ee:	82 2d       	mov	r24, r2
    61f0:	90 e0       	ldi	r25, 0x00	; 0
    61f2:	88 16       	cp	r8, r24
    61f4:	99 06       	cpc	r9, r25
    61f6:	b0 f4       	brcc	.+44     	; 0x6224 <vfprintf+0x1c2>
    61f8:	b6 01       	movw	r22, r12
    61fa:	80 e2       	ldi	r24, 0x20	; 32
    61fc:	90 e0       	ldi	r25, 0x00	; 0
    61fe:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    6202:	2a 94       	dec	r2
    6204:	f4 cf       	rjmp	.-24     	; 0x61ee <vfprintf+0x18c>
    6206:	f5 01       	movw	r30, r10
    6208:	37 fc       	sbrc	r3, 7
    620a:	85 91       	lpm	r24, Z+
    620c:	37 fe       	sbrs	r3, 7
    620e:	81 91       	ld	r24, Z+
    6210:	5f 01       	movw	r10, r30
    6212:	b6 01       	movw	r22, r12
    6214:	90 e0       	ldi	r25, 0x00	; 0
    6216:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    621a:	21 10       	cpse	r2, r1
    621c:	2a 94       	dec	r2
    621e:	21 e0       	ldi	r18, 0x01	; 1
    6220:	82 1a       	sub	r8, r18
    6222:	91 08       	sbc	r9, r1
    6224:	81 14       	cp	r8, r1
    6226:	91 04       	cpc	r9, r1
    6228:	71 f7       	brne	.-36     	; 0x6206 <vfprintf+0x1a4>
    622a:	e8 c0       	rjmp	.+464    	; 0x63fc <vfprintf+0x39a>
    622c:	84 36       	cpi	r24, 0x64	; 100
    622e:	11 f0       	breq	.+4      	; 0x6234 <vfprintf+0x1d2>
    6230:	89 36       	cpi	r24, 0x69	; 105
    6232:	41 f5       	brne	.+80     	; 0x6284 <vfprintf+0x222>
    6234:	f8 01       	movw	r30, r16
    6236:	37 fe       	sbrs	r3, 7
    6238:	07 c0       	rjmp	.+14     	; 0x6248 <vfprintf+0x1e6>
    623a:	60 81       	ld	r22, Z
    623c:	71 81       	ldd	r23, Z+1	; 0x01
    623e:	82 81       	ldd	r24, Z+2	; 0x02
    6240:	93 81       	ldd	r25, Z+3	; 0x03
    6242:	0c 5f       	subi	r16, 0xFC	; 252
    6244:	1f 4f       	sbci	r17, 0xFF	; 255
    6246:	08 c0       	rjmp	.+16     	; 0x6258 <vfprintf+0x1f6>
    6248:	60 81       	ld	r22, Z
    624a:	71 81       	ldd	r23, Z+1	; 0x01
    624c:	07 2e       	mov	r0, r23
    624e:	00 0c       	add	r0, r0
    6250:	88 0b       	sbc	r24, r24
    6252:	99 0b       	sbc	r25, r25
    6254:	0e 5f       	subi	r16, 0xFE	; 254
    6256:	1f 4f       	sbci	r17, 0xFF	; 255
    6258:	f3 2d       	mov	r31, r3
    625a:	ff 76       	andi	r31, 0x6F	; 111
    625c:	3f 2e       	mov	r3, r31
    625e:	97 ff       	sbrs	r25, 7
    6260:	09 c0       	rjmp	.+18     	; 0x6274 <vfprintf+0x212>
    6262:	90 95       	com	r25
    6264:	80 95       	com	r24
    6266:	70 95       	com	r23
    6268:	61 95       	neg	r22
    626a:	7f 4f       	sbci	r23, 0xFF	; 255
    626c:	8f 4f       	sbci	r24, 0xFF	; 255
    626e:	9f 4f       	sbci	r25, 0xFF	; 255
    6270:	f0 68       	ori	r31, 0x80	; 128
    6272:	3f 2e       	mov	r3, r31
    6274:	2a e0       	ldi	r18, 0x0A	; 10
    6276:	30 e0       	ldi	r19, 0x00	; 0
    6278:	a3 01       	movw	r20, r6
    627a:	0e 94 64 32 	call	0x64c8	; 0x64c8 <__ultoa_invert>
    627e:	88 2e       	mov	r8, r24
    6280:	86 18       	sub	r8, r6
    6282:	45 c0       	rjmp	.+138    	; 0x630e <vfprintf+0x2ac>
    6284:	85 37       	cpi	r24, 0x75	; 117
    6286:	31 f4       	brne	.+12     	; 0x6294 <vfprintf+0x232>
    6288:	23 2d       	mov	r18, r3
    628a:	2f 7e       	andi	r18, 0xEF	; 239
    628c:	b2 2e       	mov	r11, r18
    628e:	2a e0       	ldi	r18, 0x0A	; 10
    6290:	30 e0       	ldi	r19, 0x00	; 0
    6292:	25 c0       	rjmp	.+74     	; 0x62de <vfprintf+0x27c>
    6294:	93 2d       	mov	r25, r3
    6296:	99 7f       	andi	r25, 0xF9	; 249
    6298:	b9 2e       	mov	r11, r25
    629a:	8f 36       	cpi	r24, 0x6F	; 111
    629c:	c1 f0       	breq	.+48     	; 0x62ce <vfprintf+0x26c>
    629e:	18 f4       	brcc	.+6      	; 0x62a6 <vfprintf+0x244>
    62a0:	88 35       	cpi	r24, 0x58	; 88
    62a2:	79 f0       	breq	.+30     	; 0x62c2 <vfprintf+0x260>
    62a4:	b5 c0       	rjmp	.+362    	; 0x6410 <vfprintf+0x3ae>
    62a6:	80 37       	cpi	r24, 0x70	; 112
    62a8:	19 f0       	breq	.+6      	; 0x62b0 <vfprintf+0x24e>
    62aa:	88 37       	cpi	r24, 0x78	; 120
    62ac:	21 f0       	breq	.+8      	; 0x62b6 <vfprintf+0x254>
    62ae:	b0 c0       	rjmp	.+352    	; 0x6410 <vfprintf+0x3ae>
    62b0:	e9 2f       	mov	r30, r25
    62b2:	e0 61       	ori	r30, 0x10	; 16
    62b4:	be 2e       	mov	r11, r30
    62b6:	b4 fe       	sbrs	r11, 4
    62b8:	0d c0       	rjmp	.+26     	; 0x62d4 <vfprintf+0x272>
    62ba:	fb 2d       	mov	r31, r11
    62bc:	f4 60       	ori	r31, 0x04	; 4
    62be:	bf 2e       	mov	r11, r31
    62c0:	09 c0       	rjmp	.+18     	; 0x62d4 <vfprintf+0x272>
    62c2:	34 fe       	sbrs	r3, 4
    62c4:	0a c0       	rjmp	.+20     	; 0x62da <vfprintf+0x278>
    62c6:	29 2f       	mov	r18, r25
    62c8:	26 60       	ori	r18, 0x06	; 6
    62ca:	b2 2e       	mov	r11, r18
    62cc:	06 c0       	rjmp	.+12     	; 0x62da <vfprintf+0x278>
    62ce:	28 e0       	ldi	r18, 0x08	; 8
    62d0:	30 e0       	ldi	r19, 0x00	; 0
    62d2:	05 c0       	rjmp	.+10     	; 0x62de <vfprintf+0x27c>
    62d4:	20 e1       	ldi	r18, 0x10	; 16
    62d6:	30 e0       	ldi	r19, 0x00	; 0
    62d8:	02 c0       	rjmp	.+4      	; 0x62de <vfprintf+0x27c>
    62da:	20 e1       	ldi	r18, 0x10	; 16
    62dc:	32 e0       	ldi	r19, 0x02	; 2
    62de:	f8 01       	movw	r30, r16
    62e0:	b7 fe       	sbrs	r11, 7
    62e2:	07 c0       	rjmp	.+14     	; 0x62f2 <vfprintf+0x290>
    62e4:	60 81       	ld	r22, Z
    62e6:	71 81       	ldd	r23, Z+1	; 0x01
    62e8:	82 81       	ldd	r24, Z+2	; 0x02
    62ea:	93 81       	ldd	r25, Z+3	; 0x03
    62ec:	0c 5f       	subi	r16, 0xFC	; 252
    62ee:	1f 4f       	sbci	r17, 0xFF	; 255
    62f0:	06 c0       	rjmp	.+12     	; 0x62fe <vfprintf+0x29c>
    62f2:	60 81       	ld	r22, Z
    62f4:	71 81       	ldd	r23, Z+1	; 0x01
    62f6:	80 e0       	ldi	r24, 0x00	; 0
    62f8:	90 e0       	ldi	r25, 0x00	; 0
    62fa:	0e 5f       	subi	r16, 0xFE	; 254
    62fc:	1f 4f       	sbci	r17, 0xFF	; 255
    62fe:	a3 01       	movw	r20, r6
    6300:	0e 94 64 32 	call	0x64c8	; 0x64c8 <__ultoa_invert>
    6304:	88 2e       	mov	r8, r24
    6306:	86 18       	sub	r8, r6
    6308:	fb 2d       	mov	r31, r11
    630a:	ff 77       	andi	r31, 0x7F	; 127
    630c:	3f 2e       	mov	r3, r31
    630e:	36 fe       	sbrs	r3, 6
    6310:	0d c0       	rjmp	.+26     	; 0x632c <vfprintf+0x2ca>
    6312:	23 2d       	mov	r18, r3
    6314:	2e 7f       	andi	r18, 0xFE	; 254
    6316:	a2 2e       	mov	r10, r18
    6318:	89 14       	cp	r8, r9
    631a:	58 f4       	brcc	.+22     	; 0x6332 <vfprintf+0x2d0>
    631c:	34 fe       	sbrs	r3, 4
    631e:	0b c0       	rjmp	.+22     	; 0x6336 <vfprintf+0x2d4>
    6320:	32 fc       	sbrc	r3, 2
    6322:	09 c0       	rjmp	.+18     	; 0x6336 <vfprintf+0x2d4>
    6324:	83 2d       	mov	r24, r3
    6326:	8e 7e       	andi	r24, 0xEE	; 238
    6328:	a8 2e       	mov	r10, r24
    632a:	05 c0       	rjmp	.+10     	; 0x6336 <vfprintf+0x2d4>
    632c:	b8 2c       	mov	r11, r8
    632e:	a3 2c       	mov	r10, r3
    6330:	03 c0       	rjmp	.+6      	; 0x6338 <vfprintf+0x2d6>
    6332:	b8 2c       	mov	r11, r8
    6334:	01 c0       	rjmp	.+2      	; 0x6338 <vfprintf+0x2d6>
    6336:	b9 2c       	mov	r11, r9
    6338:	a4 fe       	sbrs	r10, 4
    633a:	0f c0       	rjmp	.+30     	; 0x635a <vfprintf+0x2f8>
    633c:	fe 01       	movw	r30, r28
    633e:	e8 0d       	add	r30, r8
    6340:	f1 1d       	adc	r31, r1
    6342:	80 81       	ld	r24, Z
    6344:	80 33       	cpi	r24, 0x30	; 48
    6346:	21 f4       	brne	.+8      	; 0x6350 <vfprintf+0x2ee>
    6348:	9a 2d       	mov	r25, r10
    634a:	99 7e       	andi	r25, 0xE9	; 233
    634c:	a9 2e       	mov	r10, r25
    634e:	09 c0       	rjmp	.+18     	; 0x6362 <vfprintf+0x300>
    6350:	a2 fe       	sbrs	r10, 2
    6352:	06 c0       	rjmp	.+12     	; 0x6360 <vfprintf+0x2fe>
    6354:	b3 94       	inc	r11
    6356:	b3 94       	inc	r11
    6358:	04 c0       	rjmp	.+8      	; 0x6362 <vfprintf+0x300>
    635a:	8a 2d       	mov	r24, r10
    635c:	86 78       	andi	r24, 0x86	; 134
    635e:	09 f0       	breq	.+2      	; 0x6362 <vfprintf+0x300>
    6360:	b3 94       	inc	r11
    6362:	a3 fc       	sbrc	r10, 3
    6364:	11 c0       	rjmp	.+34     	; 0x6388 <vfprintf+0x326>
    6366:	a0 fe       	sbrs	r10, 0
    6368:	06 c0       	rjmp	.+12     	; 0x6376 <vfprintf+0x314>
    636a:	b2 14       	cp	r11, r2
    636c:	88 f4       	brcc	.+34     	; 0x6390 <vfprintf+0x32e>
    636e:	28 0c       	add	r2, r8
    6370:	92 2c       	mov	r9, r2
    6372:	9b 18       	sub	r9, r11
    6374:	0e c0       	rjmp	.+28     	; 0x6392 <vfprintf+0x330>
    6376:	b2 14       	cp	r11, r2
    6378:	60 f4       	brcc	.+24     	; 0x6392 <vfprintf+0x330>
    637a:	b6 01       	movw	r22, r12
    637c:	80 e2       	ldi	r24, 0x20	; 32
    637e:	90 e0       	ldi	r25, 0x00	; 0
    6380:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    6384:	b3 94       	inc	r11
    6386:	f7 cf       	rjmp	.-18     	; 0x6376 <vfprintf+0x314>
    6388:	b2 14       	cp	r11, r2
    638a:	18 f4       	brcc	.+6      	; 0x6392 <vfprintf+0x330>
    638c:	2b 18       	sub	r2, r11
    638e:	02 c0       	rjmp	.+4      	; 0x6394 <vfprintf+0x332>
    6390:	98 2c       	mov	r9, r8
    6392:	21 2c       	mov	r2, r1
    6394:	a4 fe       	sbrs	r10, 4
    6396:	10 c0       	rjmp	.+32     	; 0x63b8 <vfprintf+0x356>
    6398:	b6 01       	movw	r22, r12
    639a:	80 e3       	ldi	r24, 0x30	; 48
    639c:	90 e0       	ldi	r25, 0x00	; 0
    639e:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    63a2:	a2 fe       	sbrs	r10, 2
    63a4:	17 c0       	rjmp	.+46     	; 0x63d4 <vfprintf+0x372>
    63a6:	a1 fc       	sbrc	r10, 1
    63a8:	03 c0       	rjmp	.+6      	; 0x63b0 <vfprintf+0x34e>
    63aa:	88 e7       	ldi	r24, 0x78	; 120
    63ac:	90 e0       	ldi	r25, 0x00	; 0
    63ae:	02 c0       	rjmp	.+4      	; 0x63b4 <vfprintf+0x352>
    63b0:	88 e5       	ldi	r24, 0x58	; 88
    63b2:	90 e0       	ldi	r25, 0x00	; 0
    63b4:	b6 01       	movw	r22, r12
    63b6:	0c c0       	rjmp	.+24     	; 0x63d0 <vfprintf+0x36e>
    63b8:	8a 2d       	mov	r24, r10
    63ba:	86 78       	andi	r24, 0x86	; 134
    63bc:	59 f0       	breq	.+22     	; 0x63d4 <vfprintf+0x372>
    63be:	a1 fe       	sbrs	r10, 1
    63c0:	02 c0       	rjmp	.+4      	; 0x63c6 <vfprintf+0x364>
    63c2:	8b e2       	ldi	r24, 0x2B	; 43
    63c4:	01 c0       	rjmp	.+2      	; 0x63c8 <vfprintf+0x366>
    63c6:	80 e2       	ldi	r24, 0x20	; 32
    63c8:	a7 fc       	sbrc	r10, 7
    63ca:	8d e2       	ldi	r24, 0x2D	; 45
    63cc:	b6 01       	movw	r22, r12
    63ce:	90 e0       	ldi	r25, 0x00	; 0
    63d0:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    63d4:	89 14       	cp	r8, r9
    63d6:	38 f4       	brcc	.+14     	; 0x63e6 <vfprintf+0x384>
    63d8:	b6 01       	movw	r22, r12
    63da:	80 e3       	ldi	r24, 0x30	; 48
    63dc:	90 e0       	ldi	r25, 0x00	; 0
    63de:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    63e2:	9a 94       	dec	r9
    63e4:	f7 cf       	rjmp	.-18     	; 0x63d4 <vfprintf+0x372>
    63e6:	8a 94       	dec	r8
    63e8:	f3 01       	movw	r30, r6
    63ea:	e8 0d       	add	r30, r8
    63ec:	f1 1d       	adc	r31, r1
    63ee:	80 81       	ld	r24, Z
    63f0:	b6 01       	movw	r22, r12
    63f2:	90 e0       	ldi	r25, 0x00	; 0
    63f4:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    63f8:	81 10       	cpse	r8, r1
    63fa:	f5 cf       	rjmp	.-22     	; 0x63e6 <vfprintf+0x384>
    63fc:	22 20       	and	r2, r2
    63fe:	09 f4       	brne	.+2      	; 0x6402 <vfprintf+0x3a0>
    6400:	42 ce       	rjmp	.-892    	; 0x6086 <vfprintf+0x24>
    6402:	b6 01       	movw	r22, r12
    6404:	80 e2       	ldi	r24, 0x20	; 32
    6406:	90 e0       	ldi	r25, 0x00	; 0
    6408:	0e 94 28 32 	call	0x6450	; 0x6450 <fputc>
    640c:	2a 94       	dec	r2
    640e:	f6 cf       	rjmp	.-20     	; 0x63fc <vfprintf+0x39a>
    6410:	f6 01       	movw	r30, r12
    6412:	86 81       	ldd	r24, Z+6	; 0x06
    6414:	97 81       	ldd	r25, Z+7	; 0x07
    6416:	02 c0       	rjmp	.+4      	; 0x641c <vfprintf+0x3ba>
    6418:	8f ef       	ldi	r24, 0xFF	; 255
    641a:	9f ef       	ldi	r25, 0xFF	; 255
    641c:	2b 96       	adiw	r28, 0x0b	; 11
    641e:	e2 e1       	ldi	r30, 0x12	; 18
    6420:	0c 94 de 32 	jmp	0x65bc	; 0x65bc <__epilogue_restores__>

00006424 <strnlen_P>:
    6424:	fc 01       	movw	r30, r24
    6426:	05 90       	lpm	r0, Z+
    6428:	61 50       	subi	r22, 0x01	; 1
    642a:	70 40       	sbci	r23, 0x00	; 0
    642c:	01 10       	cpse	r0, r1
    642e:	d8 f7       	brcc	.-10     	; 0x6426 <strnlen_P+0x2>
    6430:	80 95       	com	r24
    6432:	90 95       	com	r25
    6434:	8e 0f       	add	r24, r30
    6436:	9f 1f       	adc	r25, r31
    6438:	08 95       	ret

0000643a <strnlen>:
    643a:	fc 01       	movw	r30, r24
    643c:	61 50       	subi	r22, 0x01	; 1
    643e:	70 40       	sbci	r23, 0x00	; 0
    6440:	01 90       	ld	r0, Z+
    6442:	01 10       	cpse	r0, r1
    6444:	d8 f7       	brcc	.-10     	; 0x643c <strnlen+0x2>
    6446:	80 95       	com	r24
    6448:	90 95       	com	r25
    644a:	8e 0f       	add	r24, r30
    644c:	9f 1f       	adc	r25, r31
    644e:	08 95       	ret

00006450 <fputc>:
    6450:	0f 93       	push	r16
    6452:	1f 93       	push	r17
    6454:	cf 93       	push	r28
    6456:	df 93       	push	r29
    6458:	fb 01       	movw	r30, r22
    645a:	23 81       	ldd	r18, Z+3	; 0x03
    645c:	21 fd       	sbrc	r18, 1
    645e:	03 c0       	rjmp	.+6      	; 0x6466 <fputc+0x16>
    6460:	8f ef       	ldi	r24, 0xFF	; 255
    6462:	9f ef       	ldi	r25, 0xFF	; 255
    6464:	2c c0       	rjmp	.+88     	; 0x64be <fputc+0x6e>
    6466:	22 ff       	sbrs	r18, 2
    6468:	16 c0       	rjmp	.+44     	; 0x6496 <fputc+0x46>
    646a:	46 81       	ldd	r20, Z+6	; 0x06
    646c:	57 81       	ldd	r21, Z+7	; 0x07
    646e:	24 81       	ldd	r18, Z+4	; 0x04
    6470:	35 81       	ldd	r19, Z+5	; 0x05
    6472:	42 17       	cp	r20, r18
    6474:	53 07       	cpc	r21, r19
    6476:	44 f4       	brge	.+16     	; 0x6488 <fputc+0x38>
    6478:	a0 81       	ld	r26, Z
    647a:	b1 81       	ldd	r27, Z+1	; 0x01
    647c:	9d 01       	movw	r18, r26
    647e:	2f 5f       	subi	r18, 0xFF	; 255
    6480:	3f 4f       	sbci	r19, 0xFF	; 255
    6482:	31 83       	std	Z+1, r19	; 0x01
    6484:	20 83       	st	Z, r18
    6486:	8c 93       	st	X, r24
    6488:	26 81       	ldd	r18, Z+6	; 0x06
    648a:	37 81       	ldd	r19, Z+7	; 0x07
    648c:	2f 5f       	subi	r18, 0xFF	; 255
    648e:	3f 4f       	sbci	r19, 0xFF	; 255
    6490:	37 83       	std	Z+7, r19	; 0x07
    6492:	26 83       	std	Z+6, r18	; 0x06
    6494:	14 c0       	rjmp	.+40     	; 0x64be <fputc+0x6e>
    6496:	8b 01       	movw	r16, r22
    6498:	ec 01       	movw	r28, r24
    649a:	fb 01       	movw	r30, r22
    649c:	00 84       	ldd	r0, Z+8	; 0x08
    649e:	f1 85       	ldd	r31, Z+9	; 0x09
    64a0:	e0 2d       	mov	r30, r0
    64a2:	09 95       	icall
    64a4:	89 2b       	or	r24, r25
    64a6:	e1 f6       	brne	.-72     	; 0x6460 <fputc+0x10>
    64a8:	d8 01       	movw	r26, r16
    64aa:	16 96       	adiw	r26, 0x06	; 6
    64ac:	8d 91       	ld	r24, X+
    64ae:	9c 91       	ld	r25, X
    64b0:	17 97       	sbiw	r26, 0x07	; 7
    64b2:	01 96       	adiw	r24, 0x01	; 1
    64b4:	17 96       	adiw	r26, 0x07	; 7
    64b6:	9c 93       	st	X, r25
    64b8:	8e 93       	st	-X, r24
    64ba:	16 97       	sbiw	r26, 0x06	; 6
    64bc:	ce 01       	movw	r24, r28
    64be:	df 91       	pop	r29
    64c0:	cf 91       	pop	r28
    64c2:	1f 91       	pop	r17
    64c4:	0f 91       	pop	r16
    64c6:	08 95       	ret

000064c8 <__ultoa_invert>:
    64c8:	fa 01       	movw	r30, r20
    64ca:	aa 27       	eor	r26, r26
    64cc:	28 30       	cpi	r18, 0x08	; 8
    64ce:	51 f1       	breq	.+84     	; 0x6524 <__ultoa_invert+0x5c>
    64d0:	20 31       	cpi	r18, 0x10	; 16
    64d2:	81 f1       	breq	.+96     	; 0x6534 <__ultoa_invert+0x6c>
    64d4:	e8 94       	clt
    64d6:	6f 93       	push	r22
    64d8:	6e 7f       	andi	r22, 0xFE	; 254
    64da:	6e 5f       	subi	r22, 0xFE	; 254
    64dc:	7f 4f       	sbci	r23, 0xFF	; 255
    64de:	8f 4f       	sbci	r24, 0xFF	; 255
    64e0:	9f 4f       	sbci	r25, 0xFF	; 255
    64e2:	af 4f       	sbci	r26, 0xFF	; 255
    64e4:	b1 e0       	ldi	r27, 0x01	; 1
    64e6:	3e d0       	rcall	.+124    	; 0x6564 <__ultoa_invert+0x9c>
    64e8:	b4 e0       	ldi	r27, 0x04	; 4
    64ea:	3c d0       	rcall	.+120    	; 0x6564 <__ultoa_invert+0x9c>
    64ec:	67 0f       	add	r22, r23
    64ee:	78 1f       	adc	r23, r24
    64f0:	89 1f       	adc	r24, r25
    64f2:	9a 1f       	adc	r25, r26
    64f4:	a1 1d       	adc	r26, r1
    64f6:	68 0f       	add	r22, r24
    64f8:	79 1f       	adc	r23, r25
    64fa:	8a 1f       	adc	r24, r26
    64fc:	91 1d       	adc	r25, r1
    64fe:	a1 1d       	adc	r26, r1
    6500:	6a 0f       	add	r22, r26
    6502:	71 1d       	adc	r23, r1
    6504:	81 1d       	adc	r24, r1
    6506:	91 1d       	adc	r25, r1
    6508:	a1 1d       	adc	r26, r1
    650a:	20 d0       	rcall	.+64     	; 0x654c <__ultoa_invert+0x84>
    650c:	09 f4       	brne	.+2      	; 0x6510 <__ultoa_invert+0x48>
    650e:	68 94       	set
    6510:	3f 91       	pop	r19
    6512:	2a e0       	ldi	r18, 0x0A	; 10
    6514:	26 9f       	mul	r18, r22
    6516:	11 24       	eor	r1, r1
    6518:	30 19       	sub	r19, r0
    651a:	30 5d       	subi	r19, 0xD0	; 208
    651c:	31 93       	st	Z+, r19
    651e:	de f6       	brtc	.-74     	; 0x64d6 <__ultoa_invert+0xe>
    6520:	cf 01       	movw	r24, r30
    6522:	08 95       	ret
    6524:	46 2f       	mov	r20, r22
    6526:	47 70       	andi	r20, 0x07	; 7
    6528:	40 5d       	subi	r20, 0xD0	; 208
    652a:	41 93       	st	Z+, r20
    652c:	b3 e0       	ldi	r27, 0x03	; 3
    652e:	0f d0       	rcall	.+30     	; 0x654e <__ultoa_invert+0x86>
    6530:	c9 f7       	brne	.-14     	; 0x6524 <__ultoa_invert+0x5c>
    6532:	f6 cf       	rjmp	.-20     	; 0x6520 <__ultoa_invert+0x58>
    6534:	46 2f       	mov	r20, r22
    6536:	4f 70       	andi	r20, 0x0F	; 15
    6538:	40 5d       	subi	r20, 0xD0	; 208
    653a:	4a 33       	cpi	r20, 0x3A	; 58
    653c:	18 f0       	brcs	.+6      	; 0x6544 <__ultoa_invert+0x7c>
    653e:	49 5d       	subi	r20, 0xD9	; 217
    6540:	31 fd       	sbrc	r19, 1
    6542:	40 52       	subi	r20, 0x20	; 32
    6544:	41 93       	st	Z+, r20
    6546:	02 d0       	rcall	.+4      	; 0x654c <__ultoa_invert+0x84>
    6548:	a9 f7       	brne	.-22     	; 0x6534 <__ultoa_invert+0x6c>
    654a:	ea cf       	rjmp	.-44     	; 0x6520 <__ultoa_invert+0x58>
    654c:	b4 e0       	ldi	r27, 0x04	; 4
    654e:	a6 95       	lsr	r26
    6550:	97 95       	ror	r25
    6552:	87 95       	ror	r24
    6554:	77 95       	ror	r23
    6556:	67 95       	ror	r22
    6558:	ba 95       	dec	r27
    655a:	c9 f7       	brne	.-14     	; 0x654e <__ultoa_invert+0x86>
    655c:	00 97       	sbiw	r24, 0x00	; 0
    655e:	61 05       	cpc	r22, r1
    6560:	71 05       	cpc	r23, r1
    6562:	08 95       	ret
    6564:	9b 01       	movw	r18, r22
    6566:	ac 01       	movw	r20, r24
    6568:	0a 2e       	mov	r0, r26
    656a:	06 94       	lsr	r0
    656c:	57 95       	ror	r21
    656e:	47 95       	ror	r20
    6570:	37 95       	ror	r19
    6572:	27 95       	ror	r18
    6574:	ba 95       	dec	r27
    6576:	c9 f7       	brne	.-14     	; 0x656a <__ultoa_invert+0xa2>
    6578:	62 0f       	add	r22, r18
    657a:	73 1f       	adc	r23, r19
    657c:	84 1f       	adc	r24, r20
    657e:	95 1f       	adc	r25, r21
    6580:	a0 1d       	adc	r26, r0
    6582:	08 95       	ret

00006584 <__prologue_saves__>:
    6584:	2f 92       	push	r2
    6586:	3f 92       	push	r3
    6588:	4f 92       	push	r4
    658a:	5f 92       	push	r5
    658c:	6f 92       	push	r6
    658e:	7f 92       	push	r7
    6590:	8f 92       	push	r8
    6592:	9f 92       	push	r9
    6594:	af 92       	push	r10
    6596:	bf 92       	push	r11
    6598:	cf 92       	push	r12
    659a:	df 92       	push	r13
    659c:	ef 92       	push	r14
    659e:	ff 92       	push	r15
    65a0:	0f 93       	push	r16
    65a2:	1f 93       	push	r17
    65a4:	cf 93       	push	r28
    65a6:	df 93       	push	r29
    65a8:	cd b7       	in	r28, 0x3d	; 61
    65aa:	de b7       	in	r29, 0x3e	; 62
    65ac:	ca 1b       	sub	r28, r26
    65ae:	db 0b       	sbc	r29, r27
    65b0:	0f b6       	in	r0, 0x3f	; 63
    65b2:	f8 94       	cli
    65b4:	de bf       	out	0x3e, r29	; 62
    65b6:	0f be       	out	0x3f, r0	; 63
    65b8:	cd bf       	out	0x3d, r28	; 61
    65ba:	09 94       	ijmp

000065bc <__epilogue_restores__>:
    65bc:	2a 88       	ldd	r2, Y+18	; 0x12
    65be:	39 88       	ldd	r3, Y+17	; 0x11
    65c0:	48 88       	ldd	r4, Y+16	; 0x10
    65c2:	5f 84       	ldd	r5, Y+15	; 0x0f
    65c4:	6e 84       	ldd	r6, Y+14	; 0x0e
    65c6:	7d 84       	ldd	r7, Y+13	; 0x0d
    65c8:	8c 84       	ldd	r8, Y+12	; 0x0c
    65ca:	9b 84       	ldd	r9, Y+11	; 0x0b
    65cc:	aa 84       	ldd	r10, Y+10	; 0x0a
    65ce:	b9 84       	ldd	r11, Y+9	; 0x09
    65d0:	c8 84       	ldd	r12, Y+8	; 0x08
    65d2:	df 80       	ldd	r13, Y+7	; 0x07
    65d4:	ee 80       	ldd	r14, Y+6	; 0x06
    65d6:	fd 80       	ldd	r15, Y+5	; 0x05
    65d8:	0c 81       	ldd	r16, Y+4	; 0x04
    65da:	1b 81       	ldd	r17, Y+3	; 0x03
    65dc:	aa 81       	ldd	r26, Y+2	; 0x02
    65de:	b9 81       	ldd	r27, Y+1	; 0x01
    65e0:	ce 0f       	add	r28, r30
    65e2:	d1 1d       	adc	r29, r1
    65e4:	0f b6       	in	r0, 0x3f	; 63
    65e6:	f8 94       	cli
    65e8:	de bf       	out	0x3e, r29	; 62
    65ea:	0f be       	out	0x3f, r0	; 63
    65ec:	cd bf       	out	0x3d, r28	; 61
    65ee:	ed 01       	movw	r28, r26
    65f0:	08 95       	ret

000065f2 <_exit>:
    65f2:	f8 94       	cli

000065f4 <__stop_program>:
    65f4:	ff cf       	rjmp	.-2      	; 0x65f4 <__stop_program>
